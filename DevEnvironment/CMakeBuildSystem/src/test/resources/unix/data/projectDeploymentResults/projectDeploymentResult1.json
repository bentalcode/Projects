{
  "propertyProject": {
    "name": "DevEnvironmentCLion",
    "rootPath": "/home/bental-linux/repositories/Projects/DevEnvironmentCLion",
    "modules": [
      {
        "name": "Base",
        "rootPath": "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base",
        "headerFilesPaths": [
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/BaseException.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/interfaces/DateTime.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/interfaces/ISizableCollection.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/interfaces/IteratorComparator.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/interfaces/IEquatableComparator.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/interfaces/ICollection.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/interfaces/ICalculator.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/interfaces/ITwoDimensionalList.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/interfaces/Intervals.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/interfaces/Interval.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/interfaces/CompareToBuilder.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/interfaces/IBinaryComparator.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/interfaces/IMatrix.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/interfaces/Duration.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/interfaces/EqualBuilder.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/interfaces/IIterable.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/interfaces/IHashCodeProvider.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/interfaces/IList.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/interfaces/IValidator.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/interfaces/LogStreamWriter.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/interfaces/Triple.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/interfaces/ComparatorFactory.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/interfaces/IIterator.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/interfaces/IFinder.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/interfaces/SharedPtr.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/interfaces/IterableComparator.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/interfaces/IIntervalMap.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/interfaces/IComparableComparator.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/interfaces/Strings.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/interfaces/Pair.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/core/StringIterator.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/core/ListIterator.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/core/Position.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/core/Matrix.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/core/TwoDimensionalListIterator.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/core/ComparableComparator.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/core/BaseDependencies.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/core/IntervalMap.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/core/TwoDimensionalList.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/core/ReferenceCountHolder.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/core/List.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/core/DereferenceEquatableComparator.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/core/ReferenceCount.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/core/BaseLogic.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/core/EquatableComparator.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/core/PreCompiled.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/core/IntervalMapIterator.h"
        ],
        "sourceFilesPaths": [
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/build/CMakeFiles/3.16.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/core/PreCompiled.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/core/Position.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/core/LogStreamWriter.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/core/CompareToBuilder.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/core/EqualBuilder.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/core/DateTime.cpp"
        ],
        "cmakeListsFilePath": "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/CMakeLists.txt"
      },
      {
        "name": "DataStructures",
        "rootPath": "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/DataStructures",
        "headerFilesPaths": [
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/DataStructures/DataStructureException.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/DataStructures/interfaces/IteratorOfIteratorCollection.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/DataStructures/core/PreCompiled.h"
        ],
        "sourceFilesPaths": [
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/DataStructures/core/PreCompiled.cpp"
        ],
        "cmakeListsFilePath": "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/DataStructures/CMakeLists.txt",
        "dependentModules": [
          "Base"
        ]
      },
      {
        "name": "Concurrency",
        "rootPath": "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Concurrency",
        "headerFilesPaths": [
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Concurrency/ConcurrencyException.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Concurrency/interfaces/ConcurrentQueue.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Concurrency/core/PreCompiled.h"
        ],
        "sourceFilesPaths": [
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Concurrency/core/PreCompiled.cpp"
        ],
        "cmakeListsFilePath": "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Concurrency/CMakeLists.txt",
        "dependentModules": [
          "Base"
        ]
      },
      {
        "name": "MemoryManagement",
        "rootPath": "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/MemoryManagement",
        "headerFilesPaths": [
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/MemoryManagement/MemoryManagementException.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/MemoryManagement/interfaces/IMemoryPool.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/MemoryManagement/interfaces/ObjectPoolElement.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/MemoryManagement/interfaces/IObjectPool.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/MemoryManagement/interfaces/MemoryPool.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/MemoryManagement/interfaces/ObjectPool.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/MemoryManagement/interfaces/IMemoryAllocator.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/MemoryManagement/core/MemoryAllocator.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/MemoryManagement/core/FixedMemoryPool.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/MemoryManagement/core/PreCompiled.h"
        ],
        "sourceFilesPaths": [
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/MemoryManagement/build/CMakeFiles/3.16.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/MemoryManagement/core/PreCompiled.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/MemoryManagement/core/MemoryAllocator.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/MemoryManagement/core/FixedMemoryPool.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/MemoryManagement/core/MemoryPool.cpp"
        ],
        "cmakeListsFilePath": "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/MemoryManagement/CMakeLists.txt",
        "dependentModules": [
          "Base"
        ]
      },
      {
        "name": "Problems",
        "rootPath": "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Problems",
        "headerFilesPaths": [
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Problems/ProblemException.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Problems/interfaces/ICombinationSum.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Problems/interfaces/IMergingIntervals.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Problems/interfaces/IPositionQueens.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Problems/interfaces/IMatchingTriplets.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Problems/interfaces/IMatrixFinder.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Problems/interfaces/IMinimumWindowSubstring.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Problems/core/MinimumWindowSubstring.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Problems/core/MatrixFinder.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Problems/core/WordFinder.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Problems/core/MatchingTriplets.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Problems/core/PositionQueens.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Problems/core/CombinationSum.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Problems/core/NumberValidator.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Problems/core/MergingIntervals.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Problems/core/PreCompiled.h"
        ],
        "sourceFilesPaths": [
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Problems/core/PositionQueens.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Problems/core/PreCompiled.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Problems/core/WordFinder.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Problems/core/NumberValidator.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Problems/core/MinimumWindowSubstring.cpp"
        ],
        "cmakeListsFilePath": "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Problems/CMakeLists.txt",
        "dependentModules": [
          "Base"
        ]
      },
      {
        "name": "TestBase",
        "rootPath": "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/TestBase",
        "headerFilesPaths": [
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/TestBase/TestBaseException.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/TestBase/interfaces/Assertion.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/TestBase/core/PreCompiled.h"
        ],
        "sourceFilesPaths": [
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/TestBase/core/PreCompiled.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/TestBase/core/Assertion.cpp"
        ],
        "cmakeListsFilePath": "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/TestBase/CMakeLists.txt",
        "dependentModules": [
          "Base"
        ]
      },
      {
        "name": "UnitTesting",
        "rootPath": "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/UnitTesting",
        "headerFilesPaths": [
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/UnitTesting/UnitTestingException.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/UnitTesting/interfaces/IUnitTestHandler.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/UnitTesting/interfaces/ITestFunction.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/UnitTesting/interfaces/ITestRunningResult.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/UnitTesting/interfaces/IUnitTest.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/UnitTesting/interfaces/UnitTestException.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/UnitTesting/interfaces/ITestRunningResults.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/UnitTesting/interfaces/ITestRegistration.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/UnitTesting/interfaces/IUnitTestManager.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/UnitTesting/interfaces/UnitTestBase.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/UnitTesting/core/TestRunningResult.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/UnitTesting/core/UnitTestManager.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/UnitTesting/core/UnitTestFunction.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/UnitTesting/core/TestRunningResults.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/UnitTesting/core/UnitTestHandler.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/UnitTesting/core/PreCompiled.h"
        ],
        "sourceFilesPaths": [
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/UnitTesting/core/UnitTestHandler.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/UnitTesting/core/TestRunningResult.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/UnitTesting/core/PreCompiled.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/UnitTesting/core/UnitTestManager.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/UnitTesting/core/TestRunningResults.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/UnitTesting/core/UnitTestBase.cpp"
        ],
        "cmakeListsFilePath": "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/UnitTesting/CMakeLists.txt",
        "dependentModules": [
          "Base",
          "TestBase"
        ]
      },
      {
        "name": "BaseTest",
        "rootPath": "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/BaseTest",
        "headerFilesPaths": [
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/BaseTest/interfaces/IntervalMapUnitTest.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/BaseTest/interfaces/TwoDimensionalListUnitTest.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/BaseTest/interfaces/MatrixUnitTest.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/BaseTest/interfaces/TestData.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/BaseTest/interfaces/ListUnitTest.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/BaseTest/core/PreCompiled.h"
        ],
        "sourceFilesPaths": [
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/BaseTest/main.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/BaseTest/core/ListUnitTest.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/BaseTest/core/PreCompiled.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/BaseTest/core/MatrixUnitTest.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/BaseTest/core/TestData.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/BaseTest/core/TwoDimensionalListUnitTest.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/BaseTest/core/IntervalMapUnitTest.cpp"
        ],
        "cmakeListsFilePath": "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/BaseTest/CMakeLists.txt",
        "dependentModules": [
          "Base",
          "TestBase",
          "UnitTesting"
        ]
      },
      {
        "name": "DataStructuresTest",
        "rootPath": "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/DataStructuresTest",
        "headerFilesPaths": [
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/DataStructuresTest/interfaces/TestData.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/DataStructuresTest/interfaces/IteratorOfIteratorCollectionUnitTest.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/DataStructuresTest/core/PreCompiled.h"
        ],
        "sourceFilesPaths": [
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/DataStructuresTest/main.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/DataStructuresTest/core/PreCompiled.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/DataStructuresTest/core/TestData.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/DataStructuresTest/core/IteratorOfIteratorCollectionUnitTest.cpp"
        ],
        "cmakeListsFilePath": "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/DataStructuresTest/CMakeLists.txt",
        "dependentModules": [
          "Base",
          "TestBase",
          "UnitTesting",
          "DataStructures"
        ]
      },
      {
        "name": "ConcurrencyTest",
        "rootPath": "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/ConcurrencyTest",
        "headerFilesPaths": [
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/ConcurrencyTest/interfaces/ConcurrentQueueUnitTest.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/ConcurrencyTest/interfaces/TestData.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/ConcurrencyTest/core/PreCompiled.h"
        ],
        "sourceFilesPaths": [
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/ConcurrencyTest/main.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/ConcurrencyTest/core/PreCompiled.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/ConcurrencyTest/core/ConcurrentQueueUnitTest.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/ConcurrencyTest/core/TestData.cpp"
        ],
        "cmakeListsFilePath": "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/ConcurrencyTest/CMakeLists.txt",
        "dependentModules": [
          "Base",
          "TestBase",
          "UnitTesting",
          "Concurrency"
        ]
      },
      {
        "name": "MemoryManagementTest",
        "rootPath": "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/MemoryManagementTest",
        "headerFilesPaths": [
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/MemoryManagementTest/interfaces/MemoryAllocatorUnitTest.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/MemoryManagementTest/interfaces/ObjectPoolUnitTest.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/MemoryManagementTest/core/PreCompiled.h"
        ],
        "sourceFilesPaths": [
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/MemoryManagementTest/main.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/MemoryManagementTest/core/ObjectPoolUnitTest.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/MemoryManagementTest/core/PreCompiled.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/MemoryManagementTest/core/MemoryAllocatorUnitTest.cpp"
        ],
        "cmakeListsFilePath": "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/MemoryManagementTest/CMakeLists.txt",
        "dependentModules": [
          "Base",
          "TestBase",
          "UnitTesting",
          "MemoryManagement"
        ]
      },
      {
        "name": "ProblemsTest",
        "rootPath": "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/ProblemsTest",
        "headerFilesPaths": [
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/ProblemsTest/interfaces/MergingIntervalsUnitTest.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/ProblemsTest/interfaces/MatchingTripletsUnitTest.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/ProblemsTest/interfaces/MatrixFinderUnitTest.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/ProblemsTest/interfaces/MinimumWindowSubstringUnitTest.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/ProblemsTest/interfaces/NumberValidatorUnitTest.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/ProblemsTest/interfaces/CombinationSumUnitTest.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/ProblemsTest/interfaces/TestData.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/ProblemsTest/interfaces/PositionQueensUnitTest.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/ProblemsTest/interfaces/WordFinderUnitTest.h",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/ProblemsTest/core/PreCompiled.h"
        ],
        "sourceFilesPaths": [
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/ProblemsTest/cmake-build-debug/CMakeFiles/3.16.5/CompilerIdCXX/CMakeCXXCompilerId.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/ProblemsTest/main.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/ProblemsTest/core/CombinationSumUnitTest.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/ProblemsTest/core/PreCompiled.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/ProblemsTest/core/MatchingTripletsUnitTest.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/ProblemsTest/core/PositionQueensUnitTest.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/ProblemsTest/core/TestData.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/ProblemsTest/core/NumberValidatorUnitTest.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/ProblemsTest/core/MinimumWindowSubstringUnitTest.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/ProblemsTest/core/WordFinderUnitTest.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/ProblemsTest/core/MergingIntervalsUnitTest.cpp",
          "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/ProblemsTest/core/MatrixFinderUnitTest.cpp"
        ],
        "cmakeListsFilePath": "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/ProblemsTest/CMakeLists.txt",
        "dependentModules": [
          "Base",
          "TestBase",
          "UnitTesting",
          "Problems"
        ]
      }
    ]
  },
  "deploymentData": {
    "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/ProblemsTest/CMakeLists.txt": "cmake_minimum_required(VERSION 3.13)\n\nproject(ProblemsTest VERSION 1.0)\n\nset(CMAKE_CXX_STANDARD 14)\n\nmacro(print_all_variables)\n    message(STATUS \"print_all_variables------------------------------------------{\")\n    get_cmake_property(_variableNames VARIABLES)\n    foreach (_variableName ${_variableNames})\n        message(STATUS \"${_variableName}=${${_variableName}}\")\n    endforeach()\n    message(STATUS \"print_all_variables------------------------------------------}\")\nendmacro()\n\nprint_all_variables()\n\n#\n# Configure boost library...\n#\nif (NOT $ENV{BOOST_ROOT})\n    set(BOOST_PATH $ENV{BOOST_ROOT})\nelse()\n    set(BOOST_PATH \"c:\\\\Boost\\\\boost_1_70_0\")\nendif()\n\nset(PROBLEMS_TEST_INCLUDES_FILES\n    ./core/PreCompiled.h\n    ./interfaces/CombinationSumUnitTest.h\n    ./interfaces/MatchingTripletsUnitTest.h\n    ./interfaces/MatrixFinderUnitTest.h\n    ./interfaces/MergingIntervalsUnitTest.h\n    ./interfaces/MinimumWindowSubstringUnitTest.h\n    ./interfaces/NumberValidatorUnitTest.h\n    ./interfaces/PositionQueensUnitTest.h\n    ./interfaces/TestData.h\n    ./interfaces/WordFinderUnitTest.h\n)\n\nset(PROBLEMS_TEST_SOURCES_FILES\n    ./core/CombinationSumUnitTest.cpp\n    ./core/MatchingTripletsUnitTest.cpp\n    ./core/MatrixFinderUnitTest.cpp\n    ./core/MergingIntervalsUnitTest.cpp\n    ./core/MinimumWindowSubstringUnitTest.cpp\n    ./core/NumberValidatorUnitTest.cpp\n    ./core/PositionQueensUnitTest.cpp\n    ./core/PreCompiled.cpp\n    ./core/TestData.cpp\n    ./core/WordFinderUnitTest.cpp\n    ./main.cpp\n)\n\nset(PROBLEMS_TEST_SOURCES\n    ${PROBLEMS_TEST_INCLUDES_FILES}\n    ${PROBLEMS_TEST_SOURCES_FILES}\n)\n\nset(PROBLEMS_TEST_INCLUDES\n    ./core\n    ./interfaces\n)\n\nset(BASE_INCLUDES_FILES\n    ../Base/BaseException.h\n    ../Base/core/BaseDependencies.h\n    ../Base/core/BaseLogic.h\n    ../Base/core/ComparableComparator.h\n    ../Base/core/DereferenceEquatableComparator.h\n    ../Base/core/EquatableComparator.h\n    ../Base/core/IntervalMap.h\n    ../Base/core/IntervalMapIterator.h\n    ../Base/core/List.h\n    ../Base/core/ListIterator.h\n    ../Base/core/Matrix.h\n    ../Base/core/Position.h\n    ../Base/core/PreCompiled.h\n    ../Base/core/ReferenceCount.h\n    ../Base/core/ReferenceCountHolder.h\n    ../Base/core/StringIterator.h\n    ../Base/core/TwoDimensionalList.h\n    ../Base/core/TwoDimensionalListIterator.h\n    ../Base/interfaces/ComparatorFactory.h\n    ../Base/interfaces/CompareToBuilder.h\n    ../Base/interfaces/DateTime.h\n    ../Base/interfaces/Duration.h\n    ../Base/interfaces/EqualBuilder.h\n    ../Base/interfaces/IBinaryComparator.h\n    ../Base/interfaces/ICalculator.h\n    ../Base/interfaces/ICollection.h\n    ../Base/interfaces/IComparableComparator.h\n    ../Base/interfaces/IEquatableComparator.h\n    ../Base/interfaces/IFinder.h\n    ../Base/interfaces/IHashCodeProvider.h\n    ../Base/interfaces/IIntervalMap.h\n    ../Base/interfaces/IIterable.h\n    ../Base/interfaces/IIterator.h\n    ../Base/interfaces/IList.h\n    ../Base/interfaces/IMatrix.h\n    ../Base/interfaces/ISizableCollection.h\n    ../Base/interfaces/ITwoDimensionalList.h\n    ../Base/interfaces/IValidator.h\n    ../Base/interfaces/Interval.h\n    ../Base/interfaces/Intervals.h\n    ../Base/interfaces/IterableComparator.h\n    ../Base/interfaces/IteratorComparator.h\n    ../Base/interfaces/LogStreamWriter.h\n    ../Base/interfaces/Pair.h\n    ../Base/interfaces/SharedPtr.h\n    ../Base/interfaces/Strings.h\n    ../Base/interfaces/Triple.h\n)\n\nset(BASE_SOURCES_FILES\n    ../Base/core/CompareToBuilder.cpp\n    ../Base/core/DateTime.cpp\n    ../Base/core/EqualBuilder.cpp\n    ../Base/core/LogStreamWriter.cpp\n    ../Base/core/Position.cpp\n    ../Base/core/PreCompiled.cpp\n)\n\nset(BASE_SOURCES\n    ${BASE_INCLUDES_FILES}\n    ${BASE_SOURCES_FILES}\n)\n\nset(BASE_INCLUDES\n    ../Base\n    ../Base/core\n    ../Base/interfaces\n)\n\nadd_library(Base STATIC\n    ${BASE_SOURCES}\n)\n\nset(TEST_BASE_INCLUDES_FILES\n    ../TestBase/TestBaseException.h\n    ../TestBase/core/PreCompiled.h\n    ../TestBase/interfaces/Assertion.h\n)\n\nset(TEST_BASE_SOURCES_FILES\n    ../TestBase/core/Assertion.cpp\n    ../TestBase/core/PreCompiled.cpp\n)\n\nset(TEST_BASE_SOURCES\n    ${TEST_BASE_INCLUDES_FILES}\n    ${TEST_BASE_SOURCES_FILES}\n)\n\nset(TEST_BASE_INCLUDES\n    ../TestBase\n    ../TestBase/core\n    ../TestBase/interfaces\n)\n\nadd_library(TestBase STATIC\n    ${BASE_SOURCES}\n    ${TEST_BASE_SOURCES}\n)\n\nset(UNIT_TESTING_INCLUDES_FILES\n    ../UnitTesting/UnitTestingException.h\n    ../UnitTesting/core/PreCompiled.h\n    ../UnitTesting/core/TestRunningResult.h\n    ../UnitTesting/core/TestRunningResults.h\n    ../UnitTesting/core/UnitTestFunction.h\n    ../UnitTesting/core/UnitTestHandler.h\n    ../UnitTesting/core/UnitTestManager.h\n    ../UnitTesting/interfaces/ITestFunction.h\n    ../UnitTesting/interfaces/ITestRegistration.h\n    ../UnitTesting/interfaces/ITestRunningResult.h\n    ../UnitTesting/interfaces/ITestRunningResults.h\n    ../UnitTesting/interfaces/IUnitTest.h\n    ../UnitTesting/interfaces/IUnitTestHandler.h\n    ../UnitTesting/interfaces/IUnitTestManager.h\n    ../UnitTesting/interfaces/UnitTestBase.h\n    ../UnitTesting/interfaces/UnitTestException.h\n)\n\nset(UNIT_TESTING_SOURCES_FILES\n    ../UnitTesting/core/PreCompiled.cpp\n    ../UnitTesting/core/TestRunningResult.cpp\n    ../UnitTesting/core/TestRunningResults.cpp\n    ../UnitTesting/core/UnitTestBase.cpp\n    ../UnitTesting/core/UnitTestHandler.cpp\n    ../UnitTesting/core/UnitTestManager.cpp\n)\n\nset(UNIT_TESTING_SOURCES\n    ${UNIT_TESTING_INCLUDES_FILES}\n    ${UNIT_TESTING_SOURCES_FILES}\n)\n\nset(UNIT_TESTING_INCLUDES\n    ../UnitTesting\n    ../UnitTesting/core\n    ../UnitTesting/interfaces\n)\n\nadd_library(UnitTesting STATIC\n    ${BASE_SOURCES}\n    ${TEST_BASE_SOURCES}\n    ${UNIT_TESTING_SOURCES}\n)\n\nset(PROBLEMS_INCLUDES_FILES\n    ../Problems/ProblemException.h\n    ../Problems/core/CombinationSum.h\n    ../Problems/core/MatchingTriplets.h\n    ../Problems/core/MatrixFinder.h\n    ../Problems/core/MergingIntervals.h\n    ../Problems/core/MinimumWindowSubstring.h\n    ../Problems/core/NumberValidator.h\n    ../Problems/core/PositionQueens.h\n    ../Problems/core/PreCompiled.h\n    ../Problems/core/WordFinder.h\n    ../Problems/interfaces/ICombinationSum.h\n    ../Problems/interfaces/IMatchingTriplets.h\n    ../Problems/interfaces/IMatrixFinder.h\n    ../Problems/interfaces/IMergingIntervals.h\n    ../Problems/interfaces/IMinimumWindowSubstring.h\n    ../Problems/interfaces/IPositionQueens.h\n)\n\nset(PROBLEMS_SOURCES_FILES\n    ../Problems/core/MinimumWindowSubstring.cpp\n    ../Problems/core/NumberValidator.cpp\n    ../Problems/core/PositionQueens.cpp\n    ../Problems/core/PreCompiled.cpp\n    ../Problems/core/WordFinder.cpp\n)\n\nset(PROBLEMS_SOURCES\n    ${PROBLEMS_INCLUDES_FILES}\n    ${PROBLEMS_SOURCES_FILES}\n)\n\nset(PROBLEMS_INCLUDES\n    ../Problems\n    ../Problems/core\n    ../Problems/interfaces\n)\n\nadd_library(Problems STATIC\n    ${BASE_SOURCES}\n    ${PROBLEMS_SOURCES}\n)\n\ninclude_directories(ProblemsTest\n    ${BASE_INCLUDES}\n    ${PROBLEMS_INCLUDES}\n    ${PROBLEMS_TEST_INCLUDES}\n    ${TEST_BASE_INCLUDES}\n    ${UNIT_TESTING_INCLUDES}\n)\n\nadd_executable(ProblemsTest\n    ${BASE_SOURCES}\n    ${PROBLEMS_SOURCES}\n    ${PROBLEMS_TEST_SOURCES}\n    ${TEST_BASE_SOURCES}\n    ${UNIT_TESTING_SOURCES}\n)\n\ntarget_link_libraries(ProblemsTest\n    PRIVATE Base TestBase UnitTesting Problems\n)\n\ninclude_directories(\n    ${BOOST_PATH}\n)\n",
    "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/MemoryManagementTest/CMakeLists.txt": "cmake_minimum_required(VERSION 3.13)\n\nproject(MemoryManagementTest VERSION 1.0)\n\nset(CMAKE_CXX_STANDARD 14)\n\nmacro(print_all_variables)\n    message(STATUS \"print_all_variables------------------------------------------{\")\n    get_cmake_property(_variableNames VARIABLES)\n    foreach (_variableName ${_variableNames})\n        message(STATUS \"${_variableName}=${${_variableName}}\")\n    endforeach()\n    message(STATUS \"print_all_variables------------------------------------------}\")\nendmacro()\n\nprint_all_variables()\n\n#\n# Configure boost library...\n#\nif (NOT $ENV{BOOST_ROOT})\n    set(BOOST_PATH $ENV{BOOST_ROOT})\nelse()\n    set(BOOST_PATH \"c:\\\\Boost\\\\boost_1_70_0\")\nendif()\n\nset(MEMORY_MANAGEMENT_TEST_INCLUDES_FILES\n    ./core/PreCompiled.h\n    ./interfaces/MemoryAllocatorUnitTest.h\n    ./interfaces/ObjectPoolUnitTest.h\n)\n\nset(MEMORY_MANAGEMENT_TEST_SOURCES_FILES\n    ./core/MemoryAllocatorUnitTest.cpp\n    ./core/ObjectPoolUnitTest.cpp\n    ./core/PreCompiled.cpp\n    ./main.cpp\n)\n\nset(MEMORY_MANAGEMENT_TEST_SOURCES\n    ${MEMORY_MANAGEMENT_TEST_INCLUDES_FILES}\n    ${MEMORY_MANAGEMENT_TEST_SOURCES_FILES}\n)\n\nset(MEMORY_MANAGEMENT_TEST_INCLUDES\n    ./core\n    ./interfaces\n)\n\nset(BASE_INCLUDES_FILES\n    ../Base/BaseException.h\n    ../Base/core/BaseDependencies.h\n    ../Base/core/BaseLogic.h\n    ../Base/core/ComparableComparator.h\n    ../Base/core/DereferenceEquatableComparator.h\n    ../Base/core/EquatableComparator.h\n    ../Base/core/IntervalMap.h\n    ../Base/core/IntervalMapIterator.h\n    ../Base/core/List.h\n    ../Base/core/ListIterator.h\n    ../Base/core/Matrix.h\n    ../Base/core/Position.h\n    ../Base/core/PreCompiled.h\n    ../Base/core/ReferenceCount.h\n    ../Base/core/ReferenceCountHolder.h\n    ../Base/core/StringIterator.h\n    ../Base/core/TwoDimensionalList.h\n    ../Base/core/TwoDimensionalListIterator.h\n    ../Base/interfaces/ComparatorFactory.h\n    ../Base/interfaces/CompareToBuilder.h\n    ../Base/interfaces/DateTime.h\n    ../Base/interfaces/Duration.h\n    ../Base/interfaces/EqualBuilder.h\n    ../Base/interfaces/IBinaryComparator.h\n    ../Base/interfaces/ICalculator.h\n    ../Base/interfaces/ICollection.h\n    ../Base/interfaces/IComparableComparator.h\n    ../Base/interfaces/IEquatableComparator.h\n    ../Base/interfaces/IFinder.h\n    ../Base/interfaces/IHashCodeProvider.h\n    ../Base/interfaces/IIntervalMap.h\n    ../Base/interfaces/IIterable.h\n    ../Base/interfaces/IIterator.h\n    ../Base/interfaces/IList.h\n    ../Base/interfaces/IMatrix.h\n    ../Base/interfaces/ISizableCollection.h\n    ../Base/interfaces/ITwoDimensionalList.h\n    ../Base/interfaces/IValidator.h\n    ../Base/interfaces/Interval.h\n    ../Base/interfaces/Intervals.h\n    ../Base/interfaces/IterableComparator.h\n    ../Base/interfaces/IteratorComparator.h\n    ../Base/interfaces/LogStreamWriter.h\n    ../Base/interfaces/Pair.h\n    ../Base/interfaces/SharedPtr.h\n    ../Base/interfaces/Strings.h\n    ../Base/interfaces/Triple.h\n)\n\nset(BASE_SOURCES_FILES\n    ../Base/core/CompareToBuilder.cpp\n    ../Base/core/DateTime.cpp\n    ../Base/core/EqualBuilder.cpp\n    ../Base/core/LogStreamWriter.cpp\n    ../Base/core/Position.cpp\n    ../Base/core/PreCompiled.cpp\n)\n\nset(BASE_SOURCES\n    ${BASE_INCLUDES_FILES}\n    ${BASE_SOURCES_FILES}\n)\n\nset(BASE_INCLUDES\n    ../Base\n    ../Base/core\n    ../Base/interfaces\n)\n\nadd_library(Base STATIC\n    ${BASE_SOURCES}\n)\n\nset(TEST_BASE_INCLUDES_FILES\n    ../TestBase/TestBaseException.h\n    ../TestBase/core/PreCompiled.h\n    ../TestBase/interfaces/Assertion.h\n)\n\nset(TEST_BASE_SOURCES_FILES\n    ../TestBase/core/Assertion.cpp\n    ../TestBase/core/PreCompiled.cpp\n)\n\nset(TEST_BASE_SOURCES\n    ${TEST_BASE_INCLUDES_FILES}\n    ${TEST_BASE_SOURCES_FILES}\n)\n\nset(TEST_BASE_INCLUDES\n    ../TestBase\n    ../TestBase/core\n    ../TestBase/interfaces\n)\n\nadd_library(TestBase STATIC\n    ${BASE_SOURCES}\n    ${TEST_BASE_SOURCES}\n)\n\nset(UNIT_TESTING_INCLUDES_FILES\n    ../UnitTesting/UnitTestingException.h\n    ../UnitTesting/core/PreCompiled.h\n    ../UnitTesting/core/TestRunningResult.h\n    ../UnitTesting/core/TestRunningResults.h\n    ../UnitTesting/core/UnitTestFunction.h\n    ../UnitTesting/core/UnitTestHandler.h\n    ../UnitTesting/core/UnitTestManager.h\n    ../UnitTesting/interfaces/ITestFunction.h\n    ../UnitTesting/interfaces/ITestRegistration.h\n    ../UnitTesting/interfaces/ITestRunningResult.h\n    ../UnitTesting/interfaces/ITestRunningResults.h\n    ../UnitTesting/interfaces/IUnitTest.h\n    ../UnitTesting/interfaces/IUnitTestHandler.h\n    ../UnitTesting/interfaces/IUnitTestManager.h\n    ../UnitTesting/interfaces/UnitTestBase.h\n    ../UnitTesting/interfaces/UnitTestException.h\n)\n\nset(UNIT_TESTING_SOURCES_FILES\n    ../UnitTesting/core/PreCompiled.cpp\n    ../UnitTesting/core/TestRunningResult.cpp\n    ../UnitTesting/core/TestRunningResults.cpp\n    ../UnitTesting/core/UnitTestBase.cpp\n    ../UnitTesting/core/UnitTestHandler.cpp\n    ../UnitTesting/core/UnitTestManager.cpp\n)\n\nset(UNIT_TESTING_SOURCES\n    ${UNIT_TESTING_INCLUDES_FILES}\n    ${UNIT_TESTING_SOURCES_FILES}\n)\n\nset(UNIT_TESTING_INCLUDES\n    ../UnitTesting\n    ../UnitTesting/core\n    ../UnitTesting/interfaces\n)\n\nadd_library(UnitTesting STATIC\n    ${BASE_SOURCES}\n    ${TEST_BASE_SOURCES}\n    ${UNIT_TESTING_SOURCES}\n)\n\nset(MEMORY_MANAGEMENT_INCLUDES_FILES\n    ../MemoryManagement/MemoryManagementException.h\n    ../MemoryManagement/core/FixedMemoryPool.h\n    ../MemoryManagement/core/MemoryAllocator.h\n    ../MemoryManagement/core/PreCompiled.h\n    ../MemoryManagement/interfaces/IMemoryAllocator.h\n    ../MemoryManagement/interfaces/IMemoryPool.h\n    ../MemoryManagement/interfaces/IObjectPool.h\n    ../MemoryManagement/interfaces/MemoryPool.h\n    ../MemoryManagement/interfaces/ObjectPool.h\n    ../MemoryManagement/interfaces/ObjectPoolElement.h\n)\n\nset(MEMORY_MANAGEMENT_SOURCES_FILES\n    ../MemoryManagement/core/FixedMemoryPool.cpp\n    ../MemoryManagement/core/MemoryAllocator.cpp\n    ../MemoryManagement/core/MemoryPool.cpp\n    ../MemoryManagement/core/PreCompiled.cpp\n)\n\nset(MEMORY_MANAGEMENT_SOURCES\n    ${MEMORY_MANAGEMENT_INCLUDES_FILES}\n    ${MEMORY_MANAGEMENT_SOURCES_FILES}\n)\n\nset(MEMORY_MANAGEMENT_INCLUDES\n    ../MemoryManagement\n    ../MemoryManagement/core\n    ../MemoryManagement/interfaces\n)\n\nadd_library(MemoryManagement STATIC\n    ${BASE_SOURCES}\n    ${MEMORY_MANAGEMENT_SOURCES}\n)\n\ninclude_directories(MemoryManagementTest\n    ${BASE_INCLUDES}\n    ${MEMORY_MANAGEMENT_INCLUDES}\n    ${MEMORY_MANAGEMENT_TEST_INCLUDES}\n    ${TEST_BASE_INCLUDES}\n    ${UNIT_TESTING_INCLUDES}\n)\n\nadd_executable(MemoryManagementTest\n    ${BASE_SOURCES}\n    ${MEMORY_MANAGEMENT_SOURCES}\n    ${MEMORY_MANAGEMENT_TEST_SOURCES}\n    ${TEST_BASE_SOURCES}\n    ${UNIT_TESTING_SOURCES}\n)\n\ntarget_link_libraries(MemoryManagementTest\n    PRIVATE Base TestBase UnitTesting MemoryManagement\n)\n\ninclude_directories(\n    ${BOOST_PATH}\n)\n",
    "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Concurrency/CMakeLists.txt": "cmake_minimum_required(VERSION 3.13)\n\nproject(Concurrency VERSION 1.0)\n\nset(CMAKE_CXX_STANDARD 14)\n\nmacro(print_all_variables)\n    message(STATUS \"print_all_variables------------------------------------------{\")\n    get_cmake_property(_variableNames VARIABLES)\n    foreach (_variableName ${_variableNames})\n        message(STATUS \"${_variableName}=${${_variableName}}\")\n    endforeach()\n    message(STATUS \"print_all_variables------------------------------------------}\")\nendmacro()\n\nprint_all_variables()\n\n#\n# Configure boost library...\n#\nif (NOT $ENV{BOOST_ROOT})\n    set(BOOST_PATH $ENV{BOOST_ROOT})\nelse()\n    set(BOOST_PATH \"c:\\\\Boost\\\\boost_1_70_0\")\nendif()\n\nset(CONCURRENCY_INCLUDES_FILES\n    ./ConcurrencyException.h\n    ./core/PreCompiled.h\n    ./interfaces/ConcurrentQueue.h\n)\n\nset(CONCURRENCY_SOURCES_FILES\n    ./core/PreCompiled.cpp\n)\n\nset(CONCURRENCY_SOURCES\n    ${CONCURRENCY_INCLUDES_FILES}\n    ${CONCURRENCY_SOURCES_FILES}\n)\n\nset(CONCURRENCY_INCLUDES\n    .\n    ./core\n    ./interfaces\n)\n\nset(BASE_INCLUDES_FILES\n    ../Base/BaseException.h\n    ../Base/core/BaseDependencies.h\n    ../Base/core/BaseLogic.h\n    ../Base/core/ComparableComparator.h\n    ../Base/core/DereferenceEquatableComparator.h\n    ../Base/core/EquatableComparator.h\n    ../Base/core/IntervalMap.h\n    ../Base/core/IntervalMapIterator.h\n    ../Base/core/List.h\n    ../Base/core/ListIterator.h\n    ../Base/core/Matrix.h\n    ../Base/core/Position.h\n    ../Base/core/PreCompiled.h\n    ../Base/core/ReferenceCount.h\n    ../Base/core/ReferenceCountHolder.h\n    ../Base/core/StringIterator.h\n    ../Base/core/TwoDimensionalList.h\n    ../Base/core/TwoDimensionalListIterator.h\n    ../Base/interfaces/ComparatorFactory.h\n    ../Base/interfaces/CompareToBuilder.h\n    ../Base/interfaces/DateTime.h\n    ../Base/interfaces/Duration.h\n    ../Base/interfaces/EqualBuilder.h\n    ../Base/interfaces/IBinaryComparator.h\n    ../Base/interfaces/ICalculator.h\n    ../Base/interfaces/ICollection.h\n    ../Base/interfaces/IComparableComparator.h\n    ../Base/interfaces/IEquatableComparator.h\n    ../Base/interfaces/IFinder.h\n    ../Base/interfaces/IHashCodeProvider.h\n    ../Base/interfaces/IIntervalMap.h\n    ../Base/interfaces/IIterable.h\n    ../Base/interfaces/IIterator.h\n    ../Base/interfaces/IList.h\n    ../Base/interfaces/IMatrix.h\n    ../Base/interfaces/ISizableCollection.h\n    ../Base/interfaces/ITwoDimensionalList.h\n    ../Base/interfaces/IValidator.h\n    ../Base/interfaces/Interval.h\n    ../Base/interfaces/Intervals.h\n    ../Base/interfaces/IterableComparator.h\n    ../Base/interfaces/IteratorComparator.h\n    ../Base/interfaces/LogStreamWriter.h\n    ../Base/interfaces/Pair.h\n    ../Base/interfaces/SharedPtr.h\n    ../Base/interfaces/Strings.h\n    ../Base/interfaces/Triple.h\n)\n\nset(BASE_SOURCES_FILES\n    ../Base/core/CompareToBuilder.cpp\n    ../Base/core/DateTime.cpp\n    ../Base/core/EqualBuilder.cpp\n    ../Base/core/LogStreamWriter.cpp\n    ../Base/core/Position.cpp\n    ../Base/core/PreCompiled.cpp\n)\n\nset(BASE_SOURCES\n    ${BASE_INCLUDES_FILES}\n    ${BASE_SOURCES_FILES}\n)\n\nset(BASE_INCLUDES\n    ../Base\n    ../Base/core\n    ../Base/interfaces\n)\n\nadd_library(Base STATIC\n    ${BASE_SOURCES}\n)\n\ninclude_directories(Concurrency\n    ${BASE_INCLUDES}\n    ${CONCURRENCY_INCLUDES}\n)\n\nadd_library(Concurrency STATIC\n    ${BASE_SOURCES}\n    ${CONCURRENCY_SOURCES}\n)\n\ninclude_directories(\n    ${BOOST_PATH}\n)\n",
    "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/UnitTesting/CMakeLists.txt": "cmake_minimum_required(VERSION 3.13)\n\nproject(UnitTesting VERSION 1.0)\n\nset(CMAKE_CXX_STANDARD 14)\n\nmacro(print_all_variables)\n    message(STATUS \"print_all_variables------------------------------------------{\")\n    get_cmake_property(_variableNames VARIABLES)\n    foreach (_variableName ${_variableNames})\n        message(STATUS \"${_variableName}=${${_variableName}}\")\n    endforeach()\n    message(STATUS \"print_all_variables------------------------------------------}\")\nendmacro()\n\nprint_all_variables()\n\n#\n# Configure boost library...\n#\nif (NOT $ENV{BOOST_ROOT})\n    set(BOOST_PATH $ENV{BOOST_ROOT})\nelse()\n    set(BOOST_PATH \"c:\\\\Boost\\\\boost_1_70_0\")\nendif()\n\nset(UNIT_TESTING_INCLUDES_FILES\n    ./UnitTestingException.h\n    ./core/PreCompiled.h\n    ./core/TestRunningResult.h\n    ./core/TestRunningResults.h\n    ./core/UnitTestFunction.h\n    ./core/UnitTestHandler.h\n    ./core/UnitTestManager.h\n    ./interfaces/ITestFunction.h\n    ./interfaces/ITestRegistration.h\n    ./interfaces/ITestRunningResult.h\n    ./interfaces/ITestRunningResults.h\n    ./interfaces/IUnitTest.h\n    ./interfaces/IUnitTestHandler.h\n    ./interfaces/IUnitTestManager.h\n    ./interfaces/UnitTestBase.h\n    ./interfaces/UnitTestException.h\n)\n\nset(UNIT_TESTING_SOURCES_FILES\n    ./core/PreCompiled.cpp\n    ./core/TestRunningResult.cpp\n    ./core/TestRunningResults.cpp\n    ./core/UnitTestBase.cpp\n    ./core/UnitTestHandler.cpp\n    ./core/UnitTestManager.cpp\n)\n\nset(UNIT_TESTING_SOURCES\n    ${UNIT_TESTING_INCLUDES_FILES}\n    ${UNIT_TESTING_SOURCES_FILES}\n)\n\nset(UNIT_TESTING_INCLUDES\n    .\n    ./core\n    ./interfaces\n)\n\nset(BASE_INCLUDES_FILES\n    ../Base/BaseException.h\n    ../Base/core/BaseDependencies.h\n    ../Base/core/BaseLogic.h\n    ../Base/core/ComparableComparator.h\n    ../Base/core/DereferenceEquatableComparator.h\n    ../Base/core/EquatableComparator.h\n    ../Base/core/IntervalMap.h\n    ../Base/core/IntervalMapIterator.h\n    ../Base/core/List.h\n    ../Base/core/ListIterator.h\n    ../Base/core/Matrix.h\n    ../Base/core/Position.h\n    ../Base/core/PreCompiled.h\n    ../Base/core/ReferenceCount.h\n    ../Base/core/ReferenceCountHolder.h\n    ../Base/core/StringIterator.h\n    ../Base/core/TwoDimensionalList.h\n    ../Base/core/TwoDimensionalListIterator.h\n    ../Base/interfaces/ComparatorFactory.h\n    ../Base/interfaces/CompareToBuilder.h\n    ../Base/interfaces/DateTime.h\n    ../Base/interfaces/Duration.h\n    ../Base/interfaces/EqualBuilder.h\n    ../Base/interfaces/IBinaryComparator.h\n    ../Base/interfaces/ICalculator.h\n    ../Base/interfaces/ICollection.h\n    ../Base/interfaces/IComparableComparator.h\n    ../Base/interfaces/IEquatableComparator.h\n    ../Base/interfaces/IFinder.h\n    ../Base/interfaces/IHashCodeProvider.h\n    ../Base/interfaces/IIntervalMap.h\n    ../Base/interfaces/IIterable.h\n    ../Base/interfaces/IIterator.h\n    ../Base/interfaces/IList.h\n    ../Base/interfaces/IMatrix.h\n    ../Base/interfaces/ISizableCollection.h\n    ../Base/interfaces/ITwoDimensionalList.h\n    ../Base/interfaces/IValidator.h\n    ../Base/interfaces/Interval.h\n    ../Base/interfaces/Intervals.h\n    ../Base/interfaces/IterableComparator.h\n    ../Base/interfaces/IteratorComparator.h\n    ../Base/interfaces/LogStreamWriter.h\n    ../Base/interfaces/Pair.h\n    ../Base/interfaces/SharedPtr.h\n    ../Base/interfaces/Strings.h\n    ../Base/interfaces/Triple.h\n)\n\nset(BASE_SOURCES_FILES\n    ../Base/core/CompareToBuilder.cpp\n    ../Base/core/DateTime.cpp\n    ../Base/core/EqualBuilder.cpp\n    ../Base/core/LogStreamWriter.cpp\n    ../Base/core/Position.cpp\n    ../Base/core/PreCompiled.cpp\n)\n\nset(BASE_SOURCES\n    ${BASE_INCLUDES_FILES}\n    ${BASE_SOURCES_FILES}\n)\n\nset(BASE_INCLUDES\n    ../Base\n    ../Base/core\n    ../Base/interfaces\n)\n\nadd_library(Base STATIC\n    ${BASE_SOURCES}\n)\n\nset(TEST_BASE_INCLUDES_FILES\n    ../TestBase/TestBaseException.h\n    ../TestBase/core/PreCompiled.h\n    ../TestBase/interfaces/Assertion.h\n)\n\nset(TEST_BASE_SOURCES_FILES\n    ../TestBase/core/Assertion.cpp\n    ../TestBase/core/PreCompiled.cpp\n)\n\nset(TEST_BASE_SOURCES\n    ${TEST_BASE_INCLUDES_FILES}\n    ${TEST_BASE_SOURCES_FILES}\n)\n\nset(TEST_BASE_INCLUDES\n    ../TestBase\n    ../TestBase/core\n    ../TestBase/interfaces\n)\n\nadd_library(TestBase STATIC\n    ${BASE_SOURCES}\n    ${TEST_BASE_SOURCES}\n)\n\ninclude_directories(UnitTesting\n    ${BASE_INCLUDES}\n    ${TEST_BASE_INCLUDES}\n    ${UNIT_TESTING_INCLUDES}\n)\n\nadd_library(UnitTesting STATIC\n    ${BASE_SOURCES}\n    ${TEST_BASE_SOURCES}\n    ${UNIT_TESTING_SOURCES}\n)\n\ninclude_directories(\n    ${BOOST_PATH}\n)\n",
    "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/DataStructuresTest/CMakeLists.txt": "cmake_minimum_required(VERSION 3.13)\n\nproject(DataStructuresTest VERSION 1.0)\n\nset(CMAKE_CXX_STANDARD 14)\n\nmacro(print_all_variables)\n    message(STATUS \"print_all_variables------------------------------------------{\")\n    get_cmake_property(_variableNames VARIABLES)\n    foreach (_variableName ${_variableNames})\n        message(STATUS \"${_variableName}=${${_variableName}}\")\n    endforeach()\n    message(STATUS \"print_all_variables------------------------------------------}\")\nendmacro()\n\nprint_all_variables()\n\n#\n# Configure boost library...\n#\nif (NOT $ENV{BOOST_ROOT})\n    set(BOOST_PATH $ENV{BOOST_ROOT})\nelse()\n    set(BOOST_PATH \"c:\\\\Boost\\\\boost_1_70_0\")\nendif()\n\nset(DATA_STRUCTURES_TEST_INCLUDES_FILES\n    ./core/PreCompiled.h\n    ./interfaces/IteratorOfIteratorCollectionUnitTest.h\n    ./interfaces/TestData.h\n)\n\nset(DATA_STRUCTURES_TEST_SOURCES_FILES\n    ./core/IteratorOfIteratorCollectionUnitTest.cpp\n    ./core/PreCompiled.cpp\n    ./core/TestData.cpp\n    ./main.cpp\n)\n\nset(DATA_STRUCTURES_TEST_SOURCES\n    ${DATA_STRUCTURES_TEST_INCLUDES_FILES}\n    ${DATA_STRUCTURES_TEST_SOURCES_FILES}\n)\n\nset(DATA_STRUCTURES_TEST_INCLUDES\n    ./core\n    ./interfaces\n)\n\nset(BASE_INCLUDES_FILES\n    ../Base/BaseException.h\n    ../Base/core/BaseDependencies.h\n    ../Base/core/BaseLogic.h\n    ../Base/core/ComparableComparator.h\n    ../Base/core/DereferenceEquatableComparator.h\n    ../Base/core/EquatableComparator.h\n    ../Base/core/IntervalMap.h\n    ../Base/core/IntervalMapIterator.h\n    ../Base/core/List.h\n    ../Base/core/ListIterator.h\n    ../Base/core/Matrix.h\n    ../Base/core/Position.h\n    ../Base/core/PreCompiled.h\n    ../Base/core/ReferenceCount.h\n    ../Base/core/ReferenceCountHolder.h\n    ../Base/core/StringIterator.h\n    ../Base/core/TwoDimensionalList.h\n    ../Base/core/TwoDimensionalListIterator.h\n    ../Base/interfaces/ComparatorFactory.h\n    ../Base/interfaces/CompareToBuilder.h\n    ../Base/interfaces/DateTime.h\n    ../Base/interfaces/Duration.h\n    ../Base/interfaces/EqualBuilder.h\n    ../Base/interfaces/IBinaryComparator.h\n    ../Base/interfaces/ICalculator.h\n    ../Base/interfaces/ICollection.h\n    ../Base/interfaces/IComparableComparator.h\n    ../Base/interfaces/IEquatableComparator.h\n    ../Base/interfaces/IFinder.h\n    ../Base/interfaces/IHashCodeProvider.h\n    ../Base/interfaces/IIntervalMap.h\n    ../Base/interfaces/IIterable.h\n    ../Base/interfaces/IIterator.h\n    ../Base/interfaces/IList.h\n    ../Base/interfaces/IMatrix.h\n    ../Base/interfaces/ISizableCollection.h\n    ../Base/interfaces/ITwoDimensionalList.h\n    ../Base/interfaces/IValidator.h\n    ../Base/interfaces/Interval.h\n    ../Base/interfaces/Intervals.h\n    ../Base/interfaces/IterableComparator.h\n    ../Base/interfaces/IteratorComparator.h\n    ../Base/interfaces/LogStreamWriter.h\n    ../Base/interfaces/Pair.h\n    ../Base/interfaces/SharedPtr.h\n    ../Base/interfaces/Strings.h\n    ../Base/interfaces/Triple.h\n)\n\nset(BASE_SOURCES_FILES\n    ../Base/core/CompareToBuilder.cpp\n    ../Base/core/DateTime.cpp\n    ../Base/core/EqualBuilder.cpp\n    ../Base/core/LogStreamWriter.cpp\n    ../Base/core/Position.cpp\n    ../Base/core/PreCompiled.cpp\n)\n\nset(BASE_SOURCES\n    ${BASE_INCLUDES_FILES}\n    ${BASE_SOURCES_FILES}\n)\n\nset(BASE_INCLUDES\n    ../Base\n    ../Base/core\n    ../Base/interfaces\n)\n\nadd_library(Base STATIC\n    ${BASE_SOURCES}\n)\n\nset(TEST_BASE_INCLUDES_FILES\n    ../TestBase/TestBaseException.h\n    ../TestBase/core/PreCompiled.h\n    ../TestBase/interfaces/Assertion.h\n)\n\nset(TEST_BASE_SOURCES_FILES\n    ../TestBase/core/Assertion.cpp\n    ../TestBase/core/PreCompiled.cpp\n)\n\nset(TEST_BASE_SOURCES\n    ${TEST_BASE_INCLUDES_FILES}\n    ${TEST_BASE_SOURCES_FILES}\n)\n\nset(TEST_BASE_INCLUDES\n    ../TestBase\n    ../TestBase/core\n    ../TestBase/interfaces\n)\n\nadd_library(TestBase STATIC\n    ${BASE_SOURCES}\n    ${TEST_BASE_SOURCES}\n)\n\nset(UNIT_TESTING_INCLUDES_FILES\n    ../UnitTesting/UnitTestingException.h\n    ../UnitTesting/core/PreCompiled.h\n    ../UnitTesting/core/TestRunningResult.h\n    ../UnitTesting/core/TestRunningResults.h\n    ../UnitTesting/core/UnitTestFunction.h\n    ../UnitTesting/core/UnitTestHandler.h\n    ../UnitTesting/core/UnitTestManager.h\n    ../UnitTesting/interfaces/ITestFunction.h\n    ../UnitTesting/interfaces/ITestRegistration.h\n    ../UnitTesting/interfaces/ITestRunningResult.h\n    ../UnitTesting/interfaces/ITestRunningResults.h\n    ../UnitTesting/interfaces/IUnitTest.h\n    ../UnitTesting/interfaces/IUnitTestHandler.h\n    ../UnitTesting/interfaces/IUnitTestManager.h\n    ../UnitTesting/interfaces/UnitTestBase.h\n    ../UnitTesting/interfaces/UnitTestException.h\n)\n\nset(UNIT_TESTING_SOURCES_FILES\n    ../UnitTesting/core/PreCompiled.cpp\n    ../UnitTesting/core/TestRunningResult.cpp\n    ../UnitTesting/core/TestRunningResults.cpp\n    ../UnitTesting/core/UnitTestBase.cpp\n    ../UnitTesting/core/UnitTestHandler.cpp\n    ../UnitTesting/core/UnitTestManager.cpp\n)\n\nset(UNIT_TESTING_SOURCES\n    ${UNIT_TESTING_INCLUDES_FILES}\n    ${UNIT_TESTING_SOURCES_FILES}\n)\n\nset(UNIT_TESTING_INCLUDES\n    ../UnitTesting\n    ../UnitTesting/core\n    ../UnitTesting/interfaces\n)\n\nadd_library(UnitTesting STATIC\n    ${BASE_SOURCES}\n    ${TEST_BASE_SOURCES}\n    ${UNIT_TESTING_SOURCES}\n)\n\nset(DATA_STRUCTURES_INCLUDES_FILES\n    ../DataStructures/DataStructureException.h\n    ../DataStructures/core/PreCompiled.h\n    ../DataStructures/interfaces/IteratorOfIteratorCollection.h\n)\n\nset(DATA_STRUCTURES_SOURCES_FILES\n    ../DataStructures/core/PreCompiled.cpp\n)\n\nset(DATA_STRUCTURES_SOURCES\n    ${DATA_STRUCTURES_INCLUDES_FILES}\n    ${DATA_STRUCTURES_SOURCES_FILES}\n)\n\nset(DATA_STRUCTURES_INCLUDES\n    ../DataStructures\n    ../DataStructures/core\n    ../DataStructures/interfaces\n)\n\nadd_library(DataStructures STATIC\n    ${BASE_SOURCES}\n    ${DATA_STRUCTURES_SOURCES}\n)\n\ninclude_directories(DataStructuresTest\n    ${BASE_INCLUDES}\n    ${DATA_STRUCTURES_INCLUDES}\n    ${DATA_STRUCTURES_TEST_INCLUDES}\n    ${TEST_BASE_INCLUDES}\n    ${UNIT_TESTING_INCLUDES}\n)\n\nadd_executable(DataStructuresTest\n    ${BASE_SOURCES}\n    ${DATA_STRUCTURES_SOURCES}\n    ${DATA_STRUCTURES_TEST_SOURCES}\n    ${TEST_BASE_SOURCES}\n    ${UNIT_TESTING_SOURCES}\n)\n\ntarget_link_libraries(DataStructuresTest\n    PRIVATE Base TestBase UnitTesting DataStructures\n)\n\ninclude_directories(\n    ${BOOST_PATH}\n)\n",
    "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/DataStructures/CMakeLists.txt": "cmake_minimum_required(VERSION 3.13)\n\nproject(DataStructures VERSION 1.0)\n\nset(CMAKE_CXX_STANDARD 14)\n\nmacro(print_all_variables)\n    message(STATUS \"print_all_variables------------------------------------------{\")\n    get_cmake_property(_variableNames VARIABLES)\n    foreach (_variableName ${_variableNames})\n        message(STATUS \"${_variableName}=${${_variableName}}\")\n    endforeach()\n    message(STATUS \"print_all_variables------------------------------------------}\")\nendmacro()\n\nprint_all_variables()\n\n#\n# Configure boost library...\n#\nif (NOT $ENV{BOOST_ROOT})\n    set(BOOST_PATH $ENV{BOOST_ROOT})\nelse()\n    set(BOOST_PATH \"c:\\\\Boost\\\\boost_1_70_0\")\nendif()\n\nset(DATA_STRUCTURES_INCLUDES_FILES\n    ./DataStructureException.h\n    ./core/PreCompiled.h\n    ./interfaces/IteratorOfIteratorCollection.h\n)\n\nset(DATA_STRUCTURES_SOURCES_FILES\n    ./core/PreCompiled.cpp\n)\n\nset(DATA_STRUCTURES_SOURCES\n    ${DATA_STRUCTURES_INCLUDES_FILES}\n    ${DATA_STRUCTURES_SOURCES_FILES}\n)\n\nset(DATA_STRUCTURES_INCLUDES\n    .\n    ./core\n    ./interfaces\n)\n\nset(BASE_INCLUDES_FILES\n    ../Base/BaseException.h\n    ../Base/core/BaseDependencies.h\n    ../Base/core/BaseLogic.h\n    ../Base/core/ComparableComparator.h\n    ../Base/core/DereferenceEquatableComparator.h\n    ../Base/core/EquatableComparator.h\n    ../Base/core/IntervalMap.h\n    ../Base/core/IntervalMapIterator.h\n    ../Base/core/List.h\n    ../Base/core/ListIterator.h\n    ../Base/core/Matrix.h\n    ../Base/core/Position.h\n    ../Base/core/PreCompiled.h\n    ../Base/core/ReferenceCount.h\n    ../Base/core/ReferenceCountHolder.h\n    ../Base/core/StringIterator.h\n    ../Base/core/TwoDimensionalList.h\n    ../Base/core/TwoDimensionalListIterator.h\n    ../Base/interfaces/ComparatorFactory.h\n    ../Base/interfaces/CompareToBuilder.h\n    ../Base/interfaces/DateTime.h\n    ../Base/interfaces/Duration.h\n    ../Base/interfaces/EqualBuilder.h\n    ../Base/interfaces/IBinaryComparator.h\n    ../Base/interfaces/ICalculator.h\n    ../Base/interfaces/ICollection.h\n    ../Base/interfaces/IComparableComparator.h\n    ../Base/interfaces/IEquatableComparator.h\n    ../Base/interfaces/IFinder.h\n    ../Base/interfaces/IHashCodeProvider.h\n    ../Base/interfaces/IIntervalMap.h\n    ../Base/interfaces/IIterable.h\n    ../Base/interfaces/IIterator.h\n    ../Base/interfaces/IList.h\n    ../Base/interfaces/IMatrix.h\n    ../Base/interfaces/ISizableCollection.h\n    ../Base/interfaces/ITwoDimensionalList.h\n    ../Base/interfaces/IValidator.h\n    ../Base/interfaces/Interval.h\n    ../Base/interfaces/Intervals.h\n    ../Base/interfaces/IterableComparator.h\n    ../Base/interfaces/IteratorComparator.h\n    ../Base/interfaces/LogStreamWriter.h\n    ../Base/interfaces/Pair.h\n    ../Base/interfaces/SharedPtr.h\n    ../Base/interfaces/Strings.h\n    ../Base/interfaces/Triple.h\n)\n\nset(BASE_SOURCES_FILES\n    ../Base/core/CompareToBuilder.cpp\n    ../Base/core/DateTime.cpp\n    ../Base/core/EqualBuilder.cpp\n    ../Base/core/LogStreamWriter.cpp\n    ../Base/core/Position.cpp\n    ../Base/core/PreCompiled.cpp\n)\n\nset(BASE_SOURCES\n    ${BASE_INCLUDES_FILES}\n    ${BASE_SOURCES_FILES}\n)\n\nset(BASE_INCLUDES\n    ../Base\n    ../Base/core\n    ../Base/interfaces\n)\n\nadd_library(Base STATIC\n    ${BASE_SOURCES}\n)\n\ninclude_directories(DataStructures\n    ${BASE_INCLUDES}\n    ${DATA_STRUCTURES_INCLUDES}\n)\n\nadd_library(DataStructures STATIC\n    ${BASE_SOURCES}\n    ${DATA_STRUCTURES_SOURCES}\n)\n\ninclude_directories(\n    ${BOOST_PATH}\n)\n",
    "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Problems/CMakeLists.txt": "cmake_minimum_required(VERSION 3.13)\n\nproject(Problems VERSION 1.0)\n\nset(CMAKE_CXX_STANDARD 14)\n\nmacro(print_all_variables)\n    message(STATUS \"print_all_variables------------------------------------------{\")\n    get_cmake_property(_variableNames VARIABLES)\n    foreach (_variableName ${_variableNames})\n        message(STATUS \"${_variableName}=${${_variableName}}\")\n    endforeach()\n    message(STATUS \"print_all_variables------------------------------------------}\")\nendmacro()\n\nprint_all_variables()\n\n#\n# Configure boost library...\n#\nif (NOT $ENV{BOOST_ROOT})\n    set(BOOST_PATH $ENV{BOOST_ROOT})\nelse()\n    set(BOOST_PATH \"c:\\\\Boost\\\\boost_1_70_0\")\nendif()\n\nset(PROBLEMS_INCLUDES_FILES\n    ./ProblemException.h\n    ./core/CombinationSum.h\n    ./core/MatchingTriplets.h\n    ./core/MatrixFinder.h\n    ./core/MergingIntervals.h\n    ./core/MinimumWindowSubstring.h\n    ./core/NumberValidator.h\n    ./core/PositionQueens.h\n    ./core/PreCompiled.h\n    ./core/WordFinder.h\n    ./interfaces/ICombinationSum.h\n    ./interfaces/IMatchingTriplets.h\n    ./interfaces/IMatrixFinder.h\n    ./interfaces/IMergingIntervals.h\n    ./interfaces/IMinimumWindowSubstring.h\n    ./interfaces/IPositionQueens.h\n)\n\nset(PROBLEMS_SOURCES_FILES\n    ./core/MinimumWindowSubstring.cpp\n    ./core/NumberValidator.cpp\n    ./core/PositionQueens.cpp\n    ./core/PreCompiled.cpp\n    ./core/WordFinder.cpp\n)\n\nset(PROBLEMS_SOURCES\n    ${PROBLEMS_INCLUDES_FILES}\n    ${PROBLEMS_SOURCES_FILES}\n)\n\nset(PROBLEMS_INCLUDES\n    .\n    ./core\n    ./interfaces\n)\n\nset(BASE_INCLUDES_FILES\n    ../Base/BaseException.h\n    ../Base/core/BaseDependencies.h\n    ../Base/core/BaseLogic.h\n    ../Base/core/ComparableComparator.h\n    ../Base/core/DereferenceEquatableComparator.h\n    ../Base/core/EquatableComparator.h\n    ../Base/core/IntervalMap.h\n    ../Base/core/IntervalMapIterator.h\n    ../Base/core/List.h\n    ../Base/core/ListIterator.h\n    ../Base/core/Matrix.h\n    ../Base/core/Position.h\n    ../Base/core/PreCompiled.h\n    ../Base/core/ReferenceCount.h\n    ../Base/core/ReferenceCountHolder.h\n    ../Base/core/StringIterator.h\n    ../Base/core/TwoDimensionalList.h\n    ../Base/core/TwoDimensionalListIterator.h\n    ../Base/interfaces/ComparatorFactory.h\n    ../Base/interfaces/CompareToBuilder.h\n    ../Base/interfaces/DateTime.h\n    ../Base/interfaces/Duration.h\n    ../Base/interfaces/EqualBuilder.h\n    ../Base/interfaces/IBinaryComparator.h\n    ../Base/interfaces/ICalculator.h\n    ../Base/interfaces/ICollection.h\n    ../Base/interfaces/IComparableComparator.h\n    ../Base/interfaces/IEquatableComparator.h\n    ../Base/interfaces/IFinder.h\n    ../Base/interfaces/IHashCodeProvider.h\n    ../Base/interfaces/IIntervalMap.h\n    ../Base/interfaces/IIterable.h\n    ../Base/interfaces/IIterator.h\n    ../Base/interfaces/IList.h\n    ../Base/interfaces/IMatrix.h\n    ../Base/interfaces/ISizableCollection.h\n    ../Base/interfaces/ITwoDimensionalList.h\n    ../Base/interfaces/IValidator.h\n    ../Base/interfaces/Interval.h\n    ../Base/interfaces/Intervals.h\n    ../Base/interfaces/IterableComparator.h\n    ../Base/interfaces/IteratorComparator.h\n    ../Base/interfaces/LogStreamWriter.h\n    ../Base/interfaces/Pair.h\n    ../Base/interfaces/SharedPtr.h\n    ../Base/interfaces/Strings.h\n    ../Base/interfaces/Triple.h\n)\n\nset(BASE_SOURCES_FILES\n    ../Base/core/CompareToBuilder.cpp\n    ../Base/core/DateTime.cpp\n    ../Base/core/EqualBuilder.cpp\n    ../Base/core/LogStreamWriter.cpp\n    ../Base/core/Position.cpp\n    ../Base/core/PreCompiled.cpp\n)\n\nset(BASE_SOURCES\n    ${BASE_INCLUDES_FILES}\n    ${BASE_SOURCES_FILES}\n)\n\nset(BASE_INCLUDES\n    ../Base\n    ../Base/core\n    ../Base/interfaces\n)\n\nadd_library(Base STATIC\n    ${BASE_SOURCES}\n)\n\ninclude_directories(Problems\n    ${BASE_INCLUDES}\n    ${PROBLEMS_INCLUDES}\n)\n\nadd_library(Problems STATIC\n    ${BASE_SOURCES}\n    ${PROBLEMS_SOURCES}\n)\n\ninclude_directories(\n    ${BOOST_PATH}\n)\n",
    "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/BaseTest/CMakeLists.txt": "cmake_minimum_required(VERSION 3.13)\n\nproject(BaseTest VERSION 1.0)\n\nset(CMAKE_CXX_STANDARD 14)\n\nmacro(print_all_variables)\n    message(STATUS \"print_all_variables------------------------------------------{\")\n    get_cmake_property(_variableNames VARIABLES)\n    foreach (_variableName ${_variableNames})\n        message(STATUS \"${_variableName}=${${_variableName}}\")\n    endforeach()\n    message(STATUS \"print_all_variables------------------------------------------}\")\nendmacro()\n\nprint_all_variables()\n\n#\n# Configure boost library...\n#\nif (NOT $ENV{BOOST_ROOT})\n    set(BOOST_PATH $ENV{BOOST_ROOT})\nelse()\n    set(BOOST_PATH \"c:\\\\Boost\\\\boost_1_70_0\")\nendif()\n\nset(BASE_TEST_INCLUDES_FILES\n    ./core/PreCompiled.h\n    ./interfaces/IntervalMapUnitTest.h\n    ./interfaces/ListUnitTest.h\n    ./interfaces/MatrixUnitTest.h\n    ./interfaces/TestData.h\n    ./interfaces/TwoDimensionalListUnitTest.h\n)\n\nset(BASE_TEST_SOURCES_FILES\n    ./core/IntervalMapUnitTest.cpp\n    ./core/ListUnitTest.cpp\n    ./core/MatrixUnitTest.cpp\n    ./core/PreCompiled.cpp\n    ./core/TestData.cpp\n    ./core/TwoDimensionalListUnitTest.cpp\n    ./main.cpp\n)\n\nset(BASE_TEST_SOURCES\n    ${BASE_TEST_INCLUDES_FILES}\n    ${BASE_TEST_SOURCES_FILES}\n)\n\nset(BASE_TEST_INCLUDES\n    ./core\n    ./interfaces\n)\n\nset(BASE_INCLUDES_FILES\n    ../Base/BaseException.h\n    ../Base/core/BaseDependencies.h\n    ../Base/core/BaseLogic.h\n    ../Base/core/ComparableComparator.h\n    ../Base/core/DereferenceEquatableComparator.h\n    ../Base/core/EquatableComparator.h\n    ../Base/core/IntervalMap.h\n    ../Base/core/IntervalMapIterator.h\n    ../Base/core/List.h\n    ../Base/core/ListIterator.h\n    ../Base/core/Matrix.h\n    ../Base/core/Position.h\n    ../Base/core/PreCompiled.h\n    ../Base/core/ReferenceCount.h\n    ../Base/core/ReferenceCountHolder.h\n    ../Base/core/StringIterator.h\n    ../Base/core/TwoDimensionalList.h\n    ../Base/core/TwoDimensionalListIterator.h\n    ../Base/interfaces/ComparatorFactory.h\n    ../Base/interfaces/CompareToBuilder.h\n    ../Base/interfaces/DateTime.h\n    ../Base/interfaces/Duration.h\n    ../Base/interfaces/EqualBuilder.h\n    ../Base/interfaces/IBinaryComparator.h\n    ../Base/interfaces/ICalculator.h\n    ../Base/interfaces/ICollection.h\n    ../Base/interfaces/IComparableComparator.h\n    ../Base/interfaces/IEquatableComparator.h\n    ../Base/interfaces/IFinder.h\n    ../Base/interfaces/IHashCodeProvider.h\n    ../Base/interfaces/IIntervalMap.h\n    ../Base/interfaces/IIterable.h\n    ../Base/interfaces/IIterator.h\n    ../Base/interfaces/IList.h\n    ../Base/interfaces/IMatrix.h\n    ../Base/interfaces/ISizableCollection.h\n    ../Base/interfaces/ITwoDimensionalList.h\n    ../Base/interfaces/IValidator.h\n    ../Base/interfaces/Interval.h\n    ../Base/interfaces/Intervals.h\n    ../Base/interfaces/IterableComparator.h\n    ../Base/interfaces/IteratorComparator.h\n    ../Base/interfaces/LogStreamWriter.h\n    ../Base/interfaces/Pair.h\n    ../Base/interfaces/SharedPtr.h\n    ../Base/interfaces/Strings.h\n    ../Base/interfaces/Triple.h\n)\n\nset(BASE_SOURCES_FILES\n    ../Base/core/CompareToBuilder.cpp\n    ../Base/core/DateTime.cpp\n    ../Base/core/EqualBuilder.cpp\n    ../Base/core/LogStreamWriter.cpp\n    ../Base/core/Position.cpp\n    ../Base/core/PreCompiled.cpp\n)\n\nset(BASE_SOURCES\n    ${BASE_INCLUDES_FILES}\n    ${BASE_SOURCES_FILES}\n)\n\nset(BASE_INCLUDES\n    ../Base\n    ../Base/core\n    ../Base/interfaces\n)\n\nadd_library(Base STATIC\n    ${BASE_SOURCES}\n)\n\nset(TEST_BASE_INCLUDES_FILES\n    ../TestBase/TestBaseException.h\n    ../TestBase/core/PreCompiled.h\n    ../TestBase/interfaces/Assertion.h\n)\n\nset(TEST_BASE_SOURCES_FILES\n    ../TestBase/core/Assertion.cpp\n    ../TestBase/core/PreCompiled.cpp\n)\n\nset(TEST_BASE_SOURCES\n    ${TEST_BASE_INCLUDES_FILES}\n    ${TEST_BASE_SOURCES_FILES}\n)\n\nset(TEST_BASE_INCLUDES\n    ../TestBase\n    ../TestBase/core\n    ../TestBase/interfaces\n)\n\nadd_library(TestBase STATIC\n    ${BASE_SOURCES}\n    ${TEST_BASE_SOURCES}\n)\n\nset(UNIT_TESTING_INCLUDES_FILES\n    ../UnitTesting/UnitTestingException.h\n    ../UnitTesting/core/PreCompiled.h\n    ../UnitTesting/core/TestRunningResult.h\n    ../UnitTesting/core/TestRunningResults.h\n    ../UnitTesting/core/UnitTestFunction.h\n    ../UnitTesting/core/UnitTestHandler.h\n    ../UnitTesting/core/UnitTestManager.h\n    ../UnitTesting/interfaces/ITestFunction.h\n    ../UnitTesting/interfaces/ITestRegistration.h\n    ../UnitTesting/interfaces/ITestRunningResult.h\n    ../UnitTesting/interfaces/ITestRunningResults.h\n    ../UnitTesting/interfaces/IUnitTest.h\n    ../UnitTesting/interfaces/IUnitTestHandler.h\n    ../UnitTesting/interfaces/IUnitTestManager.h\n    ../UnitTesting/interfaces/UnitTestBase.h\n    ../UnitTesting/interfaces/UnitTestException.h\n)\n\nset(UNIT_TESTING_SOURCES_FILES\n    ../UnitTesting/core/PreCompiled.cpp\n    ../UnitTesting/core/TestRunningResult.cpp\n    ../UnitTesting/core/TestRunningResults.cpp\n    ../UnitTesting/core/UnitTestBase.cpp\n    ../UnitTesting/core/UnitTestHandler.cpp\n    ../UnitTesting/core/UnitTestManager.cpp\n)\n\nset(UNIT_TESTING_SOURCES\n    ${UNIT_TESTING_INCLUDES_FILES}\n    ${UNIT_TESTING_SOURCES_FILES}\n)\n\nset(UNIT_TESTING_INCLUDES\n    ../UnitTesting\n    ../UnitTesting/core\n    ../UnitTesting/interfaces\n)\n\nadd_library(UnitTesting STATIC\n    ${BASE_SOURCES}\n    ${TEST_BASE_SOURCES}\n    ${UNIT_TESTING_SOURCES}\n)\n\ninclude_directories(BaseTest\n    ${BASE_INCLUDES}\n    ${BASE_TEST_INCLUDES}\n    ${TEST_BASE_INCLUDES}\n    ${UNIT_TESTING_INCLUDES}\n)\n\nadd_executable(BaseTest\n    ${BASE_SOURCES}\n    ${BASE_TEST_SOURCES}\n    ${TEST_BASE_SOURCES}\n    ${UNIT_TESTING_SOURCES}\n)\n\ntarget_link_libraries(BaseTest\n    PRIVATE Base TestBase UnitTesting\n)\n\ninclude_directories(\n    ${BOOST_PATH}\n)\n",
    "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/MemoryManagement/CMakeLists.txt": "cmake_minimum_required(VERSION 3.13)\n\nproject(MemoryManagement VERSION 1.0)\n\nset(CMAKE_CXX_STANDARD 14)\n\nmacro(print_all_variables)\n    message(STATUS \"print_all_variables------------------------------------------{\")\n    get_cmake_property(_variableNames VARIABLES)\n    foreach (_variableName ${_variableNames})\n        message(STATUS \"${_variableName}=${${_variableName}}\")\n    endforeach()\n    message(STATUS \"print_all_variables------------------------------------------}\")\nendmacro()\n\nprint_all_variables()\n\n#\n# Configure boost library...\n#\nif (NOT $ENV{BOOST_ROOT})\n    set(BOOST_PATH $ENV{BOOST_ROOT})\nelse()\n    set(BOOST_PATH \"c:\\\\Boost\\\\boost_1_70_0\")\nendif()\n\nset(MEMORY_MANAGEMENT_INCLUDES_FILES\n    ./MemoryManagementException.h\n    ./core/FixedMemoryPool.h\n    ./core/MemoryAllocator.h\n    ./core/PreCompiled.h\n    ./interfaces/IMemoryAllocator.h\n    ./interfaces/IMemoryPool.h\n    ./interfaces/IObjectPool.h\n    ./interfaces/MemoryPool.h\n    ./interfaces/ObjectPool.h\n    ./interfaces/ObjectPoolElement.h\n)\n\nset(MEMORY_MANAGEMENT_SOURCES_FILES\n    ./core/FixedMemoryPool.cpp\n    ./core/MemoryAllocator.cpp\n    ./core/MemoryPool.cpp\n    ./core/PreCompiled.cpp\n)\n\nset(MEMORY_MANAGEMENT_SOURCES\n    ${MEMORY_MANAGEMENT_INCLUDES_FILES}\n    ${MEMORY_MANAGEMENT_SOURCES_FILES}\n)\n\nset(MEMORY_MANAGEMENT_INCLUDES\n    .\n    ./core\n    ./interfaces\n)\n\nset(BASE_INCLUDES_FILES\n    ../Base/BaseException.h\n    ../Base/core/BaseDependencies.h\n    ../Base/core/BaseLogic.h\n    ../Base/core/ComparableComparator.h\n    ../Base/core/DereferenceEquatableComparator.h\n    ../Base/core/EquatableComparator.h\n    ../Base/core/IntervalMap.h\n    ../Base/core/IntervalMapIterator.h\n    ../Base/core/List.h\n    ../Base/core/ListIterator.h\n    ../Base/core/Matrix.h\n    ../Base/core/Position.h\n    ../Base/core/PreCompiled.h\n    ../Base/core/ReferenceCount.h\n    ../Base/core/ReferenceCountHolder.h\n    ../Base/core/StringIterator.h\n    ../Base/core/TwoDimensionalList.h\n    ../Base/core/TwoDimensionalListIterator.h\n    ../Base/interfaces/ComparatorFactory.h\n    ../Base/interfaces/CompareToBuilder.h\n    ../Base/interfaces/DateTime.h\n    ../Base/interfaces/Duration.h\n    ../Base/interfaces/EqualBuilder.h\n    ../Base/interfaces/IBinaryComparator.h\n    ../Base/interfaces/ICalculator.h\n    ../Base/interfaces/ICollection.h\n    ../Base/interfaces/IComparableComparator.h\n    ../Base/interfaces/IEquatableComparator.h\n    ../Base/interfaces/IFinder.h\n    ../Base/interfaces/IHashCodeProvider.h\n    ../Base/interfaces/IIntervalMap.h\n    ../Base/interfaces/IIterable.h\n    ../Base/interfaces/IIterator.h\n    ../Base/interfaces/IList.h\n    ../Base/interfaces/IMatrix.h\n    ../Base/interfaces/ISizableCollection.h\n    ../Base/interfaces/ITwoDimensionalList.h\n    ../Base/interfaces/IValidator.h\n    ../Base/interfaces/Interval.h\n    ../Base/interfaces/Intervals.h\n    ../Base/interfaces/IterableComparator.h\n    ../Base/interfaces/IteratorComparator.h\n    ../Base/interfaces/LogStreamWriter.h\n    ../Base/interfaces/Pair.h\n    ../Base/interfaces/SharedPtr.h\n    ../Base/interfaces/Strings.h\n    ../Base/interfaces/Triple.h\n)\n\nset(BASE_SOURCES_FILES\n    ../Base/core/CompareToBuilder.cpp\n    ../Base/core/DateTime.cpp\n    ../Base/core/EqualBuilder.cpp\n    ../Base/core/LogStreamWriter.cpp\n    ../Base/core/Position.cpp\n    ../Base/core/PreCompiled.cpp\n)\n\nset(BASE_SOURCES\n    ${BASE_INCLUDES_FILES}\n    ${BASE_SOURCES_FILES}\n)\n\nset(BASE_INCLUDES\n    ../Base\n    ../Base/core\n    ../Base/interfaces\n)\n\nadd_library(Base STATIC\n    ${BASE_SOURCES}\n)\n\ninclude_directories(MemoryManagement\n    ${BASE_INCLUDES}\n    ${MEMORY_MANAGEMENT_INCLUDES}\n)\n\nadd_library(MemoryManagement STATIC\n    ${BASE_SOURCES}\n    ${MEMORY_MANAGEMENT_SOURCES}\n)\n\ninclude_directories(\n    ${BOOST_PATH}\n)\n",
    "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/ConcurrencyTest/CMakeLists.txt": "cmake_minimum_required(VERSION 3.13)\n\nproject(ConcurrencyTest VERSION 1.0)\n\nset(CMAKE_CXX_STANDARD 14)\n\nmacro(print_all_variables)\n    message(STATUS \"print_all_variables------------------------------------------{\")\n    get_cmake_property(_variableNames VARIABLES)\n    foreach (_variableName ${_variableNames})\n        message(STATUS \"${_variableName}=${${_variableName}}\")\n    endforeach()\n    message(STATUS \"print_all_variables------------------------------------------}\")\nendmacro()\n\nprint_all_variables()\n\n#\n# Configure boost library...\n#\nif (NOT $ENV{BOOST_ROOT})\n    set(BOOST_PATH $ENV{BOOST_ROOT})\nelse()\n    set(BOOST_PATH \"c:\\\\Boost\\\\boost_1_70_0\")\nendif()\n\nset(CONCURRENCY_TEST_INCLUDES_FILES\n    ./core/PreCompiled.h\n    ./interfaces/ConcurrentQueueUnitTest.h\n    ./interfaces/TestData.h\n)\n\nset(CONCURRENCY_TEST_SOURCES_FILES\n    ./core/ConcurrentQueueUnitTest.cpp\n    ./core/PreCompiled.cpp\n    ./core/TestData.cpp\n    ./main.cpp\n)\n\nset(CONCURRENCY_TEST_SOURCES\n    ${CONCURRENCY_TEST_INCLUDES_FILES}\n    ${CONCURRENCY_TEST_SOURCES_FILES}\n)\n\nset(CONCURRENCY_TEST_INCLUDES\n    ./core\n    ./interfaces\n)\n\nset(BASE_INCLUDES_FILES\n    ../Base/BaseException.h\n    ../Base/core/BaseDependencies.h\n    ../Base/core/BaseLogic.h\n    ../Base/core/ComparableComparator.h\n    ../Base/core/DereferenceEquatableComparator.h\n    ../Base/core/EquatableComparator.h\n    ../Base/core/IntervalMap.h\n    ../Base/core/IntervalMapIterator.h\n    ../Base/core/List.h\n    ../Base/core/ListIterator.h\n    ../Base/core/Matrix.h\n    ../Base/core/Position.h\n    ../Base/core/PreCompiled.h\n    ../Base/core/ReferenceCount.h\n    ../Base/core/ReferenceCountHolder.h\n    ../Base/core/StringIterator.h\n    ../Base/core/TwoDimensionalList.h\n    ../Base/core/TwoDimensionalListIterator.h\n    ../Base/interfaces/ComparatorFactory.h\n    ../Base/interfaces/CompareToBuilder.h\n    ../Base/interfaces/DateTime.h\n    ../Base/interfaces/Duration.h\n    ../Base/interfaces/EqualBuilder.h\n    ../Base/interfaces/IBinaryComparator.h\n    ../Base/interfaces/ICalculator.h\n    ../Base/interfaces/ICollection.h\n    ../Base/interfaces/IComparableComparator.h\n    ../Base/interfaces/IEquatableComparator.h\n    ../Base/interfaces/IFinder.h\n    ../Base/interfaces/IHashCodeProvider.h\n    ../Base/interfaces/IIntervalMap.h\n    ../Base/interfaces/IIterable.h\n    ../Base/interfaces/IIterator.h\n    ../Base/interfaces/IList.h\n    ../Base/interfaces/IMatrix.h\n    ../Base/interfaces/ISizableCollection.h\n    ../Base/interfaces/ITwoDimensionalList.h\n    ../Base/interfaces/IValidator.h\n    ../Base/interfaces/Interval.h\n    ../Base/interfaces/Intervals.h\n    ../Base/interfaces/IterableComparator.h\n    ../Base/interfaces/IteratorComparator.h\n    ../Base/interfaces/LogStreamWriter.h\n    ../Base/interfaces/Pair.h\n    ../Base/interfaces/SharedPtr.h\n    ../Base/interfaces/Strings.h\n    ../Base/interfaces/Triple.h\n)\n\nset(BASE_SOURCES_FILES\n    ../Base/core/CompareToBuilder.cpp\n    ../Base/core/DateTime.cpp\n    ../Base/core/EqualBuilder.cpp\n    ../Base/core/LogStreamWriter.cpp\n    ../Base/core/Position.cpp\n    ../Base/core/PreCompiled.cpp\n)\n\nset(BASE_SOURCES\n    ${BASE_INCLUDES_FILES}\n    ${BASE_SOURCES_FILES}\n)\n\nset(BASE_INCLUDES\n    ../Base\n    ../Base/core\n    ../Base/interfaces\n)\n\nadd_library(Base STATIC\n    ${BASE_SOURCES}\n)\n\nset(TEST_BASE_INCLUDES_FILES\n    ../TestBase/TestBaseException.h\n    ../TestBase/core/PreCompiled.h\n    ../TestBase/interfaces/Assertion.h\n)\n\nset(TEST_BASE_SOURCES_FILES\n    ../TestBase/core/Assertion.cpp\n    ../TestBase/core/PreCompiled.cpp\n)\n\nset(TEST_BASE_SOURCES\n    ${TEST_BASE_INCLUDES_FILES}\n    ${TEST_BASE_SOURCES_FILES}\n)\n\nset(TEST_BASE_INCLUDES\n    ../TestBase\n    ../TestBase/core\n    ../TestBase/interfaces\n)\n\nadd_library(TestBase STATIC\n    ${BASE_SOURCES}\n    ${TEST_BASE_SOURCES}\n)\n\nset(UNIT_TESTING_INCLUDES_FILES\n    ../UnitTesting/UnitTestingException.h\n    ../UnitTesting/core/PreCompiled.h\n    ../UnitTesting/core/TestRunningResult.h\n    ../UnitTesting/core/TestRunningResults.h\n    ../UnitTesting/core/UnitTestFunction.h\n    ../UnitTesting/core/UnitTestHandler.h\n    ../UnitTesting/core/UnitTestManager.h\n    ../UnitTesting/interfaces/ITestFunction.h\n    ../UnitTesting/interfaces/ITestRegistration.h\n    ../UnitTesting/interfaces/ITestRunningResult.h\n    ../UnitTesting/interfaces/ITestRunningResults.h\n    ../UnitTesting/interfaces/IUnitTest.h\n    ../UnitTesting/interfaces/IUnitTestHandler.h\n    ../UnitTesting/interfaces/IUnitTestManager.h\n    ../UnitTesting/interfaces/UnitTestBase.h\n    ../UnitTesting/interfaces/UnitTestException.h\n)\n\nset(UNIT_TESTING_SOURCES_FILES\n    ../UnitTesting/core/PreCompiled.cpp\n    ../UnitTesting/core/TestRunningResult.cpp\n    ../UnitTesting/core/TestRunningResults.cpp\n    ../UnitTesting/core/UnitTestBase.cpp\n    ../UnitTesting/core/UnitTestHandler.cpp\n    ../UnitTesting/core/UnitTestManager.cpp\n)\n\nset(UNIT_TESTING_SOURCES\n    ${UNIT_TESTING_INCLUDES_FILES}\n    ${UNIT_TESTING_SOURCES_FILES}\n)\n\nset(UNIT_TESTING_INCLUDES\n    ../UnitTesting\n    ../UnitTesting/core\n    ../UnitTesting/interfaces\n)\n\nadd_library(UnitTesting STATIC\n    ${BASE_SOURCES}\n    ${TEST_BASE_SOURCES}\n    ${UNIT_TESTING_SOURCES}\n)\n\nset(CONCURRENCY_INCLUDES_FILES\n    ../Concurrency/ConcurrencyException.h\n    ../Concurrency/core/PreCompiled.h\n    ../Concurrency/interfaces/ConcurrentQueue.h\n)\n\nset(CONCURRENCY_SOURCES_FILES\n    ../Concurrency/core/PreCompiled.cpp\n)\n\nset(CONCURRENCY_SOURCES\n    ${CONCURRENCY_INCLUDES_FILES}\n    ${CONCURRENCY_SOURCES_FILES}\n)\n\nset(CONCURRENCY_INCLUDES\n    ../Concurrency\n    ../Concurrency/core\n    ../Concurrency/interfaces\n)\n\nadd_library(Concurrency STATIC\n    ${BASE_SOURCES}\n    ${CONCURRENCY_SOURCES}\n)\n\ninclude_directories(ConcurrencyTest\n    ${BASE_INCLUDES}\n    ${CONCURRENCY_INCLUDES}\n    ${CONCURRENCY_TEST_INCLUDES}\n    ${TEST_BASE_INCLUDES}\n    ${UNIT_TESTING_INCLUDES}\n)\n\nadd_executable(ConcurrencyTest\n    ${BASE_SOURCES}\n    ${CONCURRENCY_SOURCES}\n    ${CONCURRENCY_TEST_SOURCES}\n    ${TEST_BASE_SOURCES}\n    ${UNIT_TESTING_SOURCES}\n)\n\ntarget_link_libraries(ConcurrencyTest\n    PRIVATE Base TestBase UnitTesting Concurrency\n)\n\ninclude_directories(\n    ${BOOST_PATH}\n)\n",
    "/home/bental-linux/repositories/Projects/DevEnvironmentCLion/Base/CMakeLists.txt": "cmake_minimum_required(VERSION 3.13)\n\nproject(Base VERSION 1.0)\n\nset(CMAKE_CXX_STANDARD 14)\n\nmacro(print_all_variables)\n    message(STATUS \"print_all_variables------------------------------------------{\")\n    get_cmake_property(_variableNames VARIABLES)\n    foreach (_variableName ${_variableNames})\n        message(STATUS \"${_variableName}=${${_variableName}}\")\n    endforeach()\n    message(STATUS \"print_all_variables------------------------------------------}\")\nendmacro()\n\nprint_all_variables()\n\n#\n# Configure boost library...\n#\nif (NOT $ENV{BOOST_ROOT})\n    set(BOOST_PATH $ENV{BOOST_ROOT})\nelse()\n    set(BOOST_PATH \"c:\\\\Boost\\\\boost_1_70_0\")\nendif()\n\nset(BASE_INCLUDES_FILES\n    ./BaseException.h\n    ./core/BaseDependencies.h\n    ./core/BaseLogic.h\n    ./core/ComparableComparator.h\n    ./core/DereferenceEquatableComparator.h\n    ./core/EquatableComparator.h\n    ./core/IntervalMap.h\n    ./core/IntervalMapIterator.h\n    ./core/List.h\n    ./core/ListIterator.h\n    ./core/Matrix.h\n    ./core/Position.h\n    ./core/PreCompiled.h\n    ./core/ReferenceCount.h\n    ./core/ReferenceCountHolder.h\n    ./core/StringIterator.h\n    ./core/TwoDimensionalList.h\n    ./core/TwoDimensionalListIterator.h\n    ./interfaces/ComparatorFactory.h\n    ./interfaces/CompareToBuilder.h\n    ./interfaces/DateTime.h\n    ./interfaces/Duration.h\n    ./interfaces/EqualBuilder.h\n    ./interfaces/IBinaryComparator.h\n    ./interfaces/ICalculator.h\n    ./interfaces/ICollection.h\n    ./interfaces/IComparableComparator.h\n    ./interfaces/IEquatableComparator.h\n    ./interfaces/IFinder.h\n    ./interfaces/IHashCodeProvider.h\n    ./interfaces/IIntervalMap.h\n    ./interfaces/IIterable.h\n    ./interfaces/IIterator.h\n    ./interfaces/IList.h\n    ./interfaces/IMatrix.h\n    ./interfaces/ISizableCollection.h\n    ./interfaces/ITwoDimensionalList.h\n    ./interfaces/IValidator.h\n    ./interfaces/Interval.h\n    ./interfaces/Intervals.h\n    ./interfaces/IterableComparator.h\n    ./interfaces/IteratorComparator.h\n    ./interfaces/LogStreamWriter.h\n    ./interfaces/Pair.h\n    ./interfaces/SharedPtr.h\n    ./interfaces/Strings.h\n    ./interfaces/Triple.h\n)\n\nset(BASE_SOURCES_FILES\n    ./core/CompareToBuilder.cpp\n    ./core/DateTime.cpp\n    ./core/EqualBuilder.cpp\n    ./core/LogStreamWriter.cpp\n    ./core/Position.cpp\n    ./core/PreCompiled.cpp\n)\n\nset(BASE_SOURCES\n    ${BASE_INCLUDES_FILES}\n    ${BASE_SOURCES_FILES}\n)\n\nset(BASE_INCLUDES\n    .\n    ./core\n    ./interfaces\n)\n\ninclude_directories(Base\n    ${BASE_INCLUDES}\n)\n\nadd_library(Base STATIC\n    ${BASE_SOURCES}\n)\n\ninclude_directories(\n    ${BOOST_PATH}\n)\n"
  }
}
