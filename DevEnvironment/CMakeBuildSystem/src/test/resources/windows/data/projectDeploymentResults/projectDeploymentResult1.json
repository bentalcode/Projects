{
  "propertyProject": {
    "name": "DevEnvironmentCLion",
    "rootPath": "c:\\repositories\\Projects\\DevEnvironmentCLion",
    "modules": [
      {
        "name": "Base",
        "rootPath": "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base",
        "headerFilesPaths": [
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\BaseException.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\BaseDependencies.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\BaseLogic.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\ClassType.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\ComparableComparator.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\DereferenceComparableComparator.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\DereferenceComparableComparator2.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\DereferenceEquatableComparator.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\DereferenceEquatableComparator2.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\EquatableComparator.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\IntervalMap.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\IntervalMapIterator.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\IterableObject.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\KmpStringSearch.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\List.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\ListIterator.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\Matrix.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\Position.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\PreCompiled.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\ReferenceCount.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\ReferenceCountHolder.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\SkipIterator.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\StringIterator.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\TwoDimensionalList.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\TwoDimensionalListIterator.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\ClassTypes.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\ComparatorFactory.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\CompareToBuilder.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\DateTime.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\Dimensions.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\Duration.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\EqualBuilder.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\IBinaryComparator.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\IBuilder.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\ICalculator.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\IClassType.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\ICollection.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\IComparableComparator.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\IEquatableComparator.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\IFinder.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\IHashCodeProvider.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\IIntervalMap.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\IIterable.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\IIterator.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\IList.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\IMatrix.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\Interval.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\Intervals.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\IReverseIterable.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\IReverseIterator.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\ISizableCollection.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\ISkipIterator.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\IterableComparator.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\IteratorComparator.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\ITwoDimensionalList.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\IValidator.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\IVisitor.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\LogStreamWriter.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\Pair.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\SharedPtr.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\StringComparable.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\StringEquality.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\Strings.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\StringSearch.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\interfaces\\Triple.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\NotImplementedException.h"
        ],
        "sourceFilesPaths": [
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\build\\CMakeFiles\\3.15.3\\CompilerIdCXX\\CMakeCXXCompilerId.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\ClassType.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\CompareToBuilder.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\DateTime.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\EqualBuilder.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\KmpStringSearch.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\LogStreamWriter.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\Position.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\PreCompiled.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\SkipIterator.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\StringComparable.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\StringEquality.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\Strings.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\core\\StringSearch.cpp"
        ],
        "cmakeListsFilePath": "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\CMakeLists.txt"
      },
      {
        "name": "DataStructures",
        "rootPath": "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructures",
        "headerFilesPaths": [
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructures\\binarytree\\core\\BinaryTree.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructures\\binarytree\\core\\BinaryTreeEndNode.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructures\\binarytree\\core\\BinaryTreeInorderIterator.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructures\\binarytree\\core\\BinaryTreeInorderReverseIterator.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructures\\binarytree\\core\\BinaryTreeLevelOrderIterator.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructures\\binarytree\\core\\BinaryTreeLevelOrderWithEndNodesIterator.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructures\\binarytree\\core\\BinaryTreeLogic.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructures\\binarytree\\core\\BinaryTreeNode.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructures\\binarytree\\core\\BinaryTreeNodeListIterator.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructures\\binarytree\\core\\BinaryTreeNodeListReverseIterator.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructures\\binarytree\\core\\BinaryTreeNodes.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructures\\binarytree\\core\\BinaryTreePostorderIterator.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructures\\binarytree\\core\\BinaryTreePreorderIterator.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructures\\binarytree\\core\\BinaryTreeStreamBuilder.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructures\\binarytree\\interfaces\\IBinaryTree.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructures\\binarytree\\interfaces\\IBinaryTreeLogic.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructures\\binarytree\\interfaces\\IBinaryTreeNode.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructures\\binarytree\\interfaces\\IBinaryTreeNodeIterator.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructures\\binarytree\\interfaces\\IBinaryTreeNodeReverseIterator.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructures\\binarytree\\interfaces\\IBinaryTreeTraversal.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructures\\core\\PreCompiled.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructures\\DataStructureException.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructures\\interfaces\\IteratorOfIteratorCollection.h"
        ],
        "sourceFilesPaths": [
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructures\\build\\CMakeFiles\\3.15.3\\CompilerIdCXX\\CMakeCXXCompilerId.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructures\\core\\PreCompiled.cpp"
        ],
        "cmakeListsFilePath": "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructures\\CMakeLists.txt",
        "dependentModules": [
          "Base"
        ]
      },
      {
        "name": "Concurrency",
        "rootPath": "c:\\repositories\\Projects\\DevEnvironmentCLion\\Concurrency",
        "headerFilesPaths": [
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Concurrency\\ConcurrencyException.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Concurrency\\core\\PreCompiled.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Concurrency\\interfaces\\ConcurrentQueue.h"
        ],
        "sourceFilesPaths": [
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Concurrency\\core\\PreCompiled.cpp"
        ],
        "cmakeListsFilePath": "c:\\repositories\\Projects\\DevEnvironmentCLion\\Concurrency\\CMakeLists.txt",
        "dependentModules": [
          "Base"
        ]
      },
      {
        "name": "MemoryManagement",
        "rootPath": "c:\\repositories\\Projects\\DevEnvironmentCLion\\MemoryManagement",
        "headerFilesPaths": [
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\MemoryManagement\\core\\FixedMemoryPool.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\MemoryManagement\\core\\MemoryAllocator.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\MemoryManagement\\core\\PreCompiled.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\MemoryManagement\\interfaces\\IMemoryAllocator.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\MemoryManagement\\interfaces\\IMemoryPool.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\MemoryManagement\\interfaces\\IObjectPool.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\MemoryManagement\\interfaces\\MemoryPool.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\MemoryManagement\\interfaces\\ObjectPool.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\MemoryManagement\\interfaces\\ObjectPoolElement.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\MemoryManagement\\MemoryManagementException.h"
        ],
        "sourceFilesPaths": [
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\MemoryManagement\\cmake-build-debug\\CMakeFiles\\3.15.3\\CompilerIdCXX\\CMakeCXXCompilerId.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\MemoryManagement\\core\\FixedMemoryPool.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\MemoryManagement\\core\\MemoryAllocator.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\MemoryManagement\\core\\MemoryPool.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\MemoryManagement\\core\\PreCompiled.cpp"
        ],
        "cmakeListsFilePath": "c:\\repositories\\Projects\\DevEnvironmentCLion\\MemoryManagement\\CMakeLists.txt",
        "dependentModules": [
          "Base"
        ]
      },
      {
        "name": "Problems",
        "rootPath": "c:\\repositories\\Projects\\DevEnvironmentCLion\\Problems",
        "headerFilesPaths": [
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Problems\\core\\CombinationSum.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Problems\\core\\FlightRoutePlanner.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Problems\\core\\MatchingTriplets.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Problems\\core\\MatrixFinder.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Problems\\core\\MergingIntervals.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Problems\\core\\MinimumWindowSubstring.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Problems\\core\\NumberValidator.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Problems\\core\\PositionQueens.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Problems\\core\\PreCompiled.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Problems\\core\\WordFinder.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Problems\\interfaces\\ICombinationSum.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Problems\\interfaces\\IFlightRoutePlanner.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Problems\\interfaces\\IMatchingTriplets.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Problems\\interfaces\\IMatrixFinder.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Problems\\interfaces\\IMergingIntervals.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Problems\\interfaces\\IMinimumWindowSubstring.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Problems\\interfaces\\IPositionQueens.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Problems\\ProblemException.h"
        ],
        "sourceFilesPaths": [
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Problems\\build\\CMakeFiles\\3.15.3\\CompilerIdCXX\\CMakeCXXCompilerId.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Problems\\core\\FlightRoutePlanner.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Problems\\core\\MinimumWindowSubstring.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Problems\\core\\NumberValidator.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Problems\\core\\PositionQueens.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Problems\\core\\PreCompiled.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\Problems\\core\\WordFinder.cpp"
        ],
        "cmakeListsFilePath": "c:\\repositories\\Projects\\DevEnvironmentCLion\\Problems\\CMakeLists.txt",
        "dependentModules": [
          "Base"
        ]
      },
      {
        "name": "TestBase",
        "rootPath": "c:\\repositories\\Projects\\DevEnvironmentCLion\\TestBase",
        "headerFilesPaths": [
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\TestBase\\core\\PreCompiled.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\TestBase\\interfaces\\Assertion.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\TestBase\\TestBaseException.h"
        ],
        "sourceFilesPaths": [
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\TestBase\\build\\CMakeFiles\\3.15.3\\CompilerIdCXX\\CMakeCXXCompilerId.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\TestBase\\core\\Assertion.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\TestBase\\core\\PreCompiled.cpp"
        ],
        "cmakeListsFilePath": "c:\\repositories\\Projects\\DevEnvironmentCLion\\TestBase\\CMakeLists.txt",
        "dependentModules": [
          "Base"
        ]
      },
      {
        "name": "UnitTesting",
        "rootPath": "c:\\repositories\\Projects\\DevEnvironmentCLion\\UnitTesting",
        "headerFilesPaths": [
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\UnitTesting\\core\\PreCompiled.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\UnitTesting\\core\\TestRunningResult.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\UnitTesting\\core\\TestRunningResults.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\UnitTesting\\core\\UnitTestFunction.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\UnitTesting\\core\\UnitTestHandler.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\UnitTesting\\core\\UnitTestManager.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\UnitTesting\\interfaces\\ITestFunction.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\UnitTesting\\interfaces\\ITestRegistration.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\UnitTesting\\interfaces\\ITestRunningResult.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\UnitTesting\\interfaces\\ITestRunningResults.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\UnitTesting\\interfaces\\IUnitTest.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\UnitTesting\\interfaces\\IUnitTestHandler.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\UnitTesting\\interfaces\\IUnitTestManager.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\UnitTesting\\interfaces\\UnitTestBase.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\UnitTesting\\interfaces\\UnitTestException.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\UnitTesting\\UnitTestingException.h"
        ],
        "sourceFilesPaths": [
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\UnitTesting\\build\\CMakeFiles\\3.15.3\\CompilerIdCXX\\CMakeCXXCompilerId.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\UnitTesting\\core\\PreCompiled.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\UnitTesting\\core\\TestRunningResult.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\UnitTesting\\core\\TestRunningResults.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\UnitTesting\\core\\UnitTestBase.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\UnitTesting\\core\\UnitTestHandler.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\UnitTesting\\core\\UnitTestManager.cpp"
        ],
        "cmakeListsFilePath": "c:\\repositories\\Projects\\DevEnvironmentCLion\\UnitTesting\\CMakeLists.txt",
        "dependentModules": [
          "Base",
          "TestBase"
        ]
      },
      {
        "name": "BaseTest",
        "rootPath": "c:\\repositories\\Projects\\DevEnvironmentCLion\\BaseTest",
        "headerFilesPaths": [
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\BaseTest\\core\\PreCompiled.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\BaseTest\\interfaces\\IntervalMapUnitTest.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\BaseTest\\interfaces\\KmpStringSearchUnitTest.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\BaseTest\\interfaces\\ListUnitTest.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\BaseTest\\interfaces\\MatrixUnitTest.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\BaseTest\\interfaces\\StringsUnitTest.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\BaseTest\\interfaces\\TestData.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\BaseTest\\interfaces\\TwoDimensionalListUnitTest.h"
        ],
        "sourceFilesPaths": [
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\BaseTest\\build\\CMakeFiles\\3.15.3\\CompilerIdCXX\\CMakeCXXCompilerId.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\BaseTest\\core\\IntervalMapUnitTest.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\BaseTest\\core\\KmpStringSearchUnitTest.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\BaseTest\\core\\ListUnitTest.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\BaseTest\\core\\MatrixUnitTest.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\BaseTest\\core\\PreCompiled.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\BaseTest\\core\\StringsUnitTest.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\BaseTest\\core\\TestData.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\BaseTest\\core\\TwoDimensionalListUnitTest.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\BaseTest\\main.cpp"
        ],
        "cmakeListsFilePath": "c:\\repositories\\Projects\\DevEnvironmentCLion\\BaseTest\\CMakeLists.txt",
        "dependentModules": [
          "Base",
          "TestBase",
          "UnitTesting"
        ]
      },
      {
        "name": "DataStructuresTest",
        "rootPath": "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructuresTest",
        "headerFilesPaths": [
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructuresTest\\binarytree\\interfaces\\BinaryTreeData.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructuresTest\\binarytree\\interfaces\\BinaryTreeTestData.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructuresTest\\binarytree\\interfaces\\BinaryTreeUnitTest.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructuresTest\\core\\PreCompiled.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructuresTest\\interfaces\\IteratorOfIteratorCollectionUnitTest.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructuresTest\\interfaces\\TestData.h"
        ],
        "sourceFilesPaths": [
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructuresTest\\binarytree\\core\\BinaryTreeTestData.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructuresTest\\binarytree\\core\\BinaryTreeUnitTest.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructuresTest\\build\\CMakeFiles\\3.15.3\\CompilerIdCXX\\CMakeCXXCompilerId.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructuresTest\\core\\IteratorOfIteratorCollectionUnitTest.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructuresTest\\core\\PreCompiled.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructuresTest\\core\\TestData.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructuresTest\\main.cpp"
        ],
        "cmakeListsFilePath": "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructuresTest\\CMakeLists.txt",
        "dependentModules": [
          "Base",
          "TestBase",
          "UnitTesting",
          "DataStructures"
        ]
      },
      {
        "name": "ConcurrencyTest",
        "rootPath": "c:\\repositories\\Projects\\DevEnvironmentCLion\\ConcurrencyTest",
        "headerFilesPaths": [
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\ConcurrencyTest\\core\\PreCompiled.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\ConcurrencyTest\\interfaces\\ConcurrentQueueUnitTest.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\ConcurrencyTest\\interfaces\\TestData.h"
        ],
        "sourceFilesPaths": [
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\ConcurrencyTest\\build\\CMakeFiles\\3.15.3\\CompilerIdCXX\\CMakeCXXCompilerId.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\ConcurrencyTest\\core\\ConcurrentQueueUnitTest.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\ConcurrencyTest\\core\\PreCompiled.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\ConcurrencyTest\\core\\TestData.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\ConcurrencyTest\\main.cpp"
        ],
        "cmakeListsFilePath": "c:\\repositories\\Projects\\DevEnvironmentCLion\\ConcurrencyTest\\CMakeLists.txt",
        "dependentModules": [
          "Base",
          "TestBase",
          "UnitTesting",
          "Concurrency"
        ]
      },
      {
        "name": "MemoryManagementTest",
        "rootPath": "c:\\repositories\\Projects\\DevEnvironmentCLion\\MemoryManagementTest",
        "headerFilesPaths": [
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\MemoryManagementTest\\core\\PreCompiled.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\MemoryManagementTest\\interfaces\\MemoryAllocatorUnitTest.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\MemoryManagementTest\\interfaces\\ObjectPoolUnitTest.h"
        ],
        "sourceFilesPaths": [
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\MemoryManagementTest\\build\\CMakeFiles\\3.15.3\\CompilerIdCXX\\CMakeCXXCompilerId.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\MemoryManagementTest\\core\\MemoryAllocatorUnitTest.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\MemoryManagementTest\\core\\ObjectPoolUnitTest.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\MemoryManagementTest\\core\\PreCompiled.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\MemoryManagementTest\\main.cpp"
        ],
        "cmakeListsFilePath": "c:\\repositories\\Projects\\DevEnvironmentCLion\\MemoryManagementTest\\CMakeLists.txt",
        "dependentModules": [
          "Base",
          "TestBase",
          "UnitTesting",
          "MemoryManagement"
        ]
      },
      {
        "name": "ProblemsTest",
        "rootPath": "c:\\repositories\\Projects\\DevEnvironmentCLion\\ProblemsTest",
        "headerFilesPaths": [
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\ProblemsTest\\core\\PreCompiled.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\ProblemsTest\\interfaces\\CombinationSumUnitTest.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\ProblemsTest\\interfaces\\FlightRoutePlannerUnitTest.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\ProblemsTest\\interfaces\\MatchingTripletsUnitTest.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\ProblemsTest\\interfaces\\MatrixFinderUnitTest.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\ProblemsTest\\interfaces\\MergingIntervalsUnitTest.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\ProblemsTest\\interfaces\\MinimumWindowSubstringUnitTest.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\ProblemsTest\\interfaces\\NumberValidatorUnitTest.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\ProblemsTest\\interfaces\\PositionQueensUnitTest.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\ProblemsTest\\interfaces\\TestData.h",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\ProblemsTest\\interfaces\\WordFinderUnitTest.h"
        ],
        "sourceFilesPaths": [
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\ProblemsTest\\build\\CMakeFiles\\3.15.3\\CompilerIdCXX\\CMakeCXXCompilerId.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\ProblemsTest\\core\\CombinationSumUnitTest.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\ProblemsTest\\core\\FlightRoutePlannerUnitTest.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\ProblemsTest\\core\\MatchingTripletsUnitTest.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\ProblemsTest\\core\\MatrixFinderUnitTest.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\ProblemsTest\\core\\MergingIntervalsUnitTest.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\ProblemsTest\\core\\MinimumWindowSubstringUnitTest.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\ProblemsTest\\core\\NumberValidatorUnitTest.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\ProblemsTest\\core\\PositionQueensUnitTest.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\ProblemsTest\\core\\PreCompiled.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\ProblemsTest\\core\\TestData.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\ProblemsTest\\core\\WordFinderUnitTest.cpp",
          "c:\\repositories\\Projects\\DevEnvironmentCLion\\ProblemsTest\\main.cpp"
        ],
        "cmakeListsFilePath": "c:\\repositories\\Projects\\DevEnvironmentCLion\\ProblemsTest\\CMakeLists.txt",
        "dependentModules": [
          "Base",
          "TestBase",
          "UnitTesting",
          "Problems"
        ]
      }
    ]
  },
  "deploymentData": {
    "c:\\repositories\\Projects\\DevEnvironmentCLion\\Base\\CMakeLists.txt": "cmake_minimum_required(VERSION 3.13)\n\nproject(Base VERSION 1.0)\n\nset(CMAKE_CXX_STANDARD 14)\r\n\r\nmacro(print_all_variables)\r\n    message(STATUS \"print_all_variables------------------------------------------{\")\r\n    get_cmake_property(_variableNames VARIABLES)\r\n    foreach (_variableName ${_variableNames})\r\n        message(STATUS \"${_variableName}=${${_variableName}}\")\r\n    endforeach()\r\n    message(STATUS \"print_all_variables------------------------------------------}\")\r\nendmacro()\r\n\r\nprint_all_variables()\r\n\r\n#\r\n# Configure boost library...\r\n#\r\nif (NOT $ENV{BOOST_ROOT})\r\n    set(BOOST_PATH $ENV{BOOST_ROOT})\r\nelse()\r\n    set(BOOST_PATH \"c:\\\\Boost\\\\boost_1_70_0\")\r\nendif()\n\nset(BASE_INCLUDES_FILES\n    ./BaseException.h\n    ./NotImplementedException.h\n    ./core/BaseDependencies.h\n    ./core/BaseLogic.h\n    ./core/ClassType.h\n    ./core/ComparableComparator.h\n    ./core/DereferenceComparableComparator.h\n    ./core/DereferenceComparableComparator2.h\n    ./core/DereferenceEquatableComparator.h\n    ./core/DereferenceEquatableComparator2.h\n    ./core/EquatableComparator.h\n    ./core/IntervalMap.h\n    ./core/IntervalMapIterator.h\n    ./core/IterableObject.h\n    ./core/KmpStringSearch.h\n    ./core/List.h\n    ./core/ListIterator.h\n    ./core/Matrix.h\n    ./core/Position.h\n    ./core/PreCompiled.h\n    ./core/ReferenceCount.h\n    ./core/ReferenceCountHolder.h\n    ./core/SkipIterator.h\n    ./core/StringIterator.h\n    ./core/TwoDimensionalList.h\n    ./core/TwoDimensionalListIterator.h\n    ./interfaces/ClassTypes.h\n    ./interfaces/ComparatorFactory.h\n    ./interfaces/CompareToBuilder.h\n    ./interfaces/DateTime.h\n    ./interfaces/Dimensions.h\n    ./interfaces/Duration.h\n    ./interfaces/EqualBuilder.h\n    ./interfaces/IBinaryComparator.h\n    ./interfaces/IBuilder.h\n    ./interfaces/ICalculator.h\n    ./interfaces/IClassType.h\n    ./interfaces/ICollection.h\n    ./interfaces/IComparableComparator.h\n    ./interfaces/IEquatableComparator.h\n    ./interfaces/IFinder.h\n    ./interfaces/IHashCodeProvider.h\n    ./interfaces/IIntervalMap.h\n    ./interfaces/IIterable.h\n    ./interfaces/IIterator.h\n    ./interfaces/IList.h\n    ./interfaces/IMatrix.h\n    ./interfaces/IReverseIterable.h\n    ./interfaces/IReverseIterator.h\n    ./interfaces/ISizableCollection.h\n    ./interfaces/ISkipIterator.h\n    ./interfaces/ITwoDimensionalList.h\n    ./interfaces/IValidator.h\n    ./interfaces/IVisitor.h\n    ./interfaces/Interval.h\n    ./interfaces/Intervals.h\n    ./interfaces/IterableComparator.h\n    ./interfaces/IteratorComparator.h\n    ./interfaces/LogStreamWriter.h\n    ./interfaces/Pair.h\n    ./interfaces/SharedPtr.h\n    ./interfaces/StringComparable.h\n    ./interfaces/StringEquality.h\n    ./interfaces/StringSearch.h\n    ./interfaces/Strings.h\n    ./interfaces/Triple.h\n)\n\nset(BASE_SOURCES_FILES\n    ./core/ClassType.cpp\n    ./core/CompareToBuilder.cpp\n    ./core/DateTime.cpp\n    ./core/EqualBuilder.cpp\n    ./core/KmpStringSearch.cpp\n    ./core/LogStreamWriter.cpp\n    ./core/Position.cpp\n    ./core/PreCompiled.cpp\n    ./core/SkipIterator.cpp\n    ./core/StringComparable.cpp\n    ./core/StringEquality.cpp\n    ./core/StringSearch.cpp\n    ./core/Strings.cpp\n)\n\nset(BASE_SOURCES\n    ${BASE_INCLUDES_FILES}\n    ${BASE_SOURCES_FILES}\n)\n\nset(BASE_INCLUDES\n    .\n    ./core\n    ./interfaces\n)\n\ninclude_directories(Base\n    ${BASE_INCLUDES}\n)\n\nadd_library(Base STATIC\n    ${BASE_SOURCES}\n)\n\ninclude_directories(\r\n    ${BOOST_PATH}\r\n)\n",
    "c:\\repositories\\Projects\\DevEnvironmentCLion\\BaseTest\\CMakeLists.txt": "cmake_minimum_required(VERSION 3.13)\n\nproject(BaseTest VERSION 1.0)\n\nset(CMAKE_CXX_STANDARD 14)\r\n\r\nmacro(print_all_variables)\r\n    message(STATUS \"print_all_variables------------------------------------------{\")\r\n    get_cmake_property(_variableNames VARIABLES)\r\n    foreach (_variableName ${_variableNames})\r\n        message(STATUS \"${_variableName}=${${_variableName}}\")\r\n    endforeach()\r\n    message(STATUS \"print_all_variables------------------------------------------}\")\r\nendmacro()\r\n\r\nprint_all_variables()\r\n\r\n#\r\n# Configure boost library...\r\n#\r\nif (NOT $ENV{BOOST_ROOT})\r\n    set(BOOST_PATH $ENV{BOOST_ROOT})\r\nelse()\r\n    set(BOOST_PATH \"c:\\\\Boost\\\\boost_1_70_0\")\r\nendif()\n\nset(BASE_TEST_INCLUDES_FILES\n    ./core/PreCompiled.h\n    ./interfaces/IntervalMapUnitTest.h\n    ./interfaces/KmpStringSearchUnitTest.h\n    ./interfaces/ListUnitTest.h\n    ./interfaces/MatrixUnitTest.h\n    ./interfaces/StringsUnitTest.h\n    ./interfaces/TestData.h\n    ./interfaces/TwoDimensionalListUnitTest.h\n)\n\nset(BASE_TEST_SOURCES_FILES\n    ./core/IntervalMapUnitTest.cpp\n    ./core/KmpStringSearchUnitTest.cpp\n    ./core/ListUnitTest.cpp\n    ./core/MatrixUnitTest.cpp\n    ./core/PreCompiled.cpp\n    ./core/StringsUnitTest.cpp\n    ./core/TestData.cpp\n    ./core/TwoDimensionalListUnitTest.cpp\n    ./main.cpp\n)\n\nset(BASE_TEST_SOURCES\n    ${BASE_TEST_INCLUDES_FILES}\n    ${BASE_TEST_SOURCES_FILES}\n)\n\nset(BASE_TEST_INCLUDES\n    ./core\n    ./interfaces\n)\n\nset(BASE_INCLUDES_FILES\n    ../Base/BaseException.h\n    ../Base/NotImplementedException.h\n    ../Base/core/BaseDependencies.h\n    ../Base/core/BaseLogic.h\n    ../Base/core/ClassType.h\n    ../Base/core/ComparableComparator.h\n    ../Base/core/DereferenceComparableComparator.h\n    ../Base/core/DereferenceComparableComparator2.h\n    ../Base/core/DereferenceEquatableComparator.h\n    ../Base/core/DereferenceEquatableComparator2.h\n    ../Base/core/EquatableComparator.h\n    ../Base/core/IntervalMap.h\n    ../Base/core/IntervalMapIterator.h\n    ../Base/core/IterableObject.h\n    ../Base/core/KmpStringSearch.h\n    ../Base/core/List.h\n    ../Base/core/ListIterator.h\n    ../Base/core/Matrix.h\n    ../Base/core/Position.h\n    ../Base/core/PreCompiled.h\n    ../Base/core/ReferenceCount.h\n    ../Base/core/ReferenceCountHolder.h\n    ../Base/core/SkipIterator.h\n    ../Base/core/StringIterator.h\n    ../Base/core/TwoDimensionalList.h\n    ../Base/core/TwoDimensionalListIterator.h\n    ../Base/interfaces/ClassTypes.h\n    ../Base/interfaces/ComparatorFactory.h\n    ../Base/interfaces/CompareToBuilder.h\n    ../Base/interfaces/DateTime.h\n    ../Base/interfaces/Dimensions.h\n    ../Base/interfaces/Duration.h\n    ../Base/interfaces/EqualBuilder.h\n    ../Base/interfaces/IBinaryComparator.h\n    ../Base/interfaces/IBuilder.h\n    ../Base/interfaces/ICalculator.h\n    ../Base/interfaces/IClassType.h\n    ../Base/interfaces/ICollection.h\n    ../Base/interfaces/IComparableComparator.h\n    ../Base/interfaces/IEquatableComparator.h\n    ../Base/interfaces/IFinder.h\n    ../Base/interfaces/IHashCodeProvider.h\n    ../Base/interfaces/IIntervalMap.h\n    ../Base/interfaces/IIterable.h\n    ../Base/interfaces/IIterator.h\n    ../Base/interfaces/IList.h\n    ../Base/interfaces/IMatrix.h\n    ../Base/interfaces/IReverseIterable.h\n    ../Base/interfaces/IReverseIterator.h\n    ../Base/interfaces/ISizableCollection.h\n    ../Base/interfaces/ISkipIterator.h\n    ../Base/interfaces/ITwoDimensionalList.h\n    ../Base/interfaces/IValidator.h\n    ../Base/interfaces/IVisitor.h\n    ../Base/interfaces/Interval.h\n    ../Base/interfaces/Intervals.h\n    ../Base/interfaces/IterableComparator.h\n    ../Base/interfaces/IteratorComparator.h\n    ../Base/interfaces/LogStreamWriter.h\n    ../Base/interfaces/Pair.h\n    ../Base/interfaces/SharedPtr.h\n    ../Base/interfaces/StringComparable.h\n    ../Base/interfaces/StringEquality.h\n    ../Base/interfaces/StringSearch.h\n    ../Base/interfaces/Strings.h\n    ../Base/interfaces/Triple.h\n)\n\nset(BASE_SOURCES_FILES\n    ../Base/core/ClassType.cpp\n    ../Base/core/CompareToBuilder.cpp\n    ../Base/core/DateTime.cpp\n    ../Base/core/EqualBuilder.cpp\n    ../Base/core/KmpStringSearch.cpp\n    ../Base/core/LogStreamWriter.cpp\n    ../Base/core/Position.cpp\n    ../Base/core/PreCompiled.cpp\n    ../Base/core/SkipIterator.cpp\n    ../Base/core/StringComparable.cpp\n    ../Base/core/StringEquality.cpp\n    ../Base/core/StringSearch.cpp\n    ../Base/core/Strings.cpp\n)\n\nset(BASE_SOURCES\n    ${BASE_INCLUDES_FILES}\n    ${BASE_SOURCES_FILES}\n)\n\nset(BASE_INCLUDES\n    ../Base\n    ../Base/core\n    ../Base/interfaces\n)\n\nadd_library(Base STATIC\n    ${BASE_SOURCES}\n)\n\nset(TEST_BASE_INCLUDES_FILES\n    ../TestBase/TestBaseException.h\n    ../TestBase/core/PreCompiled.h\n    ../TestBase/interfaces/Assertion.h\n)\n\nset(TEST_BASE_SOURCES_FILES\n    ../TestBase/core/Assertion.cpp\n    ../TestBase/core/PreCompiled.cpp\n)\n\nset(TEST_BASE_SOURCES\n    ${TEST_BASE_INCLUDES_FILES}\n    ${TEST_BASE_SOURCES_FILES}\n)\n\nset(TEST_BASE_INCLUDES\n    ../TestBase\n    ../TestBase/core\n    ../TestBase/interfaces\n)\n\nadd_library(TestBase STATIC\n    ${BASE_SOURCES}\n    ${TEST_BASE_SOURCES}\n)\n\nset(UNIT_TESTING_INCLUDES_FILES\n    ../UnitTesting/UnitTestingException.h\n    ../UnitTesting/core/PreCompiled.h\n    ../UnitTesting/core/TestRunningResult.h\n    ../UnitTesting/core/TestRunningResults.h\n    ../UnitTesting/core/UnitTestFunction.h\n    ../UnitTesting/core/UnitTestHandler.h\n    ../UnitTesting/core/UnitTestManager.h\n    ../UnitTesting/interfaces/ITestFunction.h\n    ../UnitTesting/interfaces/ITestRegistration.h\n    ../UnitTesting/interfaces/ITestRunningResult.h\n    ../UnitTesting/interfaces/ITestRunningResults.h\n    ../UnitTesting/interfaces/IUnitTest.h\n    ../UnitTesting/interfaces/IUnitTestHandler.h\n    ../UnitTesting/interfaces/IUnitTestManager.h\n    ../UnitTesting/interfaces/UnitTestBase.h\n    ../UnitTesting/interfaces/UnitTestException.h\n)\n\nset(UNIT_TESTING_SOURCES_FILES\n    ../UnitTesting/core/PreCompiled.cpp\n    ../UnitTesting/core/TestRunningResult.cpp\n    ../UnitTesting/core/TestRunningResults.cpp\n    ../UnitTesting/core/UnitTestBase.cpp\n    ../UnitTesting/core/UnitTestHandler.cpp\n    ../UnitTesting/core/UnitTestManager.cpp\n)\n\nset(UNIT_TESTING_SOURCES\n    ${UNIT_TESTING_INCLUDES_FILES}\n    ${UNIT_TESTING_SOURCES_FILES}\n)\n\nset(UNIT_TESTING_INCLUDES\n    ../UnitTesting\n    ../UnitTesting/core\n    ../UnitTesting/interfaces\n)\n\nadd_library(UnitTesting STATIC\n    ${BASE_SOURCES}\n    ${TEST_BASE_SOURCES}\n    ${UNIT_TESTING_SOURCES}\n)\n\ninclude_directories(BaseTest\n    ${BASE_INCLUDES}\n    ${BASE_TEST_INCLUDES}\n    ${TEST_BASE_INCLUDES}\n    ${UNIT_TESTING_INCLUDES}\n)\n\nadd_executable(BaseTest\n    ${BASE_SOURCES}\n    ${BASE_TEST_SOURCES}\n    ${TEST_BASE_SOURCES}\n    ${UNIT_TESTING_SOURCES}\n)\n\ntarget_link_libraries(BaseTest\n    PRIVATE Base TestBase UnitTesting\n)\n\ninclude_directories(\r\n    ${BOOST_PATH}\r\n)\n",
    "c:\\repositories\\Projects\\DevEnvironmentCLion\\MemoryManagementTest\\CMakeLists.txt": "cmake_minimum_required(VERSION 3.13)\n\nproject(MemoryManagementTest VERSION 1.0)\n\nset(CMAKE_CXX_STANDARD 14)\r\n\r\nmacro(print_all_variables)\r\n    message(STATUS \"print_all_variables------------------------------------------{\")\r\n    get_cmake_property(_variableNames VARIABLES)\r\n    foreach (_variableName ${_variableNames})\r\n        message(STATUS \"${_variableName}=${${_variableName}}\")\r\n    endforeach()\r\n    message(STATUS \"print_all_variables------------------------------------------}\")\r\nendmacro()\r\n\r\nprint_all_variables()\r\n\r\n#\r\n# Configure boost library...\r\n#\r\nif (NOT $ENV{BOOST_ROOT})\r\n    set(BOOST_PATH $ENV{BOOST_ROOT})\r\nelse()\r\n    set(BOOST_PATH \"c:\\\\Boost\\\\boost_1_70_0\")\r\nendif()\n\nset(MEMORY_MANAGEMENT_TEST_INCLUDES_FILES\n    ./core/PreCompiled.h\n    ./interfaces/MemoryAllocatorUnitTest.h\n    ./interfaces/ObjectPoolUnitTest.h\n)\n\nset(MEMORY_MANAGEMENT_TEST_SOURCES_FILES\n    ./core/MemoryAllocatorUnitTest.cpp\n    ./core/ObjectPoolUnitTest.cpp\n    ./core/PreCompiled.cpp\n    ./main.cpp\n)\n\nset(MEMORY_MANAGEMENT_TEST_SOURCES\n    ${MEMORY_MANAGEMENT_TEST_INCLUDES_FILES}\n    ${MEMORY_MANAGEMENT_TEST_SOURCES_FILES}\n)\n\nset(MEMORY_MANAGEMENT_TEST_INCLUDES\n    ./core\n    ./interfaces\n)\n\nset(BASE_INCLUDES_FILES\n    ../Base/BaseException.h\n    ../Base/NotImplementedException.h\n    ../Base/core/BaseDependencies.h\n    ../Base/core/BaseLogic.h\n    ../Base/core/ClassType.h\n    ../Base/core/ComparableComparator.h\n    ../Base/core/DereferenceComparableComparator.h\n    ../Base/core/DereferenceComparableComparator2.h\n    ../Base/core/DereferenceEquatableComparator.h\n    ../Base/core/DereferenceEquatableComparator2.h\n    ../Base/core/EquatableComparator.h\n    ../Base/core/IntervalMap.h\n    ../Base/core/IntervalMapIterator.h\n    ../Base/core/IterableObject.h\n    ../Base/core/KmpStringSearch.h\n    ../Base/core/List.h\n    ../Base/core/ListIterator.h\n    ../Base/core/Matrix.h\n    ../Base/core/Position.h\n    ../Base/core/PreCompiled.h\n    ../Base/core/ReferenceCount.h\n    ../Base/core/ReferenceCountHolder.h\n    ../Base/core/SkipIterator.h\n    ../Base/core/StringIterator.h\n    ../Base/core/TwoDimensionalList.h\n    ../Base/core/TwoDimensionalListIterator.h\n    ../Base/interfaces/ClassTypes.h\n    ../Base/interfaces/ComparatorFactory.h\n    ../Base/interfaces/CompareToBuilder.h\n    ../Base/interfaces/DateTime.h\n    ../Base/interfaces/Dimensions.h\n    ../Base/interfaces/Duration.h\n    ../Base/interfaces/EqualBuilder.h\n    ../Base/interfaces/IBinaryComparator.h\n    ../Base/interfaces/IBuilder.h\n    ../Base/interfaces/ICalculator.h\n    ../Base/interfaces/IClassType.h\n    ../Base/interfaces/ICollection.h\n    ../Base/interfaces/IComparableComparator.h\n    ../Base/interfaces/IEquatableComparator.h\n    ../Base/interfaces/IFinder.h\n    ../Base/interfaces/IHashCodeProvider.h\n    ../Base/interfaces/IIntervalMap.h\n    ../Base/interfaces/IIterable.h\n    ../Base/interfaces/IIterator.h\n    ../Base/interfaces/IList.h\n    ../Base/interfaces/IMatrix.h\n    ../Base/interfaces/IReverseIterable.h\n    ../Base/interfaces/IReverseIterator.h\n    ../Base/interfaces/ISizableCollection.h\n    ../Base/interfaces/ISkipIterator.h\n    ../Base/interfaces/ITwoDimensionalList.h\n    ../Base/interfaces/IValidator.h\n    ../Base/interfaces/IVisitor.h\n    ../Base/interfaces/Interval.h\n    ../Base/interfaces/Intervals.h\n    ../Base/interfaces/IterableComparator.h\n    ../Base/interfaces/IteratorComparator.h\n    ../Base/interfaces/LogStreamWriter.h\n    ../Base/interfaces/Pair.h\n    ../Base/interfaces/SharedPtr.h\n    ../Base/interfaces/StringComparable.h\n    ../Base/interfaces/StringEquality.h\n    ../Base/interfaces/StringSearch.h\n    ../Base/interfaces/Strings.h\n    ../Base/interfaces/Triple.h\n)\n\nset(BASE_SOURCES_FILES\n    ../Base/core/ClassType.cpp\n    ../Base/core/CompareToBuilder.cpp\n    ../Base/core/DateTime.cpp\n    ../Base/core/EqualBuilder.cpp\n    ../Base/core/KmpStringSearch.cpp\n    ../Base/core/LogStreamWriter.cpp\n    ../Base/core/Position.cpp\n    ../Base/core/PreCompiled.cpp\n    ../Base/core/SkipIterator.cpp\n    ../Base/core/StringComparable.cpp\n    ../Base/core/StringEquality.cpp\n    ../Base/core/StringSearch.cpp\n    ../Base/core/Strings.cpp\n)\n\nset(BASE_SOURCES\n    ${BASE_INCLUDES_FILES}\n    ${BASE_SOURCES_FILES}\n)\n\nset(BASE_INCLUDES\n    ../Base\n    ../Base/core\n    ../Base/interfaces\n)\n\nadd_library(Base STATIC\n    ${BASE_SOURCES}\n)\n\nset(TEST_BASE_INCLUDES_FILES\n    ../TestBase/TestBaseException.h\n    ../TestBase/core/PreCompiled.h\n    ../TestBase/interfaces/Assertion.h\n)\n\nset(TEST_BASE_SOURCES_FILES\n    ../TestBase/core/Assertion.cpp\n    ../TestBase/core/PreCompiled.cpp\n)\n\nset(TEST_BASE_SOURCES\n    ${TEST_BASE_INCLUDES_FILES}\n    ${TEST_BASE_SOURCES_FILES}\n)\n\nset(TEST_BASE_INCLUDES\n    ../TestBase\n    ../TestBase/core\n    ../TestBase/interfaces\n)\n\nadd_library(TestBase STATIC\n    ${BASE_SOURCES}\n    ${TEST_BASE_SOURCES}\n)\n\nset(UNIT_TESTING_INCLUDES_FILES\n    ../UnitTesting/UnitTestingException.h\n    ../UnitTesting/core/PreCompiled.h\n    ../UnitTesting/core/TestRunningResult.h\n    ../UnitTesting/core/TestRunningResults.h\n    ../UnitTesting/core/UnitTestFunction.h\n    ../UnitTesting/core/UnitTestHandler.h\n    ../UnitTesting/core/UnitTestManager.h\n    ../UnitTesting/interfaces/ITestFunction.h\n    ../UnitTesting/interfaces/ITestRegistration.h\n    ../UnitTesting/interfaces/ITestRunningResult.h\n    ../UnitTesting/interfaces/ITestRunningResults.h\n    ../UnitTesting/interfaces/IUnitTest.h\n    ../UnitTesting/interfaces/IUnitTestHandler.h\n    ../UnitTesting/interfaces/IUnitTestManager.h\n    ../UnitTesting/interfaces/UnitTestBase.h\n    ../UnitTesting/interfaces/UnitTestException.h\n)\n\nset(UNIT_TESTING_SOURCES_FILES\n    ../UnitTesting/core/PreCompiled.cpp\n    ../UnitTesting/core/TestRunningResult.cpp\n    ../UnitTesting/core/TestRunningResults.cpp\n    ../UnitTesting/core/UnitTestBase.cpp\n    ../UnitTesting/core/UnitTestHandler.cpp\n    ../UnitTesting/core/UnitTestManager.cpp\n)\n\nset(UNIT_TESTING_SOURCES\n    ${UNIT_TESTING_INCLUDES_FILES}\n    ${UNIT_TESTING_SOURCES_FILES}\n)\n\nset(UNIT_TESTING_INCLUDES\n    ../UnitTesting\n    ../UnitTesting/core\n    ../UnitTesting/interfaces\n)\n\nadd_library(UnitTesting STATIC\n    ${BASE_SOURCES}\n    ${TEST_BASE_SOURCES}\n    ${UNIT_TESTING_SOURCES}\n)\n\nset(MEMORY_MANAGEMENT_INCLUDES_FILES\n    ../MemoryManagement/MemoryManagementException.h\n    ../MemoryManagement/core/FixedMemoryPool.h\n    ../MemoryManagement/core/MemoryAllocator.h\n    ../MemoryManagement/core/PreCompiled.h\n    ../MemoryManagement/interfaces/IMemoryAllocator.h\n    ../MemoryManagement/interfaces/IMemoryPool.h\n    ../MemoryManagement/interfaces/IObjectPool.h\n    ../MemoryManagement/interfaces/MemoryPool.h\n    ../MemoryManagement/interfaces/ObjectPool.h\n    ../MemoryManagement/interfaces/ObjectPoolElement.h\n)\n\nset(MEMORY_MANAGEMENT_SOURCES_FILES\n    ../MemoryManagement/core/FixedMemoryPool.cpp\n    ../MemoryManagement/core/MemoryAllocator.cpp\n    ../MemoryManagement/core/MemoryPool.cpp\n    ../MemoryManagement/core/PreCompiled.cpp\n)\n\nset(MEMORY_MANAGEMENT_SOURCES\n    ${MEMORY_MANAGEMENT_INCLUDES_FILES}\n    ${MEMORY_MANAGEMENT_SOURCES_FILES}\n)\n\nset(MEMORY_MANAGEMENT_INCLUDES\n    ../MemoryManagement\n    ../MemoryManagement/core\n    ../MemoryManagement/interfaces\n)\n\nadd_library(MemoryManagement STATIC\n    ${BASE_SOURCES}\n    ${MEMORY_MANAGEMENT_SOURCES}\n)\n\ninclude_directories(MemoryManagementTest\n    ${BASE_INCLUDES}\n    ${MEMORY_MANAGEMENT_INCLUDES}\n    ${MEMORY_MANAGEMENT_TEST_INCLUDES}\n    ${TEST_BASE_INCLUDES}\n    ${UNIT_TESTING_INCLUDES}\n)\n\nadd_executable(MemoryManagementTest\n    ${BASE_SOURCES}\n    ${MEMORY_MANAGEMENT_SOURCES}\n    ${MEMORY_MANAGEMENT_TEST_SOURCES}\n    ${TEST_BASE_SOURCES}\n    ${UNIT_TESTING_SOURCES}\n)\n\ntarget_link_libraries(MemoryManagementTest\n    PRIVATE Base TestBase UnitTesting MemoryManagement\n)\n\ninclude_directories(\r\n    ${BOOST_PATH}\r\n)\n",
    "c:\\repositories\\Projects\\DevEnvironmentCLion\\Concurrency\\CMakeLists.txt": "cmake_minimum_required(VERSION 3.13)\n\nproject(Concurrency VERSION 1.0)\n\nset(CMAKE_CXX_STANDARD 14)\r\n\r\nmacro(print_all_variables)\r\n    message(STATUS \"print_all_variables------------------------------------------{\")\r\n    get_cmake_property(_variableNames VARIABLES)\r\n    foreach (_variableName ${_variableNames})\r\n        message(STATUS \"${_variableName}=${${_variableName}}\")\r\n    endforeach()\r\n    message(STATUS \"print_all_variables------------------------------------------}\")\r\nendmacro()\r\n\r\nprint_all_variables()\r\n\r\n#\r\n# Configure boost library...\r\n#\r\nif (NOT $ENV{BOOST_ROOT})\r\n    set(BOOST_PATH $ENV{BOOST_ROOT})\r\nelse()\r\n    set(BOOST_PATH \"c:\\\\Boost\\\\boost_1_70_0\")\r\nendif()\n\nset(CONCURRENCY_INCLUDES_FILES\n    ./ConcurrencyException.h\n    ./core/PreCompiled.h\n    ./interfaces/ConcurrentQueue.h\n)\n\nset(CONCURRENCY_SOURCES_FILES\n    ./core/PreCompiled.cpp\n)\n\nset(CONCURRENCY_SOURCES\n    ${CONCURRENCY_INCLUDES_FILES}\n    ${CONCURRENCY_SOURCES_FILES}\n)\n\nset(CONCURRENCY_INCLUDES\n    .\n    ./core\n    ./interfaces\n)\n\nset(BASE_INCLUDES_FILES\n    ../Base/BaseException.h\n    ../Base/NotImplementedException.h\n    ../Base/core/BaseDependencies.h\n    ../Base/core/BaseLogic.h\n    ../Base/core/ClassType.h\n    ../Base/core/ComparableComparator.h\n    ../Base/core/DereferenceComparableComparator.h\n    ../Base/core/DereferenceComparableComparator2.h\n    ../Base/core/DereferenceEquatableComparator.h\n    ../Base/core/DereferenceEquatableComparator2.h\n    ../Base/core/EquatableComparator.h\n    ../Base/core/IntervalMap.h\n    ../Base/core/IntervalMapIterator.h\n    ../Base/core/IterableObject.h\n    ../Base/core/KmpStringSearch.h\n    ../Base/core/List.h\n    ../Base/core/ListIterator.h\n    ../Base/core/Matrix.h\n    ../Base/core/Position.h\n    ../Base/core/PreCompiled.h\n    ../Base/core/ReferenceCount.h\n    ../Base/core/ReferenceCountHolder.h\n    ../Base/core/SkipIterator.h\n    ../Base/core/StringIterator.h\n    ../Base/core/TwoDimensionalList.h\n    ../Base/core/TwoDimensionalListIterator.h\n    ../Base/interfaces/ClassTypes.h\n    ../Base/interfaces/ComparatorFactory.h\n    ../Base/interfaces/CompareToBuilder.h\n    ../Base/interfaces/DateTime.h\n    ../Base/interfaces/Dimensions.h\n    ../Base/interfaces/Duration.h\n    ../Base/interfaces/EqualBuilder.h\n    ../Base/interfaces/IBinaryComparator.h\n    ../Base/interfaces/IBuilder.h\n    ../Base/interfaces/ICalculator.h\n    ../Base/interfaces/IClassType.h\n    ../Base/interfaces/ICollection.h\n    ../Base/interfaces/IComparableComparator.h\n    ../Base/interfaces/IEquatableComparator.h\n    ../Base/interfaces/IFinder.h\n    ../Base/interfaces/IHashCodeProvider.h\n    ../Base/interfaces/IIntervalMap.h\n    ../Base/interfaces/IIterable.h\n    ../Base/interfaces/IIterator.h\n    ../Base/interfaces/IList.h\n    ../Base/interfaces/IMatrix.h\n    ../Base/interfaces/IReverseIterable.h\n    ../Base/interfaces/IReverseIterator.h\n    ../Base/interfaces/ISizableCollection.h\n    ../Base/interfaces/ISkipIterator.h\n    ../Base/interfaces/ITwoDimensionalList.h\n    ../Base/interfaces/IValidator.h\n    ../Base/interfaces/IVisitor.h\n    ../Base/interfaces/Interval.h\n    ../Base/interfaces/Intervals.h\n    ../Base/interfaces/IterableComparator.h\n    ../Base/interfaces/IteratorComparator.h\n    ../Base/interfaces/LogStreamWriter.h\n    ../Base/interfaces/Pair.h\n    ../Base/interfaces/SharedPtr.h\n    ../Base/interfaces/StringComparable.h\n    ../Base/interfaces/StringEquality.h\n    ../Base/interfaces/StringSearch.h\n    ../Base/interfaces/Strings.h\n    ../Base/interfaces/Triple.h\n)\n\nset(BASE_SOURCES_FILES\n    ../Base/core/ClassType.cpp\n    ../Base/core/CompareToBuilder.cpp\n    ../Base/core/DateTime.cpp\n    ../Base/core/EqualBuilder.cpp\n    ../Base/core/KmpStringSearch.cpp\n    ../Base/core/LogStreamWriter.cpp\n    ../Base/core/Position.cpp\n    ../Base/core/PreCompiled.cpp\n    ../Base/core/SkipIterator.cpp\n    ../Base/core/StringComparable.cpp\n    ../Base/core/StringEquality.cpp\n    ../Base/core/StringSearch.cpp\n    ../Base/core/Strings.cpp\n)\n\nset(BASE_SOURCES\n    ${BASE_INCLUDES_FILES}\n    ${BASE_SOURCES_FILES}\n)\n\nset(BASE_INCLUDES\n    ../Base\n    ../Base/core\n    ../Base/interfaces\n)\n\nadd_library(Base STATIC\n    ${BASE_SOURCES}\n)\n\ninclude_directories(Concurrency\n    ${BASE_INCLUDES}\n    ${CONCURRENCY_INCLUDES}\n)\n\nadd_library(Concurrency STATIC\n    ${BASE_SOURCES}\n    ${CONCURRENCY_SOURCES}\n)\n\ninclude_directories(\r\n    ${BOOST_PATH}\r\n)\n",
    "c:\\repositories\\Projects\\DevEnvironmentCLion\\UnitTesting\\CMakeLists.txt": "cmake_minimum_required(VERSION 3.13)\n\nproject(UnitTesting VERSION 1.0)\n\nset(CMAKE_CXX_STANDARD 14)\r\n\r\nmacro(print_all_variables)\r\n    message(STATUS \"print_all_variables------------------------------------------{\")\r\n    get_cmake_property(_variableNames VARIABLES)\r\n    foreach (_variableName ${_variableNames})\r\n        message(STATUS \"${_variableName}=${${_variableName}}\")\r\n    endforeach()\r\n    message(STATUS \"print_all_variables------------------------------------------}\")\r\nendmacro()\r\n\r\nprint_all_variables()\r\n\r\n#\r\n# Configure boost library...\r\n#\r\nif (NOT $ENV{BOOST_ROOT})\r\n    set(BOOST_PATH $ENV{BOOST_ROOT})\r\nelse()\r\n    set(BOOST_PATH \"c:\\\\Boost\\\\boost_1_70_0\")\r\nendif()\n\nset(UNIT_TESTING_INCLUDES_FILES\n    ./UnitTestingException.h\n    ./core/PreCompiled.h\n    ./core/TestRunningResult.h\n    ./core/TestRunningResults.h\n    ./core/UnitTestFunction.h\n    ./core/UnitTestHandler.h\n    ./core/UnitTestManager.h\n    ./interfaces/ITestFunction.h\n    ./interfaces/ITestRegistration.h\n    ./interfaces/ITestRunningResult.h\n    ./interfaces/ITestRunningResults.h\n    ./interfaces/IUnitTest.h\n    ./interfaces/IUnitTestHandler.h\n    ./interfaces/IUnitTestManager.h\n    ./interfaces/UnitTestBase.h\n    ./interfaces/UnitTestException.h\n)\n\nset(UNIT_TESTING_SOURCES_FILES\n    ./core/PreCompiled.cpp\n    ./core/TestRunningResult.cpp\n    ./core/TestRunningResults.cpp\n    ./core/UnitTestBase.cpp\n    ./core/UnitTestHandler.cpp\n    ./core/UnitTestManager.cpp\n)\n\nset(UNIT_TESTING_SOURCES\n    ${UNIT_TESTING_INCLUDES_FILES}\n    ${UNIT_TESTING_SOURCES_FILES}\n)\n\nset(UNIT_TESTING_INCLUDES\n    .\n    ./core\n    ./interfaces\n)\n\nset(BASE_INCLUDES_FILES\n    ../Base/BaseException.h\n    ../Base/NotImplementedException.h\n    ../Base/core/BaseDependencies.h\n    ../Base/core/BaseLogic.h\n    ../Base/core/ClassType.h\n    ../Base/core/ComparableComparator.h\n    ../Base/core/DereferenceComparableComparator.h\n    ../Base/core/DereferenceComparableComparator2.h\n    ../Base/core/DereferenceEquatableComparator.h\n    ../Base/core/DereferenceEquatableComparator2.h\n    ../Base/core/EquatableComparator.h\n    ../Base/core/IntervalMap.h\n    ../Base/core/IntervalMapIterator.h\n    ../Base/core/IterableObject.h\n    ../Base/core/KmpStringSearch.h\n    ../Base/core/List.h\n    ../Base/core/ListIterator.h\n    ../Base/core/Matrix.h\n    ../Base/core/Position.h\n    ../Base/core/PreCompiled.h\n    ../Base/core/ReferenceCount.h\n    ../Base/core/ReferenceCountHolder.h\n    ../Base/core/SkipIterator.h\n    ../Base/core/StringIterator.h\n    ../Base/core/TwoDimensionalList.h\n    ../Base/core/TwoDimensionalListIterator.h\n    ../Base/interfaces/ClassTypes.h\n    ../Base/interfaces/ComparatorFactory.h\n    ../Base/interfaces/CompareToBuilder.h\n    ../Base/interfaces/DateTime.h\n    ../Base/interfaces/Dimensions.h\n    ../Base/interfaces/Duration.h\n    ../Base/interfaces/EqualBuilder.h\n    ../Base/interfaces/IBinaryComparator.h\n    ../Base/interfaces/IBuilder.h\n    ../Base/interfaces/ICalculator.h\n    ../Base/interfaces/IClassType.h\n    ../Base/interfaces/ICollection.h\n    ../Base/interfaces/IComparableComparator.h\n    ../Base/interfaces/IEquatableComparator.h\n    ../Base/interfaces/IFinder.h\n    ../Base/interfaces/IHashCodeProvider.h\n    ../Base/interfaces/IIntervalMap.h\n    ../Base/interfaces/IIterable.h\n    ../Base/interfaces/IIterator.h\n    ../Base/interfaces/IList.h\n    ../Base/interfaces/IMatrix.h\n    ../Base/interfaces/IReverseIterable.h\n    ../Base/interfaces/IReverseIterator.h\n    ../Base/interfaces/ISizableCollection.h\n    ../Base/interfaces/ISkipIterator.h\n    ../Base/interfaces/ITwoDimensionalList.h\n    ../Base/interfaces/IValidator.h\n    ../Base/interfaces/IVisitor.h\n    ../Base/interfaces/Interval.h\n    ../Base/interfaces/Intervals.h\n    ../Base/interfaces/IterableComparator.h\n    ../Base/interfaces/IteratorComparator.h\n    ../Base/interfaces/LogStreamWriter.h\n    ../Base/interfaces/Pair.h\n    ../Base/interfaces/SharedPtr.h\n    ../Base/interfaces/StringComparable.h\n    ../Base/interfaces/StringEquality.h\n    ../Base/interfaces/StringSearch.h\n    ../Base/interfaces/Strings.h\n    ../Base/interfaces/Triple.h\n)\n\nset(BASE_SOURCES_FILES\n    ../Base/core/ClassType.cpp\n    ../Base/core/CompareToBuilder.cpp\n    ../Base/core/DateTime.cpp\n    ../Base/core/EqualBuilder.cpp\n    ../Base/core/KmpStringSearch.cpp\n    ../Base/core/LogStreamWriter.cpp\n    ../Base/core/Position.cpp\n    ../Base/core/PreCompiled.cpp\n    ../Base/core/SkipIterator.cpp\n    ../Base/core/StringComparable.cpp\n    ../Base/core/StringEquality.cpp\n    ../Base/core/StringSearch.cpp\n    ../Base/core/Strings.cpp\n)\n\nset(BASE_SOURCES\n    ${BASE_INCLUDES_FILES}\n    ${BASE_SOURCES_FILES}\n)\n\nset(BASE_INCLUDES\n    ../Base\n    ../Base/core\n    ../Base/interfaces\n)\n\nadd_library(Base STATIC\n    ${BASE_SOURCES}\n)\n\nset(TEST_BASE_INCLUDES_FILES\n    ../TestBase/TestBaseException.h\n    ../TestBase/core/PreCompiled.h\n    ../TestBase/interfaces/Assertion.h\n)\n\nset(TEST_BASE_SOURCES_FILES\n    ../TestBase/core/Assertion.cpp\n    ../TestBase/core/PreCompiled.cpp\n)\n\nset(TEST_BASE_SOURCES\n    ${TEST_BASE_INCLUDES_FILES}\n    ${TEST_BASE_SOURCES_FILES}\n)\n\nset(TEST_BASE_INCLUDES\n    ../TestBase\n    ../TestBase/core\n    ../TestBase/interfaces\n)\n\nadd_library(TestBase STATIC\n    ${BASE_SOURCES}\n    ${TEST_BASE_SOURCES}\n)\n\ninclude_directories(UnitTesting\n    ${BASE_INCLUDES}\n    ${TEST_BASE_INCLUDES}\n    ${UNIT_TESTING_INCLUDES}\n)\n\nadd_library(UnitTesting STATIC\n    ${BASE_SOURCES}\n    ${TEST_BASE_SOURCES}\n    ${UNIT_TESTING_SOURCES}\n)\n\ninclude_directories(\r\n    ${BOOST_PATH}\r\n)\n",
    "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructuresTest\\CMakeLists.txt": "cmake_minimum_required(VERSION 3.13)\n\nproject(DataStructuresTest VERSION 1.0)\n\nset(CMAKE_CXX_STANDARD 14)\r\n\r\nmacro(print_all_variables)\r\n    message(STATUS \"print_all_variables------------------------------------------{\")\r\n    get_cmake_property(_variableNames VARIABLES)\r\n    foreach (_variableName ${_variableNames})\r\n        message(STATUS \"${_variableName}=${${_variableName}}\")\r\n    endforeach()\r\n    message(STATUS \"print_all_variables------------------------------------------}\")\r\nendmacro()\r\n\r\nprint_all_variables()\r\n\r\n#\r\n# Configure boost library...\r\n#\r\nif (NOT $ENV{BOOST_ROOT})\r\n    set(BOOST_PATH $ENV{BOOST_ROOT})\r\nelse()\r\n    set(BOOST_PATH \"c:\\\\Boost\\\\boost_1_70_0\")\r\nendif()\n\nset(DATA_STRUCTURES_TEST_INCLUDES_FILES\n    ./binarytree/interfaces/BinaryTreeData.h\n    ./binarytree/interfaces/BinaryTreeTestData.h\n    ./binarytree/interfaces/BinaryTreeUnitTest.h\n    ./core/PreCompiled.h\n    ./interfaces/IteratorOfIteratorCollectionUnitTest.h\n    ./interfaces/TestData.h\n)\n\nset(DATA_STRUCTURES_TEST_SOURCES_FILES\n    ./binarytree/core/BinaryTreeTestData.cpp\n    ./binarytree/core/BinaryTreeUnitTest.cpp\n    ./core/IteratorOfIteratorCollectionUnitTest.cpp\n    ./core/PreCompiled.cpp\n    ./core/TestData.cpp\n    ./main.cpp\n)\n\nset(DATA_STRUCTURES_TEST_SOURCES\n    ${DATA_STRUCTURES_TEST_INCLUDES_FILES}\n    ${DATA_STRUCTURES_TEST_SOURCES_FILES}\n)\n\nset(DATA_STRUCTURES_TEST_INCLUDES\n    ./binarytree/interfaces\n    ./core\n    ./interfaces\n)\n\nset(BASE_INCLUDES_FILES\n    ../Base/BaseException.h\n    ../Base/NotImplementedException.h\n    ../Base/core/BaseDependencies.h\n    ../Base/core/BaseLogic.h\n    ../Base/core/ClassType.h\n    ../Base/core/ComparableComparator.h\n    ../Base/core/DereferenceComparableComparator.h\n    ../Base/core/DereferenceComparableComparator2.h\n    ../Base/core/DereferenceEquatableComparator.h\n    ../Base/core/DereferenceEquatableComparator2.h\n    ../Base/core/EquatableComparator.h\n    ../Base/core/IntervalMap.h\n    ../Base/core/IntervalMapIterator.h\n    ../Base/core/IterableObject.h\n    ../Base/core/KmpStringSearch.h\n    ../Base/core/List.h\n    ../Base/core/ListIterator.h\n    ../Base/core/Matrix.h\n    ../Base/core/Position.h\n    ../Base/core/PreCompiled.h\n    ../Base/core/ReferenceCount.h\n    ../Base/core/ReferenceCountHolder.h\n    ../Base/core/SkipIterator.h\n    ../Base/core/StringIterator.h\n    ../Base/core/TwoDimensionalList.h\n    ../Base/core/TwoDimensionalListIterator.h\n    ../Base/interfaces/ClassTypes.h\n    ../Base/interfaces/ComparatorFactory.h\n    ../Base/interfaces/CompareToBuilder.h\n    ../Base/interfaces/DateTime.h\n    ../Base/interfaces/Dimensions.h\n    ../Base/interfaces/Duration.h\n    ../Base/interfaces/EqualBuilder.h\n    ../Base/interfaces/IBinaryComparator.h\n    ../Base/interfaces/IBuilder.h\n    ../Base/interfaces/ICalculator.h\n    ../Base/interfaces/IClassType.h\n    ../Base/interfaces/ICollection.h\n    ../Base/interfaces/IComparableComparator.h\n    ../Base/interfaces/IEquatableComparator.h\n    ../Base/interfaces/IFinder.h\n    ../Base/interfaces/IHashCodeProvider.h\n    ../Base/interfaces/IIntervalMap.h\n    ../Base/interfaces/IIterable.h\n    ../Base/interfaces/IIterator.h\n    ../Base/interfaces/IList.h\n    ../Base/interfaces/IMatrix.h\n    ../Base/interfaces/IReverseIterable.h\n    ../Base/interfaces/IReverseIterator.h\n    ../Base/interfaces/ISizableCollection.h\n    ../Base/interfaces/ISkipIterator.h\n    ../Base/interfaces/ITwoDimensionalList.h\n    ../Base/interfaces/IValidator.h\n    ../Base/interfaces/IVisitor.h\n    ../Base/interfaces/Interval.h\n    ../Base/interfaces/Intervals.h\n    ../Base/interfaces/IterableComparator.h\n    ../Base/interfaces/IteratorComparator.h\n    ../Base/interfaces/LogStreamWriter.h\n    ../Base/interfaces/Pair.h\n    ../Base/interfaces/SharedPtr.h\n    ../Base/interfaces/StringComparable.h\n    ../Base/interfaces/StringEquality.h\n    ../Base/interfaces/StringSearch.h\n    ../Base/interfaces/Strings.h\n    ../Base/interfaces/Triple.h\n)\n\nset(BASE_SOURCES_FILES\n    ../Base/core/ClassType.cpp\n    ../Base/core/CompareToBuilder.cpp\n    ../Base/core/DateTime.cpp\n    ../Base/core/EqualBuilder.cpp\n    ../Base/core/KmpStringSearch.cpp\n    ../Base/core/LogStreamWriter.cpp\n    ../Base/core/Position.cpp\n    ../Base/core/PreCompiled.cpp\n    ../Base/core/SkipIterator.cpp\n    ../Base/core/StringComparable.cpp\n    ../Base/core/StringEquality.cpp\n    ../Base/core/StringSearch.cpp\n    ../Base/core/Strings.cpp\n)\n\nset(BASE_SOURCES\n    ${BASE_INCLUDES_FILES}\n    ${BASE_SOURCES_FILES}\n)\n\nset(BASE_INCLUDES\n    ../Base\n    ../Base/core\n    ../Base/interfaces\n)\n\nadd_library(Base STATIC\n    ${BASE_SOURCES}\n)\n\nset(TEST_BASE_INCLUDES_FILES\n    ../TestBase/TestBaseException.h\n    ../TestBase/core/PreCompiled.h\n    ../TestBase/interfaces/Assertion.h\n)\n\nset(TEST_BASE_SOURCES_FILES\n    ../TestBase/core/Assertion.cpp\n    ../TestBase/core/PreCompiled.cpp\n)\n\nset(TEST_BASE_SOURCES\n    ${TEST_BASE_INCLUDES_FILES}\n    ${TEST_BASE_SOURCES_FILES}\n)\n\nset(TEST_BASE_INCLUDES\n    ../TestBase\n    ../TestBase/core\n    ../TestBase/interfaces\n)\n\nadd_library(TestBase STATIC\n    ${BASE_SOURCES}\n    ${TEST_BASE_SOURCES}\n)\n\nset(UNIT_TESTING_INCLUDES_FILES\n    ../UnitTesting/UnitTestingException.h\n    ../UnitTesting/core/PreCompiled.h\n    ../UnitTesting/core/TestRunningResult.h\n    ../UnitTesting/core/TestRunningResults.h\n    ../UnitTesting/core/UnitTestFunction.h\n    ../UnitTesting/core/UnitTestHandler.h\n    ../UnitTesting/core/UnitTestManager.h\n    ../UnitTesting/interfaces/ITestFunction.h\n    ../UnitTesting/interfaces/ITestRegistration.h\n    ../UnitTesting/interfaces/ITestRunningResult.h\n    ../UnitTesting/interfaces/ITestRunningResults.h\n    ../UnitTesting/interfaces/IUnitTest.h\n    ../UnitTesting/interfaces/IUnitTestHandler.h\n    ../UnitTesting/interfaces/IUnitTestManager.h\n    ../UnitTesting/interfaces/UnitTestBase.h\n    ../UnitTesting/interfaces/UnitTestException.h\n)\n\nset(UNIT_TESTING_SOURCES_FILES\n    ../UnitTesting/core/PreCompiled.cpp\n    ../UnitTesting/core/TestRunningResult.cpp\n    ../UnitTesting/core/TestRunningResults.cpp\n    ../UnitTesting/core/UnitTestBase.cpp\n    ../UnitTesting/core/UnitTestHandler.cpp\n    ../UnitTesting/core/UnitTestManager.cpp\n)\n\nset(UNIT_TESTING_SOURCES\n    ${UNIT_TESTING_INCLUDES_FILES}\n    ${UNIT_TESTING_SOURCES_FILES}\n)\n\nset(UNIT_TESTING_INCLUDES\n    ../UnitTesting\n    ../UnitTesting/core\n    ../UnitTesting/interfaces\n)\n\nadd_library(UnitTesting STATIC\n    ${BASE_SOURCES}\n    ${TEST_BASE_SOURCES}\n    ${UNIT_TESTING_SOURCES}\n)\n\nset(DATA_STRUCTURES_INCLUDES_FILES\n    ../DataStructures/DataStructureException.h\n    ../DataStructures/binarytree/core/BinaryTree.h\n    ../DataStructures/binarytree/core/BinaryTreeEndNode.h\n    ../DataStructures/binarytree/core/BinaryTreeInorderIterator.h\n    ../DataStructures/binarytree/core/BinaryTreeInorderReverseIterator.h\n    ../DataStructures/binarytree/core/BinaryTreeLevelOrderIterator.h\n    ../DataStructures/binarytree/core/BinaryTreeLevelOrderWithEndNodesIterator.h\n    ../DataStructures/binarytree/core/BinaryTreeLogic.h\n    ../DataStructures/binarytree/core/BinaryTreeNode.h\n    ../DataStructures/binarytree/core/BinaryTreeNodeListIterator.h\n    ../DataStructures/binarytree/core/BinaryTreeNodeListReverseIterator.h\n    ../DataStructures/binarytree/core/BinaryTreeNodes.h\n    ../DataStructures/binarytree/core/BinaryTreePostorderIterator.h\n    ../DataStructures/binarytree/core/BinaryTreePreorderIterator.h\n    ../DataStructures/binarytree/core/BinaryTreeStreamBuilder.h\n    ../DataStructures/binarytree/interfaces/IBinaryTree.h\n    ../DataStructures/binarytree/interfaces/IBinaryTreeLogic.h\n    ../DataStructures/binarytree/interfaces/IBinaryTreeNode.h\n    ../DataStructures/binarytree/interfaces/IBinaryTreeNodeIterator.h\n    ../DataStructures/binarytree/interfaces/IBinaryTreeNodeReverseIterator.h\n    ../DataStructures/binarytree/interfaces/IBinaryTreeTraversal.h\n    ../DataStructures/core/PreCompiled.h\n    ../DataStructures/interfaces/IteratorOfIteratorCollection.h\n)\n\nset(DATA_STRUCTURES_SOURCES_FILES\n    ../DataStructures/core/PreCompiled.cpp\n)\n\nset(DATA_STRUCTURES_SOURCES\n    ${DATA_STRUCTURES_INCLUDES_FILES}\n    ${DATA_STRUCTURES_SOURCES_FILES}\n)\n\nset(DATA_STRUCTURES_INCLUDES\n    ../DataStructures\n    ../DataStructures/binarytree/core\n    ../DataStructures/binarytree/interfaces\n    ../DataStructures/core\n    ../DataStructures/interfaces\n)\n\nadd_library(DataStructures STATIC\n    ${BASE_SOURCES}\n    ${DATA_STRUCTURES_SOURCES}\n)\n\ninclude_directories(DataStructuresTest\n    ${BASE_INCLUDES}\n    ${DATA_STRUCTURES_INCLUDES}\n    ${DATA_STRUCTURES_TEST_INCLUDES}\n    ${TEST_BASE_INCLUDES}\n    ${UNIT_TESTING_INCLUDES}\n)\n\nadd_executable(DataStructuresTest\n    ${BASE_SOURCES}\n    ${DATA_STRUCTURES_SOURCES}\n    ${DATA_STRUCTURES_TEST_SOURCES}\n    ${TEST_BASE_SOURCES}\n    ${UNIT_TESTING_SOURCES}\n)\n\ntarget_link_libraries(DataStructuresTest\n    PRIVATE Base TestBase UnitTesting DataStructures\n)\n\ninclude_directories(\r\n    ${BOOST_PATH}\r\n)\n",
    "c:\\repositories\\Projects\\DevEnvironmentCLion\\ConcurrencyTest\\CMakeLists.txt": "cmake_minimum_required(VERSION 3.13)\n\nproject(ConcurrencyTest VERSION 1.0)\n\nset(CMAKE_CXX_STANDARD 14)\r\n\r\nmacro(print_all_variables)\r\n    message(STATUS \"print_all_variables------------------------------------------{\")\r\n    get_cmake_property(_variableNames VARIABLES)\r\n    foreach (_variableName ${_variableNames})\r\n        message(STATUS \"${_variableName}=${${_variableName}}\")\r\n    endforeach()\r\n    message(STATUS \"print_all_variables------------------------------------------}\")\r\nendmacro()\r\n\r\nprint_all_variables()\r\n\r\n#\r\n# Configure boost library...\r\n#\r\nif (NOT $ENV{BOOST_ROOT})\r\n    set(BOOST_PATH $ENV{BOOST_ROOT})\r\nelse()\r\n    set(BOOST_PATH \"c:\\\\Boost\\\\boost_1_70_0\")\r\nendif()\n\nset(CONCURRENCY_TEST_INCLUDES_FILES\n    ./core/PreCompiled.h\n    ./interfaces/ConcurrentQueueUnitTest.h\n    ./interfaces/TestData.h\n)\n\nset(CONCURRENCY_TEST_SOURCES_FILES\n    ./core/ConcurrentQueueUnitTest.cpp\n    ./core/PreCompiled.cpp\n    ./core/TestData.cpp\n    ./main.cpp\n)\n\nset(CONCURRENCY_TEST_SOURCES\n    ${CONCURRENCY_TEST_INCLUDES_FILES}\n    ${CONCURRENCY_TEST_SOURCES_FILES}\n)\n\nset(CONCURRENCY_TEST_INCLUDES\n    ./core\n    ./interfaces\n)\n\nset(BASE_INCLUDES_FILES\n    ../Base/BaseException.h\n    ../Base/NotImplementedException.h\n    ../Base/core/BaseDependencies.h\n    ../Base/core/BaseLogic.h\n    ../Base/core/ClassType.h\n    ../Base/core/ComparableComparator.h\n    ../Base/core/DereferenceComparableComparator.h\n    ../Base/core/DereferenceComparableComparator2.h\n    ../Base/core/DereferenceEquatableComparator.h\n    ../Base/core/DereferenceEquatableComparator2.h\n    ../Base/core/EquatableComparator.h\n    ../Base/core/IntervalMap.h\n    ../Base/core/IntervalMapIterator.h\n    ../Base/core/IterableObject.h\n    ../Base/core/KmpStringSearch.h\n    ../Base/core/List.h\n    ../Base/core/ListIterator.h\n    ../Base/core/Matrix.h\n    ../Base/core/Position.h\n    ../Base/core/PreCompiled.h\n    ../Base/core/ReferenceCount.h\n    ../Base/core/ReferenceCountHolder.h\n    ../Base/core/SkipIterator.h\n    ../Base/core/StringIterator.h\n    ../Base/core/TwoDimensionalList.h\n    ../Base/core/TwoDimensionalListIterator.h\n    ../Base/interfaces/ClassTypes.h\n    ../Base/interfaces/ComparatorFactory.h\n    ../Base/interfaces/CompareToBuilder.h\n    ../Base/interfaces/DateTime.h\n    ../Base/interfaces/Dimensions.h\n    ../Base/interfaces/Duration.h\n    ../Base/interfaces/EqualBuilder.h\n    ../Base/interfaces/IBinaryComparator.h\n    ../Base/interfaces/IBuilder.h\n    ../Base/interfaces/ICalculator.h\n    ../Base/interfaces/IClassType.h\n    ../Base/interfaces/ICollection.h\n    ../Base/interfaces/IComparableComparator.h\n    ../Base/interfaces/IEquatableComparator.h\n    ../Base/interfaces/IFinder.h\n    ../Base/interfaces/IHashCodeProvider.h\n    ../Base/interfaces/IIntervalMap.h\n    ../Base/interfaces/IIterable.h\n    ../Base/interfaces/IIterator.h\n    ../Base/interfaces/IList.h\n    ../Base/interfaces/IMatrix.h\n    ../Base/interfaces/IReverseIterable.h\n    ../Base/interfaces/IReverseIterator.h\n    ../Base/interfaces/ISizableCollection.h\n    ../Base/interfaces/ISkipIterator.h\n    ../Base/interfaces/ITwoDimensionalList.h\n    ../Base/interfaces/IValidator.h\n    ../Base/interfaces/IVisitor.h\n    ../Base/interfaces/Interval.h\n    ../Base/interfaces/Intervals.h\n    ../Base/interfaces/IterableComparator.h\n    ../Base/interfaces/IteratorComparator.h\n    ../Base/interfaces/LogStreamWriter.h\n    ../Base/interfaces/Pair.h\n    ../Base/interfaces/SharedPtr.h\n    ../Base/interfaces/StringComparable.h\n    ../Base/interfaces/StringEquality.h\n    ../Base/interfaces/StringSearch.h\n    ../Base/interfaces/Strings.h\n    ../Base/interfaces/Triple.h\n)\n\nset(BASE_SOURCES_FILES\n    ../Base/core/ClassType.cpp\n    ../Base/core/CompareToBuilder.cpp\n    ../Base/core/DateTime.cpp\n    ../Base/core/EqualBuilder.cpp\n    ../Base/core/KmpStringSearch.cpp\n    ../Base/core/LogStreamWriter.cpp\n    ../Base/core/Position.cpp\n    ../Base/core/PreCompiled.cpp\n    ../Base/core/SkipIterator.cpp\n    ../Base/core/StringComparable.cpp\n    ../Base/core/StringEquality.cpp\n    ../Base/core/StringSearch.cpp\n    ../Base/core/Strings.cpp\n)\n\nset(BASE_SOURCES\n    ${BASE_INCLUDES_FILES}\n    ${BASE_SOURCES_FILES}\n)\n\nset(BASE_INCLUDES\n    ../Base\n    ../Base/core\n    ../Base/interfaces\n)\n\nadd_library(Base STATIC\n    ${BASE_SOURCES}\n)\n\nset(TEST_BASE_INCLUDES_FILES\n    ../TestBase/TestBaseException.h\n    ../TestBase/core/PreCompiled.h\n    ../TestBase/interfaces/Assertion.h\n)\n\nset(TEST_BASE_SOURCES_FILES\n    ../TestBase/core/Assertion.cpp\n    ../TestBase/core/PreCompiled.cpp\n)\n\nset(TEST_BASE_SOURCES\n    ${TEST_BASE_INCLUDES_FILES}\n    ${TEST_BASE_SOURCES_FILES}\n)\n\nset(TEST_BASE_INCLUDES\n    ../TestBase\n    ../TestBase/core\n    ../TestBase/interfaces\n)\n\nadd_library(TestBase STATIC\n    ${BASE_SOURCES}\n    ${TEST_BASE_SOURCES}\n)\n\nset(UNIT_TESTING_INCLUDES_FILES\n    ../UnitTesting/UnitTestingException.h\n    ../UnitTesting/core/PreCompiled.h\n    ../UnitTesting/core/TestRunningResult.h\n    ../UnitTesting/core/TestRunningResults.h\n    ../UnitTesting/core/UnitTestFunction.h\n    ../UnitTesting/core/UnitTestHandler.h\n    ../UnitTesting/core/UnitTestManager.h\n    ../UnitTesting/interfaces/ITestFunction.h\n    ../UnitTesting/interfaces/ITestRegistration.h\n    ../UnitTesting/interfaces/ITestRunningResult.h\n    ../UnitTesting/interfaces/ITestRunningResults.h\n    ../UnitTesting/interfaces/IUnitTest.h\n    ../UnitTesting/interfaces/IUnitTestHandler.h\n    ../UnitTesting/interfaces/IUnitTestManager.h\n    ../UnitTesting/interfaces/UnitTestBase.h\n    ../UnitTesting/interfaces/UnitTestException.h\n)\n\nset(UNIT_TESTING_SOURCES_FILES\n    ../UnitTesting/core/PreCompiled.cpp\n    ../UnitTesting/core/TestRunningResult.cpp\n    ../UnitTesting/core/TestRunningResults.cpp\n    ../UnitTesting/core/UnitTestBase.cpp\n    ../UnitTesting/core/UnitTestHandler.cpp\n    ../UnitTesting/core/UnitTestManager.cpp\n)\n\nset(UNIT_TESTING_SOURCES\n    ${UNIT_TESTING_INCLUDES_FILES}\n    ${UNIT_TESTING_SOURCES_FILES}\n)\n\nset(UNIT_TESTING_INCLUDES\n    ../UnitTesting\n    ../UnitTesting/core\n    ../UnitTesting/interfaces\n)\n\nadd_library(UnitTesting STATIC\n    ${BASE_SOURCES}\n    ${TEST_BASE_SOURCES}\n    ${UNIT_TESTING_SOURCES}\n)\n\nset(CONCURRENCY_INCLUDES_FILES\n    ../Concurrency/ConcurrencyException.h\n    ../Concurrency/core/PreCompiled.h\n    ../Concurrency/interfaces/ConcurrentQueue.h\n)\n\nset(CONCURRENCY_SOURCES_FILES\n    ../Concurrency/core/PreCompiled.cpp\n)\n\nset(CONCURRENCY_SOURCES\n    ${CONCURRENCY_INCLUDES_FILES}\n    ${CONCURRENCY_SOURCES_FILES}\n)\n\nset(CONCURRENCY_INCLUDES\n    ../Concurrency\n    ../Concurrency/core\n    ../Concurrency/interfaces\n)\n\nadd_library(Concurrency STATIC\n    ${BASE_SOURCES}\n    ${CONCURRENCY_SOURCES}\n)\n\ninclude_directories(ConcurrencyTest\n    ${BASE_INCLUDES}\n    ${CONCURRENCY_INCLUDES}\n    ${CONCURRENCY_TEST_INCLUDES}\n    ${TEST_BASE_INCLUDES}\n    ${UNIT_TESTING_INCLUDES}\n)\n\nadd_executable(ConcurrencyTest\n    ${BASE_SOURCES}\n    ${CONCURRENCY_SOURCES}\n    ${CONCURRENCY_TEST_SOURCES}\n    ${TEST_BASE_SOURCES}\n    ${UNIT_TESTING_SOURCES}\n)\n\ntarget_link_libraries(ConcurrencyTest\n    PRIVATE Base TestBase UnitTesting Concurrency\n)\n\ninclude_directories(\r\n    ${BOOST_PATH}\r\n)\n",
    "c:\\repositories\\Projects\\DevEnvironmentCLion\\MemoryManagement\\CMakeLists.txt": "cmake_minimum_required(VERSION 3.13)\n\nproject(MemoryManagement VERSION 1.0)\n\nset(CMAKE_CXX_STANDARD 14)\r\n\r\nmacro(print_all_variables)\r\n    message(STATUS \"print_all_variables------------------------------------------{\")\r\n    get_cmake_property(_variableNames VARIABLES)\r\n    foreach (_variableName ${_variableNames})\r\n        message(STATUS \"${_variableName}=${${_variableName}}\")\r\n    endforeach()\r\n    message(STATUS \"print_all_variables------------------------------------------}\")\r\nendmacro()\r\n\r\nprint_all_variables()\r\n\r\n#\r\n# Configure boost library...\r\n#\r\nif (NOT $ENV{BOOST_ROOT})\r\n    set(BOOST_PATH $ENV{BOOST_ROOT})\r\nelse()\r\n    set(BOOST_PATH \"c:\\\\Boost\\\\boost_1_70_0\")\r\nendif()\n\nset(MEMORY_MANAGEMENT_INCLUDES_FILES\n    ./MemoryManagementException.h\n    ./core/FixedMemoryPool.h\n    ./core/MemoryAllocator.h\n    ./core/PreCompiled.h\n    ./interfaces/IMemoryAllocator.h\n    ./interfaces/IMemoryPool.h\n    ./interfaces/IObjectPool.h\n    ./interfaces/MemoryPool.h\n    ./interfaces/ObjectPool.h\n    ./interfaces/ObjectPoolElement.h\n)\n\nset(MEMORY_MANAGEMENT_SOURCES_FILES\n    ./core/FixedMemoryPool.cpp\n    ./core/MemoryAllocator.cpp\n    ./core/MemoryPool.cpp\n    ./core/PreCompiled.cpp\n)\n\nset(MEMORY_MANAGEMENT_SOURCES\n    ${MEMORY_MANAGEMENT_INCLUDES_FILES}\n    ${MEMORY_MANAGEMENT_SOURCES_FILES}\n)\n\nset(MEMORY_MANAGEMENT_INCLUDES\n    .\n    ./core\n    ./interfaces\n)\n\nset(BASE_INCLUDES_FILES\n    ../Base/BaseException.h\n    ../Base/NotImplementedException.h\n    ../Base/core/BaseDependencies.h\n    ../Base/core/BaseLogic.h\n    ../Base/core/ClassType.h\n    ../Base/core/ComparableComparator.h\n    ../Base/core/DereferenceComparableComparator.h\n    ../Base/core/DereferenceComparableComparator2.h\n    ../Base/core/DereferenceEquatableComparator.h\n    ../Base/core/DereferenceEquatableComparator2.h\n    ../Base/core/EquatableComparator.h\n    ../Base/core/IntervalMap.h\n    ../Base/core/IntervalMapIterator.h\n    ../Base/core/IterableObject.h\n    ../Base/core/KmpStringSearch.h\n    ../Base/core/List.h\n    ../Base/core/ListIterator.h\n    ../Base/core/Matrix.h\n    ../Base/core/Position.h\n    ../Base/core/PreCompiled.h\n    ../Base/core/ReferenceCount.h\n    ../Base/core/ReferenceCountHolder.h\n    ../Base/core/SkipIterator.h\n    ../Base/core/StringIterator.h\n    ../Base/core/TwoDimensionalList.h\n    ../Base/core/TwoDimensionalListIterator.h\n    ../Base/interfaces/ClassTypes.h\n    ../Base/interfaces/ComparatorFactory.h\n    ../Base/interfaces/CompareToBuilder.h\n    ../Base/interfaces/DateTime.h\n    ../Base/interfaces/Dimensions.h\n    ../Base/interfaces/Duration.h\n    ../Base/interfaces/EqualBuilder.h\n    ../Base/interfaces/IBinaryComparator.h\n    ../Base/interfaces/IBuilder.h\n    ../Base/interfaces/ICalculator.h\n    ../Base/interfaces/IClassType.h\n    ../Base/interfaces/ICollection.h\n    ../Base/interfaces/IComparableComparator.h\n    ../Base/interfaces/IEquatableComparator.h\n    ../Base/interfaces/IFinder.h\n    ../Base/interfaces/IHashCodeProvider.h\n    ../Base/interfaces/IIntervalMap.h\n    ../Base/interfaces/IIterable.h\n    ../Base/interfaces/IIterator.h\n    ../Base/interfaces/IList.h\n    ../Base/interfaces/IMatrix.h\n    ../Base/interfaces/IReverseIterable.h\n    ../Base/interfaces/IReverseIterator.h\n    ../Base/interfaces/ISizableCollection.h\n    ../Base/interfaces/ISkipIterator.h\n    ../Base/interfaces/ITwoDimensionalList.h\n    ../Base/interfaces/IValidator.h\n    ../Base/interfaces/IVisitor.h\n    ../Base/interfaces/Interval.h\n    ../Base/interfaces/Intervals.h\n    ../Base/interfaces/IterableComparator.h\n    ../Base/interfaces/IteratorComparator.h\n    ../Base/interfaces/LogStreamWriter.h\n    ../Base/interfaces/Pair.h\n    ../Base/interfaces/SharedPtr.h\n    ../Base/interfaces/StringComparable.h\n    ../Base/interfaces/StringEquality.h\n    ../Base/interfaces/StringSearch.h\n    ../Base/interfaces/Strings.h\n    ../Base/interfaces/Triple.h\n)\n\nset(BASE_SOURCES_FILES\n    ../Base/core/ClassType.cpp\n    ../Base/core/CompareToBuilder.cpp\n    ../Base/core/DateTime.cpp\n    ../Base/core/EqualBuilder.cpp\n    ../Base/core/KmpStringSearch.cpp\n    ../Base/core/LogStreamWriter.cpp\n    ../Base/core/Position.cpp\n    ../Base/core/PreCompiled.cpp\n    ../Base/core/SkipIterator.cpp\n    ../Base/core/StringComparable.cpp\n    ../Base/core/StringEquality.cpp\n    ../Base/core/StringSearch.cpp\n    ../Base/core/Strings.cpp\n)\n\nset(BASE_SOURCES\n    ${BASE_INCLUDES_FILES}\n    ${BASE_SOURCES_FILES}\n)\n\nset(BASE_INCLUDES\n    ../Base\n    ../Base/core\n    ../Base/interfaces\n)\n\nadd_library(Base STATIC\n    ${BASE_SOURCES}\n)\n\ninclude_directories(MemoryManagement\n    ${BASE_INCLUDES}\n    ${MEMORY_MANAGEMENT_INCLUDES}\n)\n\nadd_library(MemoryManagement STATIC\n    ${BASE_SOURCES}\n    ${MEMORY_MANAGEMENT_SOURCES}\n)\n\ninclude_directories(\r\n    ${BOOST_PATH}\r\n)\n",
    "c:\\repositories\\Projects\\DevEnvironmentCLion\\Problems\\CMakeLists.txt": "cmake_minimum_required(VERSION 3.13)\n\nproject(Problems VERSION 1.0)\n\nset(CMAKE_CXX_STANDARD 14)\r\n\r\nmacro(print_all_variables)\r\n    message(STATUS \"print_all_variables------------------------------------------{\")\r\n    get_cmake_property(_variableNames VARIABLES)\r\n    foreach (_variableName ${_variableNames})\r\n        message(STATUS \"${_variableName}=${${_variableName}}\")\r\n    endforeach()\r\n    message(STATUS \"print_all_variables------------------------------------------}\")\r\nendmacro()\r\n\r\nprint_all_variables()\r\n\r\n#\r\n# Configure boost library...\r\n#\r\nif (NOT $ENV{BOOST_ROOT})\r\n    set(BOOST_PATH $ENV{BOOST_ROOT})\r\nelse()\r\n    set(BOOST_PATH \"c:\\\\Boost\\\\boost_1_70_0\")\r\nendif()\n\nset(PROBLEMS_INCLUDES_FILES\n    ./ProblemException.h\n    ./core/CombinationSum.h\n    ./core/FlightRoutePlanner.h\n    ./core/MatchingTriplets.h\n    ./core/MatrixFinder.h\n    ./core/MergingIntervals.h\n    ./core/MinimumWindowSubstring.h\n    ./core/NumberValidator.h\n    ./core/PositionQueens.h\n    ./core/PreCompiled.h\n    ./core/WordFinder.h\n    ./interfaces/ICombinationSum.h\n    ./interfaces/IFlightRoutePlanner.h\n    ./interfaces/IMatchingTriplets.h\n    ./interfaces/IMatrixFinder.h\n    ./interfaces/IMergingIntervals.h\n    ./interfaces/IMinimumWindowSubstring.h\n    ./interfaces/IPositionQueens.h\n)\n\nset(PROBLEMS_SOURCES_FILES\n    ./core/FlightRoutePlanner.cpp\n    ./core/MinimumWindowSubstring.cpp\n    ./core/NumberValidator.cpp\n    ./core/PositionQueens.cpp\n    ./core/PreCompiled.cpp\n    ./core/WordFinder.cpp\n)\n\nset(PROBLEMS_SOURCES\n    ${PROBLEMS_INCLUDES_FILES}\n    ${PROBLEMS_SOURCES_FILES}\n)\n\nset(PROBLEMS_INCLUDES\n    .\n    ./core\n    ./interfaces\n)\n\nset(BASE_INCLUDES_FILES\n    ../Base/BaseException.h\n    ../Base/NotImplementedException.h\n    ../Base/core/BaseDependencies.h\n    ../Base/core/BaseLogic.h\n    ../Base/core/ClassType.h\n    ../Base/core/ComparableComparator.h\n    ../Base/core/DereferenceComparableComparator.h\n    ../Base/core/DereferenceComparableComparator2.h\n    ../Base/core/DereferenceEquatableComparator.h\n    ../Base/core/DereferenceEquatableComparator2.h\n    ../Base/core/EquatableComparator.h\n    ../Base/core/IntervalMap.h\n    ../Base/core/IntervalMapIterator.h\n    ../Base/core/IterableObject.h\n    ../Base/core/KmpStringSearch.h\n    ../Base/core/List.h\n    ../Base/core/ListIterator.h\n    ../Base/core/Matrix.h\n    ../Base/core/Position.h\n    ../Base/core/PreCompiled.h\n    ../Base/core/ReferenceCount.h\n    ../Base/core/ReferenceCountHolder.h\n    ../Base/core/SkipIterator.h\n    ../Base/core/StringIterator.h\n    ../Base/core/TwoDimensionalList.h\n    ../Base/core/TwoDimensionalListIterator.h\n    ../Base/interfaces/ClassTypes.h\n    ../Base/interfaces/ComparatorFactory.h\n    ../Base/interfaces/CompareToBuilder.h\n    ../Base/interfaces/DateTime.h\n    ../Base/interfaces/Dimensions.h\n    ../Base/interfaces/Duration.h\n    ../Base/interfaces/EqualBuilder.h\n    ../Base/interfaces/IBinaryComparator.h\n    ../Base/interfaces/IBuilder.h\n    ../Base/interfaces/ICalculator.h\n    ../Base/interfaces/IClassType.h\n    ../Base/interfaces/ICollection.h\n    ../Base/interfaces/IComparableComparator.h\n    ../Base/interfaces/IEquatableComparator.h\n    ../Base/interfaces/IFinder.h\n    ../Base/interfaces/IHashCodeProvider.h\n    ../Base/interfaces/IIntervalMap.h\n    ../Base/interfaces/IIterable.h\n    ../Base/interfaces/IIterator.h\n    ../Base/interfaces/IList.h\n    ../Base/interfaces/IMatrix.h\n    ../Base/interfaces/IReverseIterable.h\n    ../Base/interfaces/IReverseIterator.h\n    ../Base/interfaces/ISizableCollection.h\n    ../Base/interfaces/ISkipIterator.h\n    ../Base/interfaces/ITwoDimensionalList.h\n    ../Base/interfaces/IValidator.h\n    ../Base/interfaces/IVisitor.h\n    ../Base/interfaces/Interval.h\n    ../Base/interfaces/Intervals.h\n    ../Base/interfaces/IterableComparator.h\n    ../Base/interfaces/IteratorComparator.h\n    ../Base/interfaces/LogStreamWriter.h\n    ../Base/interfaces/Pair.h\n    ../Base/interfaces/SharedPtr.h\n    ../Base/interfaces/StringComparable.h\n    ../Base/interfaces/StringEquality.h\n    ../Base/interfaces/StringSearch.h\n    ../Base/interfaces/Strings.h\n    ../Base/interfaces/Triple.h\n)\n\nset(BASE_SOURCES_FILES\n    ../Base/core/ClassType.cpp\n    ../Base/core/CompareToBuilder.cpp\n    ../Base/core/DateTime.cpp\n    ../Base/core/EqualBuilder.cpp\n    ../Base/core/KmpStringSearch.cpp\n    ../Base/core/LogStreamWriter.cpp\n    ../Base/core/Position.cpp\n    ../Base/core/PreCompiled.cpp\n    ../Base/core/SkipIterator.cpp\n    ../Base/core/StringComparable.cpp\n    ../Base/core/StringEquality.cpp\n    ../Base/core/StringSearch.cpp\n    ../Base/core/Strings.cpp\n)\n\nset(BASE_SOURCES\n    ${BASE_INCLUDES_FILES}\n    ${BASE_SOURCES_FILES}\n)\n\nset(BASE_INCLUDES\n    ../Base\n    ../Base/core\n    ../Base/interfaces\n)\n\nadd_library(Base STATIC\n    ${BASE_SOURCES}\n)\n\ninclude_directories(Problems\n    ${BASE_INCLUDES}\n    ${PROBLEMS_INCLUDES}\n)\n\nadd_library(Problems STATIC\n    ${BASE_SOURCES}\n    ${PROBLEMS_SOURCES}\n)\n\ninclude_directories(\r\n    ${BOOST_PATH}\r\n)\n",
    "c:\\repositories\\Projects\\DevEnvironmentCLion\\ProblemsTest\\CMakeLists.txt": "cmake_minimum_required(VERSION 3.13)\n\nproject(ProblemsTest VERSION 1.0)\n\nset(CMAKE_CXX_STANDARD 14)\r\n\r\nmacro(print_all_variables)\r\n    message(STATUS \"print_all_variables------------------------------------------{\")\r\n    get_cmake_property(_variableNames VARIABLES)\r\n    foreach (_variableName ${_variableNames})\r\n        message(STATUS \"${_variableName}=${${_variableName}}\")\r\n    endforeach()\r\n    message(STATUS \"print_all_variables------------------------------------------}\")\r\nendmacro()\r\n\r\nprint_all_variables()\r\n\r\n#\r\n# Configure boost library...\r\n#\r\nif (NOT $ENV{BOOST_ROOT})\r\n    set(BOOST_PATH $ENV{BOOST_ROOT})\r\nelse()\r\n    set(BOOST_PATH \"c:\\\\Boost\\\\boost_1_70_0\")\r\nendif()\n\nset(PROBLEMS_TEST_INCLUDES_FILES\n    ./core/PreCompiled.h\n    ./interfaces/CombinationSumUnitTest.h\n    ./interfaces/FlightRoutePlannerUnitTest.h\n    ./interfaces/MatchingTripletsUnitTest.h\n    ./interfaces/MatrixFinderUnitTest.h\n    ./interfaces/MergingIntervalsUnitTest.h\n    ./interfaces/MinimumWindowSubstringUnitTest.h\n    ./interfaces/NumberValidatorUnitTest.h\n    ./interfaces/PositionQueensUnitTest.h\n    ./interfaces/TestData.h\n    ./interfaces/WordFinderUnitTest.h\n)\n\nset(PROBLEMS_TEST_SOURCES_FILES\n    ./core/CombinationSumUnitTest.cpp\n    ./core/FlightRoutePlannerUnitTest.cpp\n    ./core/MatchingTripletsUnitTest.cpp\n    ./core/MatrixFinderUnitTest.cpp\n    ./core/MergingIntervalsUnitTest.cpp\n    ./core/MinimumWindowSubstringUnitTest.cpp\n    ./core/NumberValidatorUnitTest.cpp\n    ./core/PositionQueensUnitTest.cpp\n    ./core/PreCompiled.cpp\n    ./core/TestData.cpp\n    ./core/WordFinderUnitTest.cpp\n    ./main.cpp\n)\n\nset(PROBLEMS_TEST_SOURCES\n    ${PROBLEMS_TEST_INCLUDES_FILES}\n    ${PROBLEMS_TEST_SOURCES_FILES}\n)\n\nset(PROBLEMS_TEST_INCLUDES\n    ./core\n    ./interfaces\n)\n\nset(BASE_INCLUDES_FILES\n    ../Base/BaseException.h\n    ../Base/NotImplementedException.h\n    ../Base/core/BaseDependencies.h\n    ../Base/core/BaseLogic.h\n    ../Base/core/ClassType.h\n    ../Base/core/ComparableComparator.h\n    ../Base/core/DereferenceComparableComparator.h\n    ../Base/core/DereferenceComparableComparator2.h\n    ../Base/core/DereferenceEquatableComparator.h\n    ../Base/core/DereferenceEquatableComparator2.h\n    ../Base/core/EquatableComparator.h\n    ../Base/core/IntervalMap.h\n    ../Base/core/IntervalMapIterator.h\n    ../Base/core/IterableObject.h\n    ../Base/core/KmpStringSearch.h\n    ../Base/core/List.h\n    ../Base/core/ListIterator.h\n    ../Base/core/Matrix.h\n    ../Base/core/Position.h\n    ../Base/core/PreCompiled.h\n    ../Base/core/ReferenceCount.h\n    ../Base/core/ReferenceCountHolder.h\n    ../Base/core/SkipIterator.h\n    ../Base/core/StringIterator.h\n    ../Base/core/TwoDimensionalList.h\n    ../Base/core/TwoDimensionalListIterator.h\n    ../Base/interfaces/ClassTypes.h\n    ../Base/interfaces/ComparatorFactory.h\n    ../Base/interfaces/CompareToBuilder.h\n    ../Base/interfaces/DateTime.h\n    ../Base/interfaces/Dimensions.h\n    ../Base/interfaces/Duration.h\n    ../Base/interfaces/EqualBuilder.h\n    ../Base/interfaces/IBinaryComparator.h\n    ../Base/interfaces/IBuilder.h\n    ../Base/interfaces/ICalculator.h\n    ../Base/interfaces/IClassType.h\n    ../Base/interfaces/ICollection.h\n    ../Base/interfaces/IComparableComparator.h\n    ../Base/interfaces/IEquatableComparator.h\n    ../Base/interfaces/IFinder.h\n    ../Base/interfaces/IHashCodeProvider.h\n    ../Base/interfaces/IIntervalMap.h\n    ../Base/interfaces/IIterable.h\n    ../Base/interfaces/IIterator.h\n    ../Base/interfaces/IList.h\n    ../Base/interfaces/IMatrix.h\n    ../Base/interfaces/IReverseIterable.h\n    ../Base/interfaces/IReverseIterator.h\n    ../Base/interfaces/ISizableCollection.h\n    ../Base/interfaces/ISkipIterator.h\n    ../Base/interfaces/ITwoDimensionalList.h\n    ../Base/interfaces/IValidator.h\n    ../Base/interfaces/IVisitor.h\n    ../Base/interfaces/Interval.h\n    ../Base/interfaces/Intervals.h\n    ../Base/interfaces/IterableComparator.h\n    ../Base/interfaces/IteratorComparator.h\n    ../Base/interfaces/LogStreamWriter.h\n    ../Base/interfaces/Pair.h\n    ../Base/interfaces/SharedPtr.h\n    ../Base/interfaces/StringComparable.h\n    ../Base/interfaces/StringEquality.h\n    ../Base/interfaces/StringSearch.h\n    ../Base/interfaces/Strings.h\n    ../Base/interfaces/Triple.h\n)\n\nset(BASE_SOURCES_FILES\n    ../Base/core/ClassType.cpp\n    ../Base/core/CompareToBuilder.cpp\n    ../Base/core/DateTime.cpp\n    ../Base/core/EqualBuilder.cpp\n    ../Base/core/KmpStringSearch.cpp\n    ../Base/core/LogStreamWriter.cpp\n    ../Base/core/Position.cpp\n    ../Base/core/PreCompiled.cpp\n    ../Base/core/SkipIterator.cpp\n    ../Base/core/StringComparable.cpp\n    ../Base/core/StringEquality.cpp\n    ../Base/core/StringSearch.cpp\n    ../Base/core/Strings.cpp\n)\n\nset(BASE_SOURCES\n    ${BASE_INCLUDES_FILES}\n    ${BASE_SOURCES_FILES}\n)\n\nset(BASE_INCLUDES\n    ../Base\n    ../Base/core\n    ../Base/interfaces\n)\n\nadd_library(Base STATIC\n    ${BASE_SOURCES}\n)\n\nset(TEST_BASE_INCLUDES_FILES\n    ../TestBase/TestBaseException.h\n    ../TestBase/core/PreCompiled.h\n    ../TestBase/interfaces/Assertion.h\n)\n\nset(TEST_BASE_SOURCES_FILES\n    ../TestBase/core/Assertion.cpp\n    ../TestBase/core/PreCompiled.cpp\n)\n\nset(TEST_BASE_SOURCES\n    ${TEST_BASE_INCLUDES_FILES}\n    ${TEST_BASE_SOURCES_FILES}\n)\n\nset(TEST_BASE_INCLUDES\n    ../TestBase\n    ../TestBase/core\n    ../TestBase/interfaces\n)\n\nadd_library(TestBase STATIC\n    ${BASE_SOURCES}\n    ${TEST_BASE_SOURCES}\n)\n\nset(UNIT_TESTING_INCLUDES_FILES\n    ../UnitTesting/UnitTestingException.h\n    ../UnitTesting/core/PreCompiled.h\n    ../UnitTesting/core/TestRunningResult.h\n    ../UnitTesting/core/TestRunningResults.h\n    ../UnitTesting/core/UnitTestFunction.h\n    ../UnitTesting/core/UnitTestHandler.h\n    ../UnitTesting/core/UnitTestManager.h\n    ../UnitTesting/interfaces/ITestFunction.h\n    ../UnitTesting/interfaces/ITestRegistration.h\n    ../UnitTesting/interfaces/ITestRunningResult.h\n    ../UnitTesting/interfaces/ITestRunningResults.h\n    ../UnitTesting/interfaces/IUnitTest.h\n    ../UnitTesting/interfaces/IUnitTestHandler.h\n    ../UnitTesting/interfaces/IUnitTestManager.h\n    ../UnitTesting/interfaces/UnitTestBase.h\n    ../UnitTesting/interfaces/UnitTestException.h\n)\n\nset(UNIT_TESTING_SOURCES_FILES\n    ../UnitTesting/core/PreCompiled.cpp\n    ../UnitTesting/core/TestRunningResult.cpp\n    ../UnitTesting/core/TestRunningResults.cpp\n    ../UnitTesting/core/UnitTestBase.cpp\n    ../UnitTesting/core/UnitTestHandler.cpp\n    ../UnitTesting/core/UnitTestManager.cpp\n)\n\nset(UNIT_TESTING_SOURCES\n    ${UNIT_TESTING_INCLUDES_FILES}\n    ${UNIT_TESTING_SOURCES_FILES}\n)\n\nset(UNIT_TESTING_INCLUDES\n    ../UnitTesting\n    ../UnitTesting/core\n    ../UnitTesting/interfaces\n)\n\nadd_library(UnitTesting STATIC\n    ${BASE_SOURCES}\n    ${TEST_BASE_SOURCES}\n    ${UNIT_TESTING_SOURCES}\n)\n\nset(PROBLEMS_INCLUDES_FILES\n    ../Problems/ProblemException.h\n    ../Problems/core/CombinationSum.h\n    ../Problems/core/FlightRoutePlanner.h\n    ../Problems/core/MatchingTriplets.h\n    ../Problems/core/MatrixFinder.h\n    ../Problems/core/MergingIntervals.h\n    ../Problems/core/MinimumWindowSubstring.h\n    ../Problems/core/NumberValidator.h\n    ../Problems/core/PositionQueens.h\n    ../Problems/core/PreCompiled.h\n    ../Problems/core/WordFinder.h\n    ../Problems/interfaces/ICombinationSum.h\n    ../Problems/interfaces/IFlightRoutePlanner.h\n    ../Problems/interfaces/IMatchingTriplets.h\n    ../Problems/interfaces/IMatrixFinder.h\n    ../Problems/interfaces/IMergingIntervals.h\n    ../Problems/interfaces/IMinimumWindowSubstring.h\n    ../Problems/interfaces/IPositionQueens.h\n)\n\nset(PROBLEMS_SOURCES_FILES\n    ../Problems/core/FlightRoutePlanner.cpp\n    ../Problems/core/MinimumWindowSubstring.cpp\n    ../Problems/core/NumberValidator.cpp\n    ../Problems/core/PositionQueens.cpp\n    ../Problems/core/PreCompiled.cpp\n    ../Problems/core/WordFinder.cpp\n)\n\nset(PROBLEMS_SOURCES\n    ${PROBLEMS_INCLUDES_FILES}\n    ${PROBLEMS_SOURCES_FILES}\n)\n\nset(PROBLEMS_INCLUDES\n    ../Problems\n    ../Problems/core\n    ../Problems/interfaces\n)\n\nadd_library(Problems STATIC\n    ${BASE_SOURCES}\n    ${PROBLEMS_SOURCES}\n)\n\ninclude_directories(ProblemsTest\n    ${BASE_INCLUDES}\n    ${PROBLEMS_INCLUDES}\n    ${PROBLEMS_TEST_INCLUDES}\n    ${TEST_BASE_INCLUDES}\n    ${UNIT_TESTING_INCLUDES}\n)\n\nadd_executable(ProblemsTest\n    ${BASE_SOURCES}\n    ${PROBLEMS_SOURCES}\n    ${PROBLEMS_TEST_SOURCES}\n    ${TEST_BASE_SOURCES}\n    ${UNIT_TESTING_SOURCES}\n)\n\ntarget_link_libraries(ProblemsTest\n    PRIVATE Base TestBase UnitTesting Problems\n)\n\ninclude_directories(\r\n    ${BOOST_PATH}\r\n)\n",
    "c:\\repositories\\Projects\\DevEnvironmentCLion\\DataStructures\\CMakeLists.txt": "cmake_minimum_required(VERSION 3.13)\n\nproject(DataStructures VERSION 1.0)\n\nset(CMAKE_CXX_STANDARD 14)\r\n\r\nmacro(print_all_variables)\r\n    message(STATUS \"print_all_variables------------------------------------------{\")\r\n    get_cmake_property(_variableNames VARIABLES)\r\n    foreach (_variableName ${_variableNames})\r\n        message(STATUS \"${_variableName}=${${_variableName}}\")\r\n    endforeach()\r\n    message(STATUS \"print_all_variables------------------------------------------}\")\r\nendmacro()\r\n\r\nprint_all_variables()\r\n\r\n#\r\n# Configure boost library...\r\n#\r\nif (NOT $ENV{BOOST_ROOT})\r\n    set(BOOST_PATH $ENV{BOOST_ROOT})\r\nelse()\r\n    set(BOOST_PATH \"c:\\\\Boost\\\\boost_1_70_0\")\r\nendif()\n\nset(DATA_STRUCTURES_INCLUDES_FILES\n    ./DataStructureException.h\n    ./binarytree/core/BinaryTree.h\n    ./binarytree/core/BinaryTreeEndNode.h\n    ./binarytree/core/BinaryTreeInorderIterator.h\n    ./binarytree/core/BinaryTreeInorderReverseIterator.h\n    ./binarytree/core/BinaryTreeLevelOrderIterator.h\n    ./binarytree/core/BinaryTreeLevelOrderWithEndNodesIterator.h\n    ./binarytree/core/BinaryTreeLogic.h\n    ./binarytree/core/BinaryTreeNode.h\n    ./binarytree/core/BinaryTreeNodeListIterator.h\n    ./binarytree/core/BinaryTreeNodeListReverseIterator.h\n    ./binarytree/core/BinaryTreeNodes.h\n    ./binarytree/core/BinaryTreePostorderIterator.h\n    ./binarytree/core/BinaryTreePreorderIterator.h\n    ./binarytree/core/BinaryTreeStreamBuilder.h\n    ./binarytree/interfaces/IBinaryTree.h\n    ./binarytree/interfaces/IBinaryTreeLogic.h\n    ./binarytree/interfaces/IBinaryTreeNode.h\n    ./binarytree/interfaces/IBinaryTreeNodeIterator.h\n    ./binarytree/interfaces/IBinaryTreeNodeReverseIterator.h\n    ./binarytree/interfaces/IBinaryTreeTraversal.h\n    ./core/PreCompiled.h\n    ./interfaces/IteratorOfIteratorCollection.h\n)\n\nset(DATA_STRUCTURES_SOURCES_FILES\n    ./core/PreCompiled.cpp\n)\n\nset(DATA_STRUCTURES_SOURCES\n    ${DATA_STRUCTURES_INCLUDES_FILES}\n    ${DATA_STRUCTURES_SOURCES_FILES}\n)\n\nset(DATA_STRUCTURES_INCLUDES\n    .\n    ./binarytree/core\n    ./binarytree/interfaces\n    ./core\n    ./interfaces\n)\n\nset(BASE_INCLUDES_FILES\n    ../Base/BaseException.h\n    ../Base/NotImplementedException.h\n    ../Base/core/BaseDependencies.h\n    ../Base/core/BaseLogic.h\n    ../Base/core/ClassType.h\n    ../Base/core/ComparableComparator.h\n    ../Base/core/DereferenceComparableComparator.h\n    ../Base/core/DereferenceComparableComparator2.h\n    ../Base/core/DereferenceEquatableComparator.h\n    ../Base/core/DereferenceEquatableComparator2.h\n    ../Base/core/EquatableComparator.h\n    ../Base/core/IntervalMap.h\n    ../Base/core/IntervalMapIterator.h\n    ../Base/core/IterableObject.h\n    ../Base/core/KmpStringSearch.h\n    ../Base/core/List.h\n    ../Base/core/ListIterator.h\n    ../Base/core/Matrix.h\n    ../Base/core/Position.h\n    ../Base/core/PreCompiled.h\n    ../Base/core/ReferenceCount.h\n    ../Base/core/ReferenceCountHolder.h\n    ../Base/core/SkipIterator.h\n    ../Base/core/StringIterator.h\n    ../Base/core/TwoDimensionalList.h\n    ../Base/core/TwoDimensionalListIterator.h\n    ../Base/interfaces/ClassTypes.h\n    ../Base/interfaces/ComparatorFactory.h\n    ../Base/interfaces/CompareToBuilder.h\n    ../Base/interfaces/DateTime.h\n    ../Base/interfaces/Dimensions.h\n    ../Base/interfaces/Duration.h\n    ../Base/interfaces/EqualBuilder.h\n    ../Base/interfaces/IBinaryComparator.h\n    ../Base/interfaces/IBuilder.h\n    ../Base/interfaces/ICalculator.h\n    ../Base/interfaces/IClassType.h\n    ../Base/interfaces/ICollection.h\n    ../Base/interfaces/IComparableComparator.h\n    ../Base/interfaces/IEquatableComparator.h\n    ../Base/interfaces/IFinder.h\n    ../Base/interfaces/IHashCodeProvider.h\n    ../Base/interfaces/IIntervalMap.h\n    ../Base/interfaces/IIterable.h\n    ../Base/interfaces/IIterator.h\n    ../Base/interfaces/IList.h\n    ../Base/interfaces/IMatrix.h\n    ../Base/interfaces/IReverseIterable.h\n    ../Base/interfaces/IReverseIterator.h\n    ../Base/interfaces/ISizableCollection.h\n    ../Base/interfaces/ISkipIterator.h\n    ../Base/interfaces/ITwoDimensionalList.h\n    ../Base/interfaces/IValidator.h\n    ../Base/interfaces/IVisitor.h\n    ../Base/interfaces/Interval.h\n    ../Base/interfaces/Intervals.h\n    ../Base/interfaces/IterableComparator.h\n    ../Base/interfaces/IteratorComparator.h\n    ../Base/interfaces/LogStreamWriter.h\n    ../Base/interfaces/Pair.h\n    ../Base/interfaces/SharedPtr.h\n    ../Base/interfaces/StringComparable.h\n    ../Base/interfaces/StringEquality.h\n    ../Base/interfaces/StringSearch.h\n    ../Base/interfaces/Strings.h\n    ../Base/interfaces/Triple.h\n)\n\nset(BASE_SOURCES_FILES\n    ../Base/core/ClassType.cpp\n    ../Base/core/CompareToBuilder.cpp\n    ../Base/core/DateTime.cpp\n    ../Base/core/EqualBuilder.cpp\n    ../Base/core/KmpStringSearch.cpp\n    ../Base/core/LogStreamWriter.cpp\n    ../Base/core/Position.cpp\n    ../Base/core/PreCompiled.cpp\n    ../Base/core/SkipIterator.cpp\n    ../Base/core/StringComparable.cpp\n    ../Base/core/StringEquality.cpp\n    ../Base/core/StringSearch.cpp\n    ../Base/core/Strings.cpp\n)\n\nset(BASE_SOURCES\n    ${BASE_INCLUDES_FILES}\n    ${BASE_SOURCES_FILES}\n)\n\nset(BASE_INCLUDES\n    ../Base\n    ../Base/core\n    ../Base/interfaces\n)\n\nadd_library(Base STATIC\n    ${BASE_SOURCES}\n)\n\ninclude_directories(DataStructures\n    ${BASE_INCLUDES}\n    ${DATA_STRUCTURES_INCLUDES}\n)\n\nadd_library(DataStructures STATIC\n    ${BASE_SOURCES}\n    ${DATA_STRUCTURES_SOURCES}\n)\n\ninclude_directories(\r\n    ${BOOST_PATH}\r\n)\n"
  }
}